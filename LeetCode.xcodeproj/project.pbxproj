// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXBuildFile section */
		C402A06327EAAD050083C036 /* ConvertSortedArrayToBinarySearchTree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C402A06127EAAD050083C036 /* ConvertSortedArrayToBinarySearchTree.cpp */; };
		C402A06727EABFFB0083C036 /* ConstructBinaryTreeFromPreorderAndInorderTraversal.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C402A06527EABFFB0083C036 /* ConstructBinaryTreeFromPreorderAndInorderTraversal.cpp */; };
		C402A06B27EB4D840083C036 /* BinaryTreeZigzagLevelOrderTraversal.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C402A06927EB4D840083C036 /* BinaryTreeZigzagLevelOrderTraversal.cpp */; };
		C402A06F27EB70270083C036 /* BinaryTreeRightSideView.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C402A06D27EB70270083C036 /* BinaryTreeRightSideView.cpp */; };
		C402A07327EB7C460083C036 /* PathSumII.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C402A07127EB7C460083C036 /* PathSumII.cpp */; };
		C402A07727ECB3500083C036 /* DeleteNodeInABST.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C402A07527ECB3500083C036 /* DeleteNodeInABST.cpp */; };
		C42241DD27BC5EF300E5B034 /* main.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C42241DC27BC5EF300E5B034 /* main.cpp */; };
		C42241E327BC5F4100E5B034 /* ContainsDuplicate.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C42241E127BC5F4100E5B034 /* ContainsDuplicate.cpp */; };
		C42241E827BC6CA900E5B034 /* MaximumSubarray.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C42241E627BC6CA900E5B034 /* MaximumSubarray.cpp */; };
		C4549C4E2A053711006BB982 /* AddBinary.swift in Sources */ = {isa = PBXBuildFile; fileRef = C4549C4D2A053711006BB982 /* AddBinary.swift */; };
		C4549C502A0549DB006BB982 /* AddToArrayFormOfInteger.swift in Sources */ = {isa = PBXBuildFile; fileRef = C4549C4F2A0549DB006BB982 /* AddToArrayFormOfInteger.swift */; };
		C4549C532A06998E006BB982 /* DailyTemperatures .swift in Sources */ = {isa = PBXBuildFile; fileRef = C4549C522A06998E006BB982 /* DailyTemperatures .swift */; };
		C4549C552A06BB9B006BB982 /* LengthOfLastWord.swift in Sources */ = {isa = PBXBuildFile; fileRef = C4549C542A06BB9B006BB982 /* LengthOfLastWord.swift */; };
		C4549C572A07F062006BB982 /* RotateImage.swift in Sources */ = {isa = PBXBuildFile; fileRef = C4549C562A07F062006BB982 /* RotateImage.swift */; };
		C4549C592A092836006BB982 /* DetermineWhetherMatrixCanBeObtainedByRotation.swift in Sources */ = {isa = PBXBuildFile; fileRef = C4549C582A092836006BB982 /* DetermineWhetherMatrixCanBeObtainedByRotation.swift */; };
		C4549C5C2A0933E4006BB982 /* SpiralMatrix .swift in Sources */ = {isa = PBXBuildFile; fileRef = C4549C5B2A0933E4006BB982 /* SpiralMatrix .swift */; };
		C4549C602A0A1550006BB982 /* KClosestPointsToOrigin.swift in Sources */ = {isa = PBXBuildFile; fileRef = C4549C5F2A0A1550006BB982 /* KClosestPointsToOrigin.swift */; };
		C454CE892A1F945D006BB982 /* ArithmeticSubarrays .swift in Sources */ = {isa = PBXBuildFile; fileRef = C454CE882A1F945D006BB982 /* ArithmeticSubarrays .swift */; };
		C454CE8C2A1F9B50006BB982 /* N-aryTreeLevelOrderTraversal .swift in Sources */ = {isa = PBXBuildFile; fileRef = C454CE8B2A1F9B50006BB982 /* N-aryTreeLevelOrderTraversal .swift */; };
		C461DD3A29E18A9C00FB7CC0 /* ImplementStrStr.swift in Sources */ = {isa = PBXBuildFile; fileRef = C461DD3929E18A9C00FB7CC0 /* ImplementStrStr.swift */; };
		C461DD3C29E1AC7A00FB7CC0 /* BalancedBinaryTree.swift in Sources */ = {isa = PBXBuildFile; fileRef = C461DD3B29E1AC7A00FB7CC0 /* BalancedBinaryTree.swift */; };
		C461DD3F29E3E45200FB7CC0 /* MinimumDepthOfBinaryTree .swift in Sources */ = {isa = PBXBuildFile; fileRef = C461DD3E29E3E45200FB7CC0 /* MinimumDepthOfBinaryTree .swift */; };
		C461DD4229E6F5CA00FB7CC0 /* RepeatedSubstringPattern.swift in Sources */ = {isa = PBXBuildFile; fileRef = C461DD4129E6F5CA00FB7CC0 /* RepeatedSubstringPattern.swift */; };
		C461DD4429E858D100FB7CC0 /* EvaluateReversePolishNotation.swift in Sources */ = {isa = PBXBuildFile; fileRef = C461DD4329E858D100FB7CC0 /* EvaluateReversePolishNotation.swift */; };
		C461DD4629E99E7100FB7CC0 /* PlusOne.swift in Sources */ = {isa = PBXBuildFile; fileRef = C461DD4529E99E7100FB7CC0 /* PlusOne.swift */; };
		C461DD4829EAF2BC00FB7CC0 /* LinkedListInBinaryTree.swift in Sources */ = {isa = PBXBuildFile; fileRef = C461DD4729EAF2BC00FB7CC0 /* LinkedListInBinaryTree.swift */; };
		C461DD9229F172C900FB7CC0 /* MultiplyStrings.swift in Sources */ = {isa = PBXBuildFile; fileRef = C461DD9129F172C900FB7CC0 /* MultiplyStrings.swift */; };
		C481ECFD2802B7540022DEEC /* PermutationInString.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C481ECFB2802B7540022DEEC /* PermutationInString.cpp */; };
		C481ED0128047D380022DEEC /* FindAllAnagramsInAString.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C481ECFF28047D380022DEEC /* FindAllAnagramsInAString.cpp */; };
		C481ED06280482730022DEEC /* FloodFill.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C481ED04280482730022DEEC /* FloodFill.cpp */; };
		C481ED0A2805CFF50022DEEC /* 01Matrix.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C481ED082805CFF50022DEEC /* 01Matrix.cpp */; };
		C484BA782813C46E00CF92BD /* SubtreeOfAnotherTree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C484BA762813C46E00CF92BD /* SubtreeOfAnotherTree.cpp */; };
		C484BA7C281401C400CF92BD /* ShortestPathInBinaryMatrix.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C484BA7A281401C400CF92BD /* ShortestPathInBinaryMatrix.cpp */; };
		C484BA802815A2AE00CF92BD /* AllPathsFromSourceToTarget.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C484BA7E2815A2AE00CF92BD /* AllPathsFromSourceToTarget.cpp */; };
		C484BA84281631AE00CF92BD /* Subsets.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C484BA82281631AE00CF92BD /* Subsets.cpp */; };
		C484BA8D28183FE300CF92BD /* PermutationsII.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C484BA862816F08C00CF92BD /* PermutationsII.cpp */; };
		C484BA8E2818408400CF92BD /* SubsetsII.cpp in Sources */ = {isa = PBXBuildFile; fileRef = CB50F9852816CBC90097E359 /* SubsetsII.cpp */; };
		C484BA8F281844F400CF92BD /* CombinationSum.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C484BA8A28182A2100CF92BD /* CombinationSum.cpp */; };
		C484BA97281985AE00CF92BD /* LetterCombinationsOfAPhoneNumber.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C484BA95281985AE00CF92BD /* LetterCombinationsOfAPhoneNumber.cpp */; };
		C484BA9D281A312C00CF92BD /* CombinationSumII.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C484BA9128184A0D00CF92BD /* CombinationSumII.cpp */; };
		C484BAA1281A323400CF92BD /* WordSearch.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C484BA9F281A323400CF92BD /* WordSearch.cpp */; };
		C484BAA3281ADD8E00CF92BD /* GenerateParentheses.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C484BA9A2819988B00CF92BD /* GenerateParentheses.cpp */; };
		C484BAA7281ADE2100CF92BD /* HouseRobberII.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C484BAA5281ADE2100CF92BD /* HouseRobberII.cpp */; };
		C484BAAB281B7CB000CF92BD /* JumpGame.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C484BAA9281B7CB000CF92BD /* JumpGame.cpp */; };
		C484BAB0281C345E00CF92BD /* JumpGameII.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C484BAAE281C345E00CF92BD /* JumpGameII.cpp */; };
		C484BAB4281FAE1100CF92BD /* UniquePaths.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C484BAB2281FAE1100CF92BD /* UniquePaths.cpp */; };
		C484BAB92820E28600CF92BD /* ArithmeticSlices.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C484BAB72820E28600CF92BD /* ArithmeticSlices.cpp */; };
		C489C5D527CD173D002A6D34 /* BinaryTreeInorderTraversal.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C489C5D327CD173D002A6D34 /* BinaryTreeInorderTraversal.cpp */; };
		C489C5D927CD26A2002A6D34 /* BinaryTreePostorderTraversal.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C489C5D727CD26A2002A6D34 /* BinaryTreePostorderTraversal.cpp */; };
		C489C5DD27CEF8C3002A6D34 /* MaximumDepthOfBinaryTree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C489C5DB27CEF8C3002A6D34 /* MaximumDepthOfBinaryTree.cpp */; };
		C489C5E127D04687002A6D34 /* InvertBinaryTree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C489C5DF27D04687002A6D34 /* InvertBinaryTree.cpp */; };
		C489C5E527D0533C002A6D34 /* PathSum.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C489C5E327D0533C002A6D34 /* PathSum.cpp */; };
		C489C5E927D10DD6002A6D34 /* SearchInABinarySearchTree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C489C5E727D10DD6002A6D34 /* SearchInABinarySearchTree.cpp */; };
		C489C5ED27D11719002A6D34 /* InsertIntoABinarySearchTree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C489C5EB27D11719002A6D34 /* InsertIntoABinarySearchTree.cpp */; };
		C489C5F127D19ADF002A6D34 /* ValidateBinarySearchTree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C489C5EF27D19ADF002A6D34 /* ValidateBinarySearchTree.cpp */; };
		C48E9E6527DC41D40063E280 /* AddStrings.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C48E9E6327DC41D40063E280 /* AddStrings.cpp */; };
		C48E9E6927DC74880063E280 /* LongestPalindrome.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C48E9E6727DC74880063E280 /* LongestPalindrome.cpp */; };
		C48E9E6D27DC89540063E280 /* WordPattern.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C48E9E6B27DC89540063E280 /* WordPattern.cpp */; };
		C48E9E7127DCE6690063E280 /* PartitionLabels.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C48E9E6F27DCE6690063E280 /* PartitionLabels.cpp */; };
		C493919127FB4CB500E2CF01 /* BinarySearch.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C493918F27FB4CB500E2CF01 /* BinarySearch.cpp */; };
		C493919E27FC782D00E2CF01 /* ClimbTheStairs.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C493919D27FC782D00E2CF01 /* ClimbTheStairs.cpp */; };
		C49391A127FC783300E2CF01 /* EscapeFromTheGame.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C49391A027FC783300E2CF01 /* EscapeFromTheGame.cpp */; };
		C49391A527FC7C6D00E2CF01 /* FirstBadVersion.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C49391A327FC7C6D00E2CF01 /* FirstBadVersion.cpp */; };
		C49391A927FC8E0900E2CF01 /* SearchInsertPosition.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C49391A727FC8E0900E2CF01 /* SearchInsertPosition.cpp */; };
		C49664F3282383BB00E6FB57 /* LongestIncreasingSubsequence.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C49664F1282383BB00E6FB57 /* LongestIncreasingSubsequence.cpp */; };
		C49664F72824250000E6FB57 /* NumberOfLongestIncreasingSubsequence.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C49664F52824250000E6FB57 /* NumberOfLongestIncreasingSubsequence.cpp */; };
		C49664FB282581CD00E6FB57 /* LongestCommonSubsequence.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C49664F9282581CD00E6FB57 /* LongestCommonSubsequence.cpp */; };
		C49664FF28276A5100E6FB57 /* DeleteOperationForTwoStrings.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C49664FD28276A5100E6FB57 /* DeleteOperationForTwoStrings.cpp */; };
		C49665032827F5C100E6FB57 /* EditDistance.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C49665012827F5C100E6FB57 /* EditDistance.cpp */; };
		C4966507282C0C5D00E6FB57 /* CoinChange.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4966505282C0C5D00E6FB57 /* CoinChange.cpp */; };
		C49BE774280C2F29008ACB59 /* PowerOfTwo.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C49BE772280C2F29008ACB59 /* PowerOfTwo.cpp */; };
		C49BE778280C366C008ACB59 /* NumberOf1Bits.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C49BE776280C366C008ACB59 /* NumberOf1Bits.cpp */; };
		C49BE77C280C46AB008ACB59 /* ReverseBits.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C49BE77A280C46AB008ACB59 /* ReverseBits.cpp */; };
		C49BE784280C55C5008ACB59 /* FindFirstandLastPositionOfElementInSortedArray.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C49BE782280C55C5008ACB59 /* FindFirstandLastPositionOfElementInSortedArray.cpp */; };
		C49BE788280D554A008ACB59 /* SearchInRotatedSortedArray.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C49BE786280D554A008ACB59 /* SearchInRotatedSortedArray.cpp */; };
		C49BE78C280DA426008ACB59 /* FindMinimumInRotatedSortedArray.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C49BE78A280DA426008ACB59 /* FindMinimumInRotatedSortedArray.cpp */; };
		C49BE790280DAEBE008ACB59 /* FindPeakElement.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C49BE78E280DAEBE008ACB59 /* FindPeakElement.cpp */; };
		C49BE794280F0FB9008ACB59 /* ContainerWithMostWater.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C49BE792280F0FB9008ACB59 /* ContainerWithMostWater.cpp */; };
		C49BE79828105624008ACB59 /* SubarrayProductLessThanK.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C49BE79628105624008ACB59 /* SubarrayProductLessThanK.cpp */; };
		C49BE79F28123D0E008ACB59 /* NumberOfIslands.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C49BE79D28123D0E008ACB59 /* NumberOfIslands.cpp */; };
		C49BE7A32812FB88008ACB59 /* PopulatingNextRightPointersInEachNodeII.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C49BE7A12812FB88008ACB59 /* PopulatingNextRightPointersInEachNodeII.cpp */; };
		C4A0B01728223454003EECAF /* DecodeWays.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A0B01528223454003EECAF /* DecodeWays.cpp */; };
		C4A0B01B2822675A003EECAF /* WordBreak.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A0B0192822675A003EECAF /* WordBreak.cpp */; };
		C4A337D027BD561D00B1DBAD /* TwoSum.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A337CE27BD561D00B1DBAD /* TwoSum.cpp */; };
		C4A337D427BDDA9000B1DBAD /* MergeSortedArray.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A337D227BDDA9000B1DBAD /* MergeSortedArray.cpp */; };
		C4A337D827BE947F00B1DBAD /* IntersectionOfTwoArraysII.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A337D627BE947F00B1DBAD /* IntersectionOfTwoArraysII.cpp */; };
		C4A337DC27BF8F6D00B1DBAD /* BestTimeToBuyAndSellStock.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A337DA27BF8F6D00B1DBAD /* BestTimeToBuyAndSellStock.cpp */; };
		C4A511E227C9CEEA0004D026 /* RemoveDuplicatesFromSortedList.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A511E027C9CEEA0004D026 /* RemoveDuplicatesFromSortedList.cpp */; };
		C4A511E727CA68300004D026 /* ValidParentheses.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A511E527CA68300004D026 /* ValidParentheses.cpp */; };
		C4A511EB27CB25280004D026 /* ImplementQueueUsingStacks.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A511E927CB25280004D026 /* ImplementQueueUsingStacks.cpp */; };
		C4A511F027CC516F0004D026 /* BinaryTreePreorderTraversal.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A511EE27CC516F0004D026 /* BinaryTreePreorderTraversal.cpp */; };
		C4A511F427CC51C30004D026 /* TreeNode.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A511F227CC51C30004D026 /* TreeNode.cpp */; };
		C4A62F102843AE1200F404D6 /* SpecialArrayWithXElementsGreaterThanOrEqualX.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A62F0E2843AE1200F404D6 /* SpecialArrayWithXElementsGreaterThanOrEqualX.cpp */; };
		C4A62F142845032300F404D6 /* CountNegativeNumbersInASortedMatrix.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A62F122845032300F404D6 /* CountNegativeNumbersInASortedMatrix.cpp */; };
		C4A62F18284514F300F404D6 /* TheKWeakestRowsInAMatrix.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A62F16284514F300F404D6 /* TheKWeakestRowsInAMatrix.cpp */; };
		C4A62F1C284735CC00F404D6 /* CheckIfNAndItsDoubleExist.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A62F1A284735CC00F404D6 /* CheckIfNAndItsDoubleExist.cpp */; };
		C4A62F2028475BF900F404D6 /* SumOfSquareNumbers.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A62F1E28475BF900F404D6 /* SumOfSquareNumbers.cpp */; };
		C4A62F24284792EC00F404D6 /* MaximumDistanceBetweenAPairOfValues.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A62F22284792EC00F404D6 /* MaximumDistanceBetweenAPairOfValues.cpp */; };
		C4A62F282849D22A00F404D6 /* MonotonicArray.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A62F262849D22A00F404D6 /* MonotonicArray.cpp */; };
		C4A62F2C2849FB5800F404D6 /* ImplementStrStr().cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A62F2A2849FB5800F404D6 /* ImplementStrStr().cpp */; };
		C4A62F30284B01BA00F404D6 /* BalancedBinaryTree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A62F2E284B01BA00F404D6 /* BalancedBinaryTree.cpp */; };
		C4A62F36284B443D00F404D6 /* RepeatedSubstringPattern.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A62F34284B443D00F404D6 /* RepeatedSubstringPattern.cpp */; };
		C4A62F3A284C78CA00F404D6 /* EvaluateReversePolishNotation.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A62F38284C78CA00F404D6 /* EvaluateReversePolishNotation.cpp */; };
		C4A62F3E284C81AE00F404D6 /* PlusOne.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A62F3C284C81AD00F404D6 /* PlusOne.cpp */; };
		C4A62F42284C904E00F404D6 /* LinkedListInBinaryTree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A62F40284C904E00F404D6 /* LinkedListInBinaryTree.cpp */; };
		C4A62F47284D111F00F404D6 /* AddBinary.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A62F45284D111F00F404D6 /* AddBinary.cpp */; };
		C4A62F4B284E536800F404D6 /* AddToArrayFormOfInteger.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A62F49284E536800F404D6 /* AddToArrayFormOfInteger.cpp */; };
		C4A62F4F284FAD3900F404D6 /* LengthOfLastWord.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A62F4D284FAD3900F404D6 /* LengthOfLastWord.cpp */; };
		C4A62F532850F10700F404D6 /* DetermineWhetherMatrixCanBeObtainedByRotation.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A62F512850F10700F404D6 /* DetermineWhetherMatrixCanBeObtainedByRotation.cpp */; };
		C4A70756283FC015007F1A43 /* ArrangingCoins.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A70754283FC015007F1A43 /* ArrangingCoins.cpp */; };
		C4A7075C283FC398007F1A43 /* KthMissingPositiveNumber.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A7075A283FC398007F1A43 /* KthMissingPositiveNumber.cpp */; };
		C4A8859027C13E6600EC168C /* ReshapeTheMatrix.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A8858E27C13E6600EC168C /* ReshapeTheMatrix.cpp */; };
		C4A8859427C3E37F00EC168C /* Pascal'sTriangle.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A8859227C3E37F00EC168C /* Pascal'sTriangle.cpp */; };
		C4A8859827C471EC00EC168C /* ValidSudoku.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A8859627C471EC00EC168C /* ValidSudoku.cpp */; };
		C4A8859C27C5C4D900EC168C /* SearchA2DMatrix.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A8859A27C5C4D900EC168C /* SearchA2DMatrix.cpp */; };
		C4A885A127C670F900EC168C /* FirstUniqueCharacterInAString.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A8859F27C670F900EC168C /* FirstUniqueCharacterInAString.cpp */; };
		C4A885A527C9169200EC168C /* RemoveLinkedListElements.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A885A327C9169200EC168C /* RemoveLinkedListElements.cpp */; };
		C4A885A927C9269900EC168C /* ReverseLinkedList.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A885A727C9269900EC168C /* ReverseLinkedList.cpp */; };
		C4A9454E27D3303B00E452DC /* TwoSumIV.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A9454C27D3303B00E452DC /* TwoSumIV.cpp */; };
		C4A9455227D376CE00E452DC /* LowestCommonAncestorOfABinarySearchTree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A9455027D376CE00E452DC /* LowestCommonAncestorOfABinarySearchTree.cpp */; };
		C4A9455C27D3B08B00E452DC /* SingleNumber.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A9455A27D3B08B00E452DC /* SingleNumber.cpp */; };
		C4A9456027D4676E00E452DC /* MajorityElement.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A9455E27D4676E00E452DC /* MajorityElement.cpp */; };
		C4A9456427D4C70800E452DC /* 3Sum.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A9456227D4C70800E452DC /* 3Sum.cpp */; };
		C4A9456827D513AB00E452DC /* SortColors.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A9456627D513AB00E452DC /* SortColors.cpp */; };
		C4A9456B27D586F100E452DC /* Helper.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A9456927D586F100E452DC /* Helper.cpp */; };
		C4A9456F27D595AE00E452DC /* MergeIntervals.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A9456D27D595AE00E452DC /* MergeIntervals.cpp */; };
		C4A9457327D665FC00E452DC /* DesignHashMap.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A9457127D665FC00E452DC /* DesignHashMap.cpp */; };
		C4A9457727D6E5E300E452DC /* Pascal'sTriangleII.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A9457527D6E5E300E452DC /* Pascal'sTriangleII.cpp */; };
		C4A9457B27D82BD000E452DC /* SearchA2DMatrixII.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A9457927D82BD000E452DC /* SearchA2DMatrixII.cpp */; };
		C4A9457F27D8BA8C00E452DC /* Non-overlappingIntervals.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A9457D27D8BA8C00E452DC /* Non-overlappingIntervals.cpp */; };
		C4A9458327D98B2E00E452DC /* IncreasingTripletSubsequence.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A9458127D98B2E00E452DC /* IncreasingTripletSubsequence.cpp */; };
		C4A9458727DA4FA000E452DC /* ProductOfArrayExceptSelf.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A9458527DA4FA000E452DC /* ProductOfArrayExceptSelf.cpp */; };
		C4A9458B27DA593100E452DC /* SubarraySumEqualsK.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A9458927DA593100E452DC /* SubarraySumEqualsK.cpp */; };
		C4ABA57927FC979A00E64BA2 /* SquaresOfASortedArray.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4ABA57727FC979A00E64BA2 /* SquaresOfASortedArray.cpp */; };
		C4ABA58027FCA0B900E64BA2 /* RotateArray.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4ABA57E27FCA0B900E64BA2 /* RotateArray.cpp */; };
		C4ABA58427FDE69900E64BA2 /* MoveZeroes.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4ABA58227FDE69900E64BA2 /* MoveZeroes.cpp */; };
		C4ABA58827FDF83800E64BA2 /* TwoSumII-InputArrayIsSorted.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4ABA58627FDF83800E64BA2 /* TwoSumII-InputArrayIsSorted.cpp */; };
		C4ABA58C27FF46E500E64BA2 /* MiddleOfTheLinkedList.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4ABA58A27FF46E500E64BA2 /* MiddleOfTheLinkedList.cpp */; };
		C4ABA59027FFC3A400E64BA2 /* RemoveNthNodeFromEndOfList.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4ABA58E27FFC3A400E64BA2 /* RemoveNthNodeFromEndOfList.cpp */; };
		C4ABA594280090A000E64BA2 /* LongestSwipe.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4ABA592280090A000E64BA2 /* LongestSwipe.cpp */; };
		C4ABA5982801233800E64BA2 /* BossHome.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4ABA5962801233800E64BA2 /* BossHome.cpp */; };
		C4AC28F628015A1D0036E6DB /* LargestRectangleInHistogram.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4AC28F428015A1D0036E6DB /* LargestRectangleInHistogram.cpp */; };
		C4AC28FA2801D2310036E6DB /* MaximalRectangle.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4AC28F82801D2310036E6DB /* MaximalRectangle.cpp */; };
		C4AC28FF2801E8110036E6DB /* LongestSubstringWithoutRepeatingCharacters.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4AC28FD2801E8110036E6DB /* LongestSubstringWithoutRepeatingCharacters.cpp */; };
		C4AC722D282EB399006412A7 /* IntegerBreak.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4AC722B282EB399006412A7 /* IntegerBreak.cpp */; };
		C4AC723128314DAC006412A7 /* BitwiseAndOfNumbersRange.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4AC722F28314DAC006412A7 /* BitwiseAndOfNumbersRange.cpp */; };
		C4B2524327F4BB620040706B /* KthLargestElementInAnArray.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4B2524127F4BB620040706B /* KthLargestElementInAnArray.cpp */; };
		C4B2524727F73CE90040706B /* SortAnArray.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4B2524527F73CE80040706B /* SortAnArray.cpp */; };
		C4B2524B27F995F00040706B /* TopKFrequentElements.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4B2524927F995F00040706B /* TopKFrequentElements.cpp */; };
		C4B2524F27F9FA580040706B /* SortCharactersByFrequency.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4B2524D27F9FA580040706B /* SortCharactersByFrequency.cpp */; };
		C4B2525327FAE9B60040706B /* KClosestPointsToOrigin.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4B2525127FAE9B60040706B /* KClosestPointsToOrigin.cpp */; };
		C4B684472807116500B41B2F /* RottingOranges.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4B684452807116500B41B2F /* RottingOranges.cpp */; };
		C4B6844B2807B3FF00B41B2F /* Combinations.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4B684492807B3FF00B41B2F /* Combinations.cpp */; };
		C4B684502809013700B41B2F /* ClimbingStairs.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4B6844E2809013700B41B2F /* ClimbingStairs.cpp */; };
		C4B684552809B2C100B41B2F /* HouseRobber.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4B684532809B2C100B41B2F /* HouseRobber.cpp */; };
		C4C107E4280BE10C00326A66 /* Triangle.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4C107E2280BE10C00326A66 /* Triangle.cpp */; };
		C4C19DED2A2C38B900DD292D /* Company1Code.swift in Sources */ = {isa = PBXBuildFile; fileRef = C4C19DEC2A2C38B900DD292D /* Company1Code.swift */; };
		C4C19DEF2A2C395E00DD292D /* Company1Code.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4C19DEE2A2C395E00DD292D /* Company1Code.cpp */; };
		C4C9D34327E36B37007067BB /* AddTwoNumbers.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4C9D34127E36B37007067BB /* AddTwoNumbers.cpp */; };
		C4C9D34727E380BC007067BB /* LinkedListCycleII.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4C9D34527E380BC007067BB /* LinkedListCycleII.cpp */; };
		C4C9D34B27E4204D007067BB /* IntersectionOfTwoLinkedLists.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4C9D34927E4204D007067BB /* IntersectionOfTwoLinkedLists.cpp */; };
		C4C9D34F27E4ECB7007067BB /* RemoveDuplicatesFromSortedListII.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4C9D34D27E4ECB7007067BB /* RemoveDuplicatesFromSortedListII.cpp */; };
		C4C9D35327E5D1EA007067BB /* SwapNodesInPairs.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4C9D35127E5D1EA007067BB /* SwapNodesInPairs.cpp */; };
		C4C9D35727E616A5007067BB /* DesignLinkedList.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4C9D35527E616A5007067BB /* DesignLinkedList.cpp */; };
		C4C9D35B27E62FBD007067BB /* ReverseNodesInK-Group.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4C9D35927E62FBD007067BB /* ReverseNodesInK-Group.cpp */; };
		C4C9D35F27E7867D007067BB /* ReorderList.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4C9D35D27E7867D007067BB /* ReorderList.cpp */; };
		C4C9D36327E8B2E9007067BB /* MinStack.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4C9D36127E8B2E9007067BB /* MinStack.cpp */; };
		C4C9D36727E8DC71007067BB /* MinimumRemoveToMakeValidParentheses.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4C9D36527E8DC71007067BB /* MinimumRemoveToMakeValidParentheses.cpp */; };
		C4C9D36B27E9A817007067BB /* FindTheWinnerOfTheCircularGame.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4C9D36927E9A817007067BB /* FindTheWinnerOfTheCircularGame.cpp */; };
		C4CA0D5029B2333100ECEF6B /* CheckIfItIsAStraightLine .swift in Sources */ = {isa = PBXBuildFile; fileRef = C4CA0D4E29B08B5800ECEF6B /* CheckIfItIsAStraightLine .swift */; };
		C4CA0D5429B24F4800ECEF6B /* SumOfAllOddLengthSubarrays .swift in Sources */ = {isa = PBXBuildFile; fileRef = C4CA0D5229B24F4200ECEF6B /* SumOfAllOddLengthSubarrays .swift */; };
		C4CA0D5629B2E26D00ECEF6B /* MoveZeroes .swift in Sources */ = {isa = PBXBuildFile; fileRef = C4CA0D5529B2E26D00ECEF6B /* MoveZeroes .swift */; };
		C4CA0D5929B3A83100ECEF6B /* NextGreaterElementI .swift in Sources */ = {isa = PBXBuildFile; fileRef = C4CA0D5829B3A83100ECEF6B /* NextGreaterElementI .swift */; };
		C4CA0D5C29B4EAE700ECEF6B /* RichestCustomerWealth .swift in Sources */ = {isa = PBXBuildFile; fileRef = C4CA0D5B29B4EAE700ECEF6B /* RichestCustomerWealth .swift */; };
		C4CA0D5F29B4F20C00ECEF6B /* MatrixDiagonalSum .swift in Sources */ = {isa = PBXBuildFile; fileRef = C4CA0D5E29B4F20C00ECEF6B /* MatrixDiagonalSum .swift */; };
		C4CA0D6129B5DF2200ECEF6B /* ReshapeTheMatrix .swift in Sources */ = {isa = PBXBuildFile; fileRef = C4CA0D6029B5DF2200ECEF6B /* ReshapeTheMatrix .swift */; };
		C4CA0D6429B63D5F00ECEF6B /* MergeStringsAlternately .swift in Sources */ = {isa = PBXBuildFile; fileRef = C4CA0D6329B63D5F00ECEF6B /* MergeStringsAlternately .swift */; };
		C4CA0D6729B6460D00ECEF6B /* GoalParserInterpretation .swift in Sources */ = {isa = PBXBuildFile; fileRef = C4CA0D6629B6460D00ECEF6B /* GoalParserInterpretation .swift */; };
		C4CA0D6A29B7094B00ECEF6B /* FindTheDifference .swift in Sources */ = {isa = PBXBuildFile; fileRef = C4CA0D6929B7094B00ECEF6B /* FindTheDifference .swift */; };
		C4CA0D6D29B7110500ECEF6B /* ToLowerCase .swift in Sources */ = {isa = PBXBuildFile; fileRef = C4CA0D6C29B7110500ECEF6B /* ToLowerCase .swift */; };
		C4CA0D7029B715E600ECEF6B /* DecryptStringFromAlphabetToIntegerMapping .swift in Sources */ = {isa = PBXBuildFile; fileRef = C4CA0D6F29B715E600ECEF6B /* DecryptStringFromAlphabetToIntegerMapping .swift */; };
		C4CA0D7329B89C0900ECEF6B /* VerifyingAnAlienDictionary .swift in Sources */ = {isa = PBXBuildFile; fileRef = C4CA0D7229B89C0900ECEF6B /* VerifyingAnAlienDictionary .swift */; };
		C4CA0D7629B8BD3800ECEF6B /* ConvertBinaryNumberInALinkedListToInteger .swift in Sources */ = {isa = PBXBuildFile; fileRef = C4CA0D7529B8BD3800ECEF6B /* ConvertBinaryNumberInALinkedListToInteger .swift */; };
		C4CA0D7829B8DE6700ECEF6B /* ListNode.swift in Sources */ = {isa = PBXBuildFile; fileRef = C4CA0D7729B8DE6700ECEF6B /* ListNode.swift */; };
		C4CA0D7B29B8E47100ECEF6B /* MiddleOfTheLinkedList .swift in Sources */ = {isa = PBXBuildFile; fileRef = C4CA0D7A29B8E47100ECEF6B /* MiddleOfTheLinkedList .swift */; };
		C4CA0D7D29BC3FDA00ECEF6B /* MaximumDepthOfBinaryTree.swift in Sources */ = {isa = PBXBuildFile; fileRef = C4CA0D7C29BC3FDA00ECEF6B /* MaximumDepthOfBinaryTree.swift */; };
		C4CA0D7F29BC401900ECEF6B /* TreeNode.swift in Sources */ = {isa = PBXBuildFile; fileRef = C4CA0D7E29BC401900ECEF6B /* TreeNode.swift */; };
		C4CA0D8529BC4F0500ECEF6B /* SumOfLeftLeaves .swift in Sources */ = {isa = PBXBuildFile; fileRef = C4CA0D8429BC4F0500ECEF6B /* SumOfLeftLeaves .swift */; };
		C4CA0D8929BC7B2A00ECEF6B /* SortIntegersByTheNumberOf1Bits .swift in Sources */ = {isa = PBXBuildFile; fileRef = C4CA0D8829BC7B2A00ECEF6B /* SortIntegersByTheNumberOf1Bits .swift */; };
		C4CA0D8B29BCD9BD00ECEF6B /* ImplementQueueUsingStacks .swift in Sources */ = {isa = PBXBuildFile; fileRef = C4CA0D8A29BCD9BD00ECEF6B /* ImplementQueueUsingStacks .swift */; };
		C4CA0D8D29BCDBAF00ECEF6B /* ValidAnagram .swift in Sources */ = {isa = PBXBuildFile; fileRef = C4CA0D8C29BCDBAF00ECEF6B /* ValidAnagram .swift */; };
		C4CA0D8F29BDDAF100ECEF6B /* ContainsDuplicate .swift in Sources */ = {isa = PBXBuildFile; fileRef = C4CA0D8E29BDDAF100ECEF6B /* ContainsDuplicate .swift */; };
		C4CA0D9329BE2DD000ECEF6B /* DesignParkingSystem .swift in Sources */ = {isa = PBXBuildFile; fileRef = C4CA0D9229BE2DD000ECEF6B /* DesignParkingSystem .swift */; };
		C4CA0D9629BE32C000ECEF6B /* RangeSumQuery.swift in Sources */ = {isa = PBXBuildFile; fileRef = C4CA0D9529BE32C000ECEF6B /* RangeSumQuery.swift */; };
		C4CA0D9929BF6A8E00ECEF6B /* LongestCommonPrefix .swift in Sources */ = {isa = PBXBuildFile; fileRef = C4CA0D9829BF6A8E00ECEF6B /* LongestCommonPrefix .swift */; };
		C4CA0D9C29C09B1C00ECEF6B /* Pow(x, n) .swift in Sources */ = {isa = PBXBuildFile; fileRef = C4CA0D9B29C09B1B00ECEF6B /* Pow(x, n) .swift */; };
		C4CA0D9F29C0CD7D00ECEF6B /* SetMatrixZeroes .swift in Sources */ = {isa = PBXBuildFile; fileRef = C4CA0D9E29C0CD7D00ECEF6B /* SetMatrixZeroes .swift */; };
		C4CA0DA429C330B700ECEF6B /* ValidPalindrome .swift in Sources */ = {isa = PBXBuildFile; fileRef = C4CA0DA329C330B700ECEF6B /* ValidPalindrome .swift */; };
		C4CA0DA729C478C900ECEF6B /* LongestConsecutiveSequence .swift in Sources */ = {isa = PBXBuildFile; fileRef = C4CA0DA629C478C800ECEF6B /* LongestConsecutiveSequence .swift */; };
		C4CA0DA929C4C64500ECEF6B /* MonotonicArray .swift in Sources */ = {isa = PBXBuildFile; fileRef = C4CA0DA829C4C64500ECEF6B /* MonotonicArray .swift */; };
		C4CF8F23283D2A1600FB1118 /* Sqrt(x).cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4CF8F21283D2A1600FB1118 /* Sqrt(x).cpp */; };
		C4CF8F27283D2DF200FB1118 /* FindSmallestLetterGreaterThanTarget.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4CF8F25283D2DF200FB1118 /* FindSmallestLetterGreaterThanTarget.cpp */; };
		C4D97F192833D26200D889A0 /* ShuffleAnArray.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4D97F172833D26200D889A0 /* ShuffleAnArray.cpp */; };
		C4D97F1D2833E18400D889A0 /* HappyNumber.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4D97F1B2833E18400D889A0 /* HappyNumber.cpp */; };
		C4E3856D27EE2A820024DDFF /* KthSmallestElementInABST.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4E3856B27EE2A820024DDFF /* KthSmallestElementInABST.cpp */; };
		C4E3857127EEBBDC0024DDFF /* BinarySearchTreeIterator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4E3856F27EEBBDC0024DDFF /* BinarySearchTreeIterator.cpp */; };
		C4E3857527EF2C060024DDFF /* LowestCommonAncestorOfABinaryTree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4E3857327EF2C060024DDFF /* LowestCommonAncestorOfABinaryTree.cpp */; };
		C4E3857927F0150A0024DDFF /* SerializeAndDeserializeBinaryTree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4E3857727F0150A0024DDFF /* SerializeAndDeserializeBinaryTree.cpp */; };
		C4E3857E27F1F28F0024DDFF /* FindTheTownJudge.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4E3857C27F1F28F0024DDFF /* FindTheTownJudge.cpp */; };
		C4E3858227F20BD40024DDFF /* MinimumNumberOfVerticesToReachAllNodes.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4E3858027F20BD40024DDFF /* MinimumNumberOfVerticesToReachAllNodes.cpp */; };
		C4E3858627F2AAE10024DDFF /* KeysAndRooms.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4E3858427F2AAE10024DDFF /* KeysAndRooms.cpp */; };
		C4E610F427DE510600B56DED /* GroupAnagrams.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4E610F227DE510600B56DED /* GroupAnagrams.cpp */; };
		C4E610F827DF7B1A00B56DED /* MultiplyStrings.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4E610F627DF7B1A00B56DED /* MultiplyStrings.cpp */; };
		C4E610FC27DFA2CD00B56DED /* RepeatedDNASequences.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4E610FA27DFA2CD00B56DED /* RepeatedDNASequences.cpp */; };
		C4E6110027E0F8F000B56DED /* LongestPalindromicSubstring.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4E610FE27E0F8F000B56DED /* LongestPalindromicSubstring.cpp */; };
		C4EB183D296964580069717E /* B096.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4EB183B296964580069717E /* B096.cpp */; };
		C4F60AD028352F10006B990F /* MaxPointsOnALine.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4F60ACE28352F10006B990F /* MaxPointsOnALine.cpp */; };
		C4F60AD628392E7F006B990F /* GuessNumberHigherOrLower.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4F60AD428392E7F006B990F /* GuessNumberHigherOrLower.cpp */; };
		C4F60ADA28393581006B990F /* PeakIndexInAMountainArray.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4F60AD828393581006B990F /* PeakIndexInAMountainArray.cpp */; };
		C4F60ADE283A1302006B990F /* ValidPerfectSquare.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4F60ADC283A1302006B990F /* ValidPerfectSquare.cpp */; };
		C4F60AE2283BDDC5006B990F /* FindTheDistanceValueBetweenTwoArrays.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4F60AE0283BDDC5006B990F /* FindTheDistanceValueBetweenTwoArrays.cpp */; };
		C4FC5ED729A384FA001CDED1 /* main.swift in Sources */ = {isa = PBXBuildFile; fileRef = C4FC5ED629A384FA001CDED1 /* main.swift */; };
		C4FC5EF029A3858E001CDED1 /* CountOddNumbersInAnIntervalRange.swift in Sources */ = {isa = PBXBuildFile; fileRef = C4FC5ECE29A38410001CDED1 /* CountOddNumbersInAnIntervalRange.swift */; };
		C4FC5EF329A3C3B6001CDED1 /* AverageSalaryExcludingTheMinimumAndMaximumSalary .swift in Sources */ = {isa = PBXBuildFile; fileRef = C4FC5EF229A3C3B6001CDED1 /* AverageSalaryExcludingTheMinimumAndMaximumSalary .swift */; };
		C4FC5EF529A497EC001CDED1 /* NumberOf1Bits.swift in Sources */ = {isa = PBXBuildFile; fileRef = C4FC5EF429A497EC001CDED1 /* NumberOf1Bits.swift */; };
		C4FC5EF829A4A380001CDED1 /* SubtractTheProductAndSumOfDigitsOfAnInteger .swift in Sources */ = {isa = PBXBuildFile; fileRef = C4FC5EF729A4A380001CDED1 /* SubtractTheProductAndSumOfDigitsOfAnInteger .swift */; };
		C4FC5EFB29A4B509001CDED1 /* LargestPerimeterTriangle .swift in Sources */ = {isa = PBXBuildFile; fileRef = C4FC5EFA29A4B509001CDED1 /* LargestPerimeterTriangle .swift */; };
		C4FC5EFE29A66583001CDED1 /* FindNearestPointThatHasTheSameXOrYCoordinate.swift in Sources */ = {isa = PBXBuildFile; fileRef = C4FC5EFD29A66583001CDED1 /* FindNearestPointThatHasTheSameXOrYCoordinate.swift */; };
		C4FC5F0129A900D5001CDED1 /* SignOfTheProductOfAnArray .swift in Sources */ = {isa = PBXBuildFile; fileRef = C4FC5F0029A900D5001CDED1 /* SignOfTheProductOfAnArray .swift */; };
		C4FC5F0429AA5C77001CDED1 /* CanMakeArithmeticProgressionFromSequence .swift in Sources */ = {isa = PBXBuildFile; fileRef = C4FC5F0329AA5C77001CDED1 /* CanMakeArithmeticProgressionFromSequence .swift */; };
		C4FC5F0629ABAF09001CDED1 /* HappyNumber .swift in Sources */ = {isa = PBXBuildFile; fileRef = C4FC5F0529ABAF09001CDED1 /* HappyNumber .swift */; };
		C4FC5F0929AD0975001CDED1 /* CheckIfOneStringSwapCanMakeStringsEqual .swift in Sources */ = {isa = PBXBuildFile; fileRef = C4FC5F0829AD0975001CDED1 /* CheckIfOneStringSwapCanMakeStringsEqual .swift */; };
		C4FC5F0C29AE5B66001CDED1 /* N-aryTreePreorderTraversal .swift in Sources */ = {isa = PBXBuildFile; fileRef = C4FC5F0B29AE5B66001CDED1 /* N-aryTreePreorderTraversal .swift */; };
		C4FC5F0E29AE5B9D001CDED1 /* Node.swift in Sources */ = {isa = PBXBuildFile; fileRef = C4FC5F0D29AE5B9D001CDED1 /* Node.swift */; };
		CB15A52B27C730A900B4AFA1 /* RansomNote.cpp in Sources */ = {isa = PBXBuildFile; fileRef = CB15A52927C730A900B4AFA1 /* RansomNote.cpp */; };
		CB15B67727C7A94B00B4AFA1 /* ValidAnagram.cpp in Sources */ = {isa = PBXBuildFile; fileRef = CB15B67527C7A94A00B4AFA1 /* ValidAnagram.cpp */; };
		CB15B67E27C7B2FC00B4AFA1 /* LinkedListCycle.cpp in Sources */ = {isa = PBXBuildFile; fileRef = CB15B67C27C7B2FB00B4AFA1 /* LinkedListCycle.cpp */; };
		CB15B67F27C7B33300B4AFA1 /* ListNode.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C4A043241D8916C000551755 /* ListNode.cpp */; };
		CB15B68327C876B500B4AFA1 /* MergeTwoSortedLists.cpp in Sources */ = {isa = PBXBuildFile; fileRef = CB15B68127C876B500B4AFA1 /* MergeTwoSortedLists.cpp */; };
		CB15D99227CE563400B4AFA1 /* BinaryTreeLevelOrderTraversal.cpp in Sources */ = {isa = PBXBuildFile; fileRef = CB15D99027CE563300B4AFA1 /* BinaryTreeLevelOrderTraversal.cpp */; };
		CB15D99627CF0AB400B4AFA1 /* SymmetricTree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = CB15D99427CF0AB400B4AFA1 /* SymmetricTree.cpp */; };
		CB2C413027FF10EF00A3658A /* ReverseString.cpp in Sources */ = {isa = PBXBuildFile; fileRef = CB2C412E27FF10EE00A3658A /* ReverseString.cpp */; };
		CB2C413427FF145D00A3658A /* ReverseWordsInAStringIII.cpp in Sources */ = {isa = PBXBuildFile; fileRef = CB2C413227FF145D00A3658A /* ReverseWordsInAStringIII.cpp */; };
		CB619F7328051C6500E5E737 /* MaxAreaOfIsland.cpp in Sources */ = {isa = PBXBuildFile; fileRef = CB619F7128051C6500E5E737 /* MaxAreaOfIsland.cpp */; };
		CB61B0EF28056F9D00E5E737 /* MergeTwoBinaryTrees.cpp in Sources */ = {isa = PBXBuildFile; fileRef = CB61B0ED28056F9A00E5E737 /* MergeTwoBinaryTrees.cpp */; };
		CB61B0F32805A63A00E5E737 /* PopulatingNextRightPointersInEachNode.cpp in Sources */ = {isa = PBXBuildFile; fileRef = CB61B0F12805A63A00E5E737 /* PopulatingNextRightPointersInEachNode.cpp */; };
		CB61B0F62805A71800E5E737 /* Node.cpp in Sources */ = {isa = PBXBuildFile; fileRef = CB61B0F42805A71800E5E737 /* Node.cpp */; };
		CB624D78280ED77C00BED7B6 /* BackspaceStringCompare.cpp in Sources */ = {isa = PBXBuildFile; fileRef = CB624D76280ED77C00BED7B6 /* BackspaceStringCompare.cpp */; };
		CB624D7C280EE37800BED7B6 /* IntervalListIntersections.cpp in Sources */ = {isa = PBXBuildFile; fileRef = CB624D7A280EE37800BED7B6 /* IntervalListIntersections.cpp */; };
		CB625F1428115E6700BED7B6 /* MinimumSizeSubarraySum.cpp in Sources */ = {isa = PBXBuildFile; fileRef = CB625F1228115E6700BED7B6 /* MinimumSizeSubarraySum.cpp */; };
		CB761DB82812A48A0075CA1B /* NumberOfProvinces.cpp in Sources */ = {isa = PBXBuildFile; fileRef = CB761DB62812A48A0075CA1B /* NumberOfProvinces.cpp */; };
		CB761DF3281554C90075CA1B /* SurroundedRegions.cpp in Sources */ = {isa = PBXBuildFile; fileRef = CB761DF1281554C90075CA1B /* SurroundedRegions.cpp */; };
		CB8C3C2A27D7515F00576C6D /* RotateImage.cpp in Sources */ = {isa = PBXBuildFile; fileRef = CB8C3C2827D7515E00576C6D /* RotateImage.cpp */; };
		CB8C3C2E27D77CA000576C6D /* SpiralMatrixII.cpp in Sources */ = {isa = PBXBuildFile; fileRef = CB8C3C2C27D77C9F00576C6D /* SpiralMatrixII.cpp */; };
		CBFE2433280830EC00B191C1 /* Permutations.cpp in Sources */ = {isa = PBXBuildFile; fileRef = CBFE2431280830EC00B191C1 /* Permutations.cpp */; };
		CBFE24372808500D00B191C1 /* LetterCasePermutation.cpp in Sources */ = {isa = PBXBuildFile; fileRef = CBFE24352808500C00B191C1 /* LetterCasePermutation.cpp */; };
/* End PBXBuildFile section */

/* Begin PBXCopyFilesBuildPhase section */
		C42241D827BC5EF300E5B034 /* CopyFiles */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = /usr/share/man/man1/;
			dstSubfolderSpec = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 1;
		};
		C4FC5ED229A384FA001CDED1 /* CopyFiles */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = /usr/share/man/man1/;
			dstSubfolderSpec = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 1;
		};
/* End PBXCopyFilesBuildPhase section */

/* Begin PBXFileReference section */
		C402A06127EAAD050083C036 /* ConvertSortedArrayToBinarySearchTree.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = ConvertSortedArrayToBinarySearchTree.cpp; sourceTree = "<group>"; };
		C402A06227EAAD050083C036 /* ConvertSortedArrayToBinarySearchTree.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = ConvertSortedArrayToBinarySearchTree.hpp; sourceTree = "<group>"; };
		C402A06527EABFFB0083C036 /* ConstructBinaryTreeFromPreorderAndInorderTraversal.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = ConstructBinaryTreeFromPreorderAndInorderTraversal.cpp; sourceTree = "<group>"; };
		C402A06627EABFFB0083C036 /* ConstructBinaryTreeFromPreorderAndInorderTraversal.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = ConstructBinaryTreeFromPreorderAndInorderTraversal.hpp; sourceTree = "<group>"; };
		C402A06927EB4D840083C036 /* BinaryTreeZigzagLevelOrderTraversal.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = BinaryTreeZigzagLevelOrderTraversal.cpp; sourceTree = "<group>"; };
		C402A06A27EB4D840083C036 /* BinaryTreeZigzagLevelOrderTraversal.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = BinaryTreeZigzagLevelOrderTraversal.hpp; sourceTree = "<group>"; };
		C402A06D27EB70270083C036 /* BinaryTreeRightSideView.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = BinaryTreeRightSideView.cpp; sourceTree = "<group>"; };
		C402A06E27EB70270083C036 /* BinaryTreeRightSideView.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = BinaryTreeRightSideView.hpp; sourceTree = "<group>"; };
		C402A07127EB7C460083C036 /* PathSumII.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = PathSumII.cpp; sourceTree = "<group>"; };
		C402A07227EB7C460083C036 /* PathSumII.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = PathSumII.hpp; sourceTree = "<group>"; };
		C402A07527ECB3500083C036 /* DeleteNodeInABST.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = DeleteNodeInABST.cpp; sourceTree = "<group>"; };
		C402A07627ECB3500083C036 /* DeleteNodeInABST.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = DeleteNodeInABST.hpp; sourceTree = "<group>"; };
		C4130DAB1D40AC0C00AB673F /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		C4130DB61D40BE9800AB673F /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		C416E6A91D9CC0400039047D /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		C419D2451D4B244B000B4F20 /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		C419D2501D4B3AED000B4F20 /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		C419D25B1D4B6A63000B4F20 /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		C419D2661D4DDEE7000B4F20 /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		C419D2941D4EF604000B4F20 /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		C4209A2A1D532F80009DB1E7 /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		C42241DA27BC5EF300E5B034 /* LeetCode-main */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; includeInIndex = 0; path = "LeetCode-main"; sourceTree = BUILT_PRODUCTS_DIR; };
		C42241DC27BC5EF300E5B034 /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		C42241E127BC5F4100E5B034 /* ContainsDuplicate.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = ContainsDuplicate.cpp; sourceTree = "<group>"; };
		C42241E227BC5F4100E5B034 /* ContainsDuplicate.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = ContainsDuplicate.hpp; sourceTree = "<group>"; };
		C42241E427BC601F00E5B034 /* PrefixHeader.pch */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = PrefixHeader.pch; sourceTree = "<group>"; };
		C42241E627BC6CA900E5B034 /* MaximumSubarray.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = MaximumSubarray.cpp; sourceTree = "<group>"; };
		C42241E727BC6CA900E5B034 /* MaximumSubarray.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = MaximumSubarray.hpp; sourceTree = "<group>"; };
		C42A7B221D864E400039DE1B /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		C43616951D99181500FB468B /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		C438E2B81D48973D00DDA9D3 /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		C438E2C31D49CADF00DDA9D3 /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		C438E2CE1D49ED7B00DDA9D3 /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		C43C86C51D5B10E300D3712C /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		C43C86D11D5D5B4E00D3712C /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		C44BB8401D45BB150058B979 /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		C44BB84B1D45E77B0058B979 /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		C44BB8561D46EA390058B979 /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		C44BB8611D4729B90058B979 /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		C44BB86C1D4743510058B979 /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		C44BB8771D4836B10058B979 /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		C44BB8821D4856A50058B979 /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		C44BB8981D4887D80058B979 /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		C452371B1D5848BE00205120 /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		C4549C4D2A053711006BB982 /* AddBinary.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AddBinary.swift; sourceTree = "<group>"; };
		C4549C4F2A0549DB006BB982 /* AddToArrayFormOfInteger.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AddToArrayFormOfInteger.swift; sourceTree = "<group>"; };
		C4549C522A06998E006BB982 /* DailyTemperatures .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "DailyTemperatures .swift"; sourceTree = "<group>"; };
		C4549C542A06BB9B006BB982 /* LengthOfLastWord.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = LengthOfLastWord.swift; sourceTree = "<group>"; };
		C4549C562A07F062006BB982 /* RotateImage.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RotateImage.swift; sourceTree = "<group>"; };
		C4549C582A092836006BB982 /* DetermineWhetherMatrixCanBeObtainedByRotation.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = DetermineWhetherMatrixCanBeObtainedByRotation.swift; sourceTree = "<group>"; };
		C4549C5B2A0933E4006BB982 /* SpiralMatrix .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "SpiralMatrix .swift"; sourceTree = "<group>"; };
		C4549C5D2A093566006BB982 /* spiral.jpg */ = {isa = PBXFileReference; lastKnownFileType = image.jpeg; path = spiral.jpg; sourceTree = "<group>"; };
		C4549C5E2A093566006BB982 /* spiral1.jpg */ = {isa = PBXFileReference; lastKnownFileType = image.jpeg; path = spiral1.jpg; sourceTree = "<group>"; };
		C4549C5F2A0A1550006BB982 /* KClosestPointsToOrigin.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = KClosestPointsToOrigin.swift; sourceTree = "<group>"; };
		C454CE882A1F945D006BB982 /* ArithmeticSubarrays .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "ArithmeticSubarrays .swift"; sourceTree = "<group>"; };
		C454CE8B2A1F9B50006BB982 /* N-aryTreeLevelOrderTraversal .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "N-aryTreeLevelOrderTraversal .swift"; sourceTree = "<group>"; };
		C454CE8D2A1F9BB8006BB982 /* narytreeexample.png */ = {isa = PBXFileReference; lastKnownFileType = image.png; path = narytreeexample.png; sourceTree = "<group>"; };
		C45620F21D94C50D008F81B9 /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		C461DD3929E18A9C00FB7CC0 /* ImplementStrStr.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ImplementStrStr.swift; sourceTree = "<group>"; };
		C461DD3B29E1AC7A00FB7CC0 /* BalancedBinaryTree.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BalancedBinaryTree.swift; sourceTree = "<group>"; };
		C461DD3E29E3E45200FB7CC0 /* MinimumDepthOfBinaryTree .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "MinimumDepthOfBinaryTree .swift"; sourceTree = "<group>"; };
		C461DD4029E3F1D400FB7CC0 /* ex_depth.jpg */ = {isa = PBXFileReference; lastKnownFileType = image.jpeg; path = ex_depth.jpg; sourceTree = "<group>"; };
		C461DD4129E6F5CA00FB7CC0 /* RepeatedSubstringPattern.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RepeatedSubstringPattern.swift; sourceTree = "<group>"; };
		C461DD4329E858D100FB7CC0 /* EvaluateReversePolishNotation.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = EvaluateReversePolishNotation.swift; sourceTree = "<group>"; };
		C461DD4529E99E7100FB7CC0 /* PlusOne.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = PlusOne.swift; sourceTree = "<group>"; };
		C461DD4729EAF2BC00FB7CC0 /* LinkedListInBinaryTree.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = LinkedListInBinaryTree.swift; sourceTree = "<group>"; };
		C461DD9129F172C900FB7CC0 /* MultiplyStrings.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MultiplyStrings.swift; sourceTree = "<group>"; };
		C4635AEA1D7BC5830012CD4B /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		C4635AF51D7C17EE0012CD4B /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		C481ECFB2802B7540022DEEC /* PermutationInString.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = PermutationInString.cpp; sourceTree = "<group>"; };
		C481ECFC2802B7540022DEEC /* PermutationInString.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = PermutationInString.hpp; sourceTree = "<group>"; };
		C481ECFF28047D380022DEEC /* FindAllAnagramsInAString.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = FindAllAnagramsInAString.cpp; sourceTree = "<group>"; };
		C481ED0028047D380022DEEC /* FindAllAnagramsInAString.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = FindAllAnagramsInAString.hpp; sourceTree = "<group>"; };
		C481ED04280482730022DEEC /* FloodFill.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = FloodFill.cpp; sourceTree = "<group>"; };
		C481ED05280482730022DEEC /* FloodFill.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = FloodFill.hpp; sourceTree = "<group>"; };
		C481ED082805CFF50022DEEC /* 01Matrix.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = 01Matrix.cpp; sourceTree = "<group>"; };
		C481ED092805CFF50022DEEC /* 01Matrix.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = 01Matrix.hpp; sourceTree = "<group>"; };
		C484BA762813C46E00CF92BD /* SubtreeOfAnotherTree.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = SubtreeOfAnotherTree.cpp; sourceTree = "<group>"; };
		C484BA772813C46E00CF92BD /* SubtreeOfAnotherTree.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = SubtreeOfAnotherTree.hpp; sourceTree = "<group>"; };
		C484BA7A281401C400CF92BD /* ShortestPathInBinaryMatrix.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = ShortestPathInBinaryMatrix.cpp; sourceTree = "<group>"; };
		C484BA7B281401C400CF92BD /* ShortestPathInBinaryMatrix.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = ShortestPathInBinaryMatrix.hpp; sourceTree = "<group>"; };
		C484BA7E2815A2AE00CF92BD /* AllPathsFromSourceToTarget.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = AllPathsFromSourceToTarget.cpp; sourceTree = "<group>"; };
		C484BA7F2815A2AE00CF92BD /* AllPathsFromSourceToTarget.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = AllPathsFromSourceToTarget.hpp; sourceTree = "<group>"; };
		C484BA82281631AE00CF92BD /* Subsets.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = Subsets.cpp; sourceTree = "<group>"; };
		C484BA83281631AE00CF92BD /* Subsets.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = Subsets.hpp; sourceTree = "<group>"; };
		C484BA862816F08C00CF92BD /* PermutationsII.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = PermutationsII.cpp; sourceTree = "<group>"; };
		C484BA872816F08C00CF92BD /* PermutationsII.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = PermutationsII.hpp; sourceTree = "<group>"; };
		C484BA8A28182A2100CF92BD /* CombinationSum.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = CombinationSum.cpp; sourceTree = "<group>"; };
		C484BA8B28182A2100CF92BD /* CombinationSum.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = CombinationSum.hpp; sourceTree = "<group>"; };
		C484BA9128184A0D00CF92BD /* CombinationSumII.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = CombinationSumII.cpp; sourceTree = "<group>"; };
		C484BA9228184A0D00CF92BD /* CombinationSumII.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = CombinationSumII.hpp; sourceTree = "<group>"; };
		C484BA95281985AE00CF92BD /* LetterCombinationsOfAPhoneNumber.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = LetterCombinationsOfAPhoneNumber.cpp; sourceTree = "<group>"; };
		C484BA96281985AE00CF92BD /* LetterCombinationsOfAPhoneNumber.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = LetterCombinationsOfAPhoneNumber.hpp; sourceTree = "<group>"; };
		C484BA982819868400CF92BD /* 200px-Telephone-keypad2.svg.webp */ = {isa = PBXFileReference; lastKnownFileType = file; path = "200px-Telephone-keypad2.svg.webp"; sourceTree = "<group>"; };
		C484BA9A2819988B00CF92BD /* GenerateParentheses.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = GenerateParentheses.cpp; sourceTree = "<group>"; };
		C484BA9B2819988B00CF92BD /* GenerateParentheses.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = GenerateParentheses.hpp; sourceTree = "<group>"; };
		C484BA9F281A323400CF92BD /* WordSearch.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = WordSearch.cpp; sourceTree = "<group>"; };
		C484BAA0281A323400CF92BD /* WordSearch.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = WordSearch.hpp; sourceTree = "<group>"; };
		C484BAA2281A32F000CF92BD /* word2.jpeg */ = {isa = PBXFileReference; lastKnownFileType = image.jpeg; path = word2.jpeg; sourceTree = "<group>"; };
		C484BAA5281ADE2100CF92BD /* HouseRobberII.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = HouseRobberII.cpp; sourceTree = "<group>"; };
		C484BAA6281ADE2100CF92BD /* HouseRobberII.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = HouseRobberII.hpp; sourceTree = "<group>"; };
		C484BAA9281B7CB000CF92BD /* JumpGame.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = JumpGame.cpp; sourceTree = "<group>"; };
		C484BAAA281B7CB000CF92BD /* JumpGame.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = JumpGame.hpp; sourceTree = "<group>"; };
		C484BAAE281C345E00CF92BD /* JumpGameII.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = JumpGameII.cpp; sourceTree = "<group>"; };
		C484BAAF281C345E00CF92BD /* JumpGameII.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = JumpGameII.hpp; sourceTree = "<group>"; };
		C484BAB2281FAE1100CF92BD /* UniquePaths.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = UniquePaths.cpp; sourceTree = "<group>"; };
		C484BAB3281FAE1100CF92BD /* UniquePaths.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = UniquePaths.hpp; sourceTree = "<group>"; };
		C484BAB5281FD35B00CF92BD /* robot_maze.png */ = {isa = PBXFileReference; lastKnownFileType = image.png; path = robot_maze.png; sourceTree = "<group>"; };
		C484BAB72820E28600CF92BD /* ArithmeticSlices.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = ArithmeticSlices.cpp; sourceTree = "<group>"; };
		C484BAB82820E28600CF92BD /* ArithmeticSlices.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = ArithmeticSlices.hpp; sourceTree = "<group>"; };
		C489C5D327CD173D002A6D34 /* BinaryTreeInorderTraversal.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = BinaryTreeInorderTraversal.cpp; sourceTree = "<group>"; };
		C489C5D427CD173D002A6D34 /* BinaryTreeInorderTraversal.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = BinaryTreeInorderTraversal.hpp; sourceTree = "<group>"; };
		C489C5D727CD26A2002A6D34 /* BinaryTreePostorderTraversal.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = BinaryTreePostorderTraversal.cpp; sourceTree = "<group>"; };
		C489C5D827CD26A2002A6D34 /* BinaryTreePostorderTraversal.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = BinaryTreePostorderTraversal.hpp; sourceTree = "<group>"; };
		C489C5DB27CEF8C3002A6D34 /* MaximumDepthOfBinaryTree.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = MaximumDepthOfBinaryTree.cpp; sourceTree = "<group>"; };
		C489C5DC27CEF8C3002A6D34 /* MaximumDepthOfBinaryTree.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = MaximumDepthOfBinaryTree.hpp; sourceTree = "<group>"; };
		C489C5DF27D04687002A6D34 /* InvertBinaryTree.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = InvertBinaryTree.cpp; sourceTree = "<group>"; };
		C489C5E027D04687002A6D34 /* InvertBinaryTree.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = InvertBinaryTree.hpp; sourceTree = "<group>"; };
		C489C5E327D0533C002A6D34 /* PathSum.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = PathSum.cpp; sourceTree = "<group>"; };
		C489C5E427D0533C002A6D34 /* PathSum.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = PathSum.hpp; sourceTree = "<group>"; };
		C489C5E727D10DD6002A6D34 /* SearchInABinarySearchTree.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = SearchInABinarySearchTree.cpp; sourceTree = "<group>"; };
		C489C5E827D10DD6002A6D34 /* SearchInABinarySearchTree.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = SearchInABinarySearchTree.hpp; sourceTree = "<group>"; };
		C489C5EB27D11719002A6D34 /* InsertIntoABinarySearchTree.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = InsertIntoABinarySearchTree.cpp; sourceTree = "<group>"; };
		C489C5EC27D11719002A6D34 /* InsertIntoABinarySearchTree.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = InsertIntoABinarySearchTree.hpp; sourceTree = "<group>"; };
		C489C5EF27D19ADF002A6D34 /* ValidateBinarySearchTree.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = ValidateBinarySearchTree.cpp; sourceTree = "<group>"; };
		C489C5F027D19ADF002A6D34 /* ValidateBinarySearchTree.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = ValidateBinarySearchTree.hpp; sourceTree = "<group>"; };
		C48E9E6327DC41D40063E280 /* AddStrings.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = AddStrings.cpp; sourceTree = "<group>"; };
		C48E9E6427DC41D40063E280 /* AddStrings.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = AddStrings.hpp; sourceTree = "<group>"; };
		C48E9E6727DC74880063E280 /* LongestPalindrome.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = LongestPalindrome.cpp; sourceTree = "<group>"; };
		C48E9E6827DC74880063E280 /* LongestPalindrome.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = LongestPalindrome.hpp; sourceTree = "<group>"; };
		C48E9E6B27DC89540063E280 /* WordPattern.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = WordPattern.cpp; sourceTree = "<group>"; };
		C48E9E6C27DC89540063E280 /* WordPattern.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = WordPattern.hpp; sourceTree = "<group>"; };
		C48E9E6F27DCE6690063E280 /* PartitionLabels.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = PartitionLabels.cpp; sourceTree = "<group>"; };
		C48E9E7027DCE6690063E280 /* PartitionLabels.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = PartitionLabels.hpp; sourceTree = "<group>"; };
		C493918F27FB4CB500E2CF01 /* BinarySearch.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = BinarySearch.cpp; sourceTree = "<group>"; };
		C493919027FB4CB500E2CF01 /* BinarySearch.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = BinarySearch.hpp; sourceTree = "<group>"; };
		C493919C27FC782D00E2CF01 /* ClimbTheStairs.hpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.h; path = ClimbTheStairs.hpp; sourceTree = "<group>"; };
		C493919D27FC782D00E2CF01 /* ClimbTheStairs.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = ClimbTheStairs.cpp; sourceTree = "<group>"; };
		C493919F27FC783300E2CF01 /* EscapeFromTheGame.hpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.h; path = EscapeFromTheGame.hpp; sourceTree = "<group>"; };
		C49391A027FC783300E2CF01 /* EscapeFromTheGame.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = EscapeFromTheGame.cpp; sourceTree = "<group>"; };
		C49391A327FC7C6D00E2CF01 /* FirstBadVersion.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = FirstBadVersion.cpp; sourceTree = "<group>"; };
		C49391A427FC7C6D00E2CF01 /* FirstBadVersion.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = FirstBadVersion.hpp; sourceTree = "<group>"; };
		C49391A727FC8E0900E2CF01 /* SearchInsertPosition.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = SearchInsertPosition.cpp; sourceTree = "<group>"; };
		C49391A827FC8E0900E2CF01 /* SearchInsertPosition.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = SearchInsertPosition.hpp; sourceTree = "<group>"; };
		C49664F1282383BB00E6FB57 /* LongestIncreasingSubsequence.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = LongestIncreasingSubsequence.cpp; sourceTree = "<group>"; };
		C49664F2282383BB00E6FB57 /* LongestIncreasingSubsequence.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = LongestIncreasingSubsequence.hpp; sourceTree = "<group>"; };
		C49664F52824250000E6FB57 /* NumberOfLongestIncreasingSubsequence.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = NumberOfLongestIncreasingSubsequence.cpp; sourceTree = "<group>"; };
		C49664F62824250000E6FB57 /* NumberOfLongestIncreasingSubsequence.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = NumberOfLongestIncreasingSubsequence.hpp; sourceTree = "<group>"; };
		C49664F9282581CD00E6FB57 /* LongestCommonSubsequence.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = LongestCommonSubsequence.cpp; sourceTree = "<group>"; };
		C49664FA282581CD00E6FB57 /* LongestCommonSubsequence.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = LongestCommonSubsequence.hpp; sourceTree = "<group>"; };
		C49664FD28276A5100E6FB57 /* DeleteOperationForTwoStrings.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = DeleteOperationForTwoStrings.cpp; sourceTree = "<group>"; };
		C49664FE28276A5100E6FB57 /* DeleteOperationForTwoStrings.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = DeleteOperationForTwoStrings.hpp; sourceTree = "<group>"; };
		C49665012827F5C100E6FB57 /* EditDistance.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = EditDistance.cpp; sourceTree = "<group>"; };
		C49665022827F5C100E6FB57 /* EditDistance.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = EditDistance.hpp; sourceTree = "<group>"; };
		C4966505282C0C5D00E6FB57 /* CoinChange.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = CoinChange.cpp; sourceTree = "<group>"; };
		C4966506282C0C5D00E6FB57 /* CoinChange.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = CoinChange.hpp; sourceTree = "<group>"; };
		C49BE772280C2F29008ACB59 /* PowerOfTwo.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = PowerOfTwo.cpp; sourceTree = "<group>"; };
		C49BE773280C2F29008ACB59 /* PowerOfTwo.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = PowerOfTwo.hpp; sourceTree = "<group>"; };
		C49BE776280C366C008ACB59 /* NumberOf1Bits.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = NumberOf1Bits.cpp; sourceTree = "<group>"; };
		C49BE777280C366C008ACB59 /* NumberOf1Bits.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = NumberOf1Bits.hpp; sourceTree = "<group>"; };
		C49BE77A280C46AB008ACB59 /* ReverseBits.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = ReverseBits.cpp; sourceTree = "<group>"; };
		C49BE77B280C46AB008ACB59 /* ReverseBits.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = ReverseBits.hpp; sourceTree = "<group>"; };
		C49BE782280C55C5008ACB59 /* FindFirstandLastPositionOfElementInSortedArray.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = FindFirstandLastPositionOfElementInSortedArray.cpp; sourceTree = "<group>"; };
		C49BE783280C55C5008ACB59 /* FindFirstandLastPositionOfElementInSortedArray.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = FindFirstandLastPositionOfElementInSortedArray.hpp; sourceTree = "<group>"; };
		C49BE786280D554A008ACB59 /* SearchInRotatedSortedArray.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = SearchInRotatedSortedArray.cpp; sourceTree = "<group>"; };
		C49BE787280D554A008ACB59 /* SearchInRotatedSortedArray.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = SearchInRotatedSortedArray.hpp; sourceTree = "<group>"; };
		C49BE78A280DA426008ACB59 /* FindMinimumInRotatedSortedArray.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = FindMinimumInRotatedSortedArray.cpp; sourceTree = "<group>"; };
		C49BE78B280DA426008ACB59 /* FindMinimumInRotatedSortedArray.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = FindMinimumInRotatedSortedArray.hpp; sourceTree = "<group>"; };
		C49BE78E280DAEBE008ACB59 /* FindPeakElement.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = FindPeakElement.cpp; sourceTree = "<group>"; };
		C49BE78F280DAEBE008ACB59 /* FindPeakElement.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = FindPeakElement.hpp; sourceTree = "<group>"; };
		C49BE792280F0FB9008ACB59 /* ContainerWithMostWater.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = ContainerWithMostWater.cpp; sourceTree = "<group>"; };
		C49BE793280F0FB9008ACB59 /* ContainerWithMostWater.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = ContainerWithMostWater.hpp; sourceTree = "<group>"; };
		C49BE79628105624008ACB59 /* SubarrayProductLessThanK.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = SubarrayProductLessThanK.cpp; sourceTree = "<group>"; };
		C49BE79728105624008ACB59 /* SubarrayProductLessThanK.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = SubarrayProductLessThanK.hpp; sourceTree = "<group>"; };
		C49BE79D28123D0E008ACB59 /* NumberOfIslands.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = NumberOfIslands.cpp; sourceTree = "<group>"; };
		C49BE79E28123D0E008ACB59 /* NumberOfIslands.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = NumberOfIslands.hpp; sourceTree = "<group>"; };
		C49BE7A12812FB88008ACB59 /* PopulatingNextRightPointersInEachNodeII.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = PopulatingNextRightPointersInEachNodeII.cpp; sourceTree = "<group>"; };
		C49BE7A22812FB88008ACB59 /* PopulatingNextRightPointersInEachNodeII.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = PopulatingNextRightPointersInEachNodeII.hpp; sourceTree = "<group>"; };
		C49F2FF61D8C39EA004E8E43 /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		C4A043141D890B2000551755 /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		C4A0431F1D89164400551755 /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		C4A043241D8916C000551755 /* ListNode.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = ListNode.cpp; sourceTree = "<group>"; };
		C4A043251D8916C000551755 /* ListNode.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = ListNode.h; sourceTree = "<group>"; };
		C4A043301D89233A00551755 /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		C4A0B01528223454003EECAF /* DecodeWays.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = DecodeWays.cpp; sourceTree = "<group>"; };
		C4A0B01628223454003EECAF /* DecodeWays.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = DecodeWays.hpp; sourceTree = "<group>"; };
		C4A0B0192822675A003EECAF /* WordBreak.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = WordBreak.cpp; sourceTree = "<group>"; };
		C4A0B01A2822675A003EECAF /* WordBreak.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = WordBreak.hpp; sourceTree = "<group>"; };
		C4A18EC91D98A5D500FF6791 /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		C4A337CE27BD561D00B1DBAD /* TwoSum.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = TwoSum.cpp; sourceTree = "<group>"; };
		C4A337CF27BD561D00B1DBAD /* TwoSum.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = TwoSum.hpp; sourceTree = "<group>"; };
		C4A337D227BDDA9000B1DBAD /* MergeSortedArray.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = MergeSortedArray.cpp; sourceTree = "<group>"; };
		C4A337D327BDDA9000B1DBAD /* MergeSortedArray.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = MergeSortedArray.hpp; sourceTree = "<group>"; };
		C4A337D627BE947F00B1DBAD /* IntersectionOfTwoArraysII.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = IntersectionOfTwoArraysII.cpp; sourceTree = "<group>"; };
		C4A337D727BE947F00B1DBAD /* IntersectionOfTwoArraysII.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = IntersectionOfTwoArraysII.hpp; sourceTree = "<group>"; };
		C4A337DA27BF8F6D00B1DBAD /* BestTimeToBuyAndSellStock.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = BestTimeToBuyAndSellStock.cpp; sourceTree = "<group>"; };
		C4A337DB27BF8F6D00B1DBAD /* BestTimeToBuyAndSellStock.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = BestTimeToBuyAndSellStock.hpp; sourceTree = "<group>"; };
		C4A511E027C9CEEA0004D026 /* RemoveDuplicatesFromSortedList.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = RemoveDuplicatesFromSortedList.cpp; sourceTree = "<group>"; };
		C4A511E127C9CEEA0004D026 /* RemoveDuplicatesFromSortedList.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = RemoveDuplicatesFromSortedList.hpp; sourceTree = "<group>"; };
		C4A511E527CA68300004D026 /* ValidParentheses.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = ValidParentheses.cpp; sourceTree = "<group>"; };
		C4A511E627CA68300004D026 /* ValidParentheses.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = ValidParentheses.hpp; sourceTree = "<group>"; };
		C4A511E927CB25280004D026 /* ImplementQueueUsingStacks.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = ImplementQueueUsingStacks.cpp; sourceTree = "<group>"; };
		C4A511EA27CB25280004D026 /* ImplementQueueUsingStacks.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = ImplementQueueUsingStacks.hpp; sourceTree = "<group>"; };
		C4A511EE27CC516F0004D026 /* BinaryTreePreorderTraversal.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = BinaryTreePreorderTraversal.cpp; sourceTree = "<group>"; };
		C4A511EF27CC516F0004D026 /* BinaryTreePreorderTraversal.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = BinaryTreePreorderTraversal.hpp; sourceTree = "<group>"; };
		C4A511F227CC51C30004D026 /* TreeNode.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = TreeNode.cpp; sourceTree = "<group>"; };
		C4A511F327CC51C30004D026 /* TreeNode.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = TreeNode.hpp; sourceTree = "<group>"; };
		C4A62F0E2843AE1200F404D6 /* SpecialArrayWithXElementsGreaterThanOrEqualX.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = SpecialArrayWithXElementsGreaterThanOrEqualX.cpp; sourceTree = "<group>"; };
		C4A62F0F2843AE1200F404D6 /* SpecialArrayWithXElementsGreaterThanOrEqualX.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = SpecialArrayWithXElementsGreaterThanOrEqualX.hpp; sourceTree = "<group>"; };
		C4A62F122845032300F404D6 /* CountNegativeNumbersInASortedMatrix.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = CountNegativeNumbersInASortedMatrix.cpp; sourceTree = "<group>"; };
		C4A62F132845032300F404D6 /* CountNegativeNumbersInASortedMatrix.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = CountNegativeNumbersInASortedMatrix.hpp; sourceTree = "<group>"; };
		C4A62F16284514F300F404D6 /* TheKWeakestRowsInAMatrix.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = TheKWeakestRowsInAMatrix.cpp; sourceTree = "<group>"; };
		C4A62F17284514F300F404D6 /* TheKWeakestRowsInAMatrix.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = TheKWeakestRowsInAMatrix.hpp; sourceTree = "<group>"; };
		C4A62F1A284735CC00F404D6 /* CheckIfNAndItsDoubleExist.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = CheckIfNAndItsDoubleExist.cpp; sourceTree = "<group>"; };
		C4A62F1B284735CC00F404D6 /* CheckIfNAndItsDoubleExist.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = CheckIfNAndItsDoubleExist.hpp; sourceTree = "<group>"; };
		C4A62F1E28475BF900F404D6 /* SumOfSquareNumbers.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = SumOfSquareNumbers.cpp; sourceTree = "<group>"; };
		C4A62F1F28475BF900F404D6 /* SumOfSquareNumbers.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = SumOfSquareNumbers.hpp; sourceTree = "<group>"; };
		C4A62F22284792EC00F404D6 /* MaximumDistanceBetweenAPairOfValues.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = MaximumDistanceBetweenAPairOfValues.cpp; sourceTree = "<group>"; };
		C4A62F23284792EC00F404D6 /* MaximumDistanceBetweenAPairOfValues.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = MaximumDistanceBetweenAPairOfValues.hpp; sourceTree = "<group>"; };
		C4A62F262849D22A00F404D6 /* MonotonicArray.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = MonotonicArray.cpp; sourceTree = "<group>"; };
		C4A62F272849D22A00F404D6 /* MonotonicArray.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = MonotonicArray.hpp; sourceTree = "<group>"; };
		C4A62F2A2849FB5800F404D6 /* ImplementStrStr().cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "ImplementStrStr().cpp"; sourceTree = "<group>"; };
		C4A62F2B2849FB5800F404D6 /* ImplementStrStr().hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "ImplementStrStr().hpp"; sourceTree = "<group>"; };
		C4A62F2E284B01BA00F404D6 /* BalancedBinaryTree.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = BalancedBinaryTree.cpp; sourceTree = "<group>"; };
		C4A62F2F284B01BA00F404D6 /* BalancedBinaryTree.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = BalancedBinaryTree.hpp; sourceTree = "<group>"; };
		C4A62F31284B253500F404D6 /* balance_1.jpeg */ = {isa = PBXFileReference; lastKnownFileType = image.jpeg; path = balance_1.jpeg; sourceTree = "<group>"; };
		C4A62F32284B253500F404D6 /* balance_2.jpeg */ = {isa = PBXFileReference; lastKnownFileType = image.jpeg; path = balance_2.jpeg; sourceTree = "<group>"; };
		C4A62F34284B443D00F404D6 /* RepeatedSubstringPattern.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = RepeatedSubstringPattern.cpp; sourceTree = "<group>"; };
		C4A62F35284B443D00F404D6 /* RepeatedSubstringPattern.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = RepeatedSubstringPattern.hpp; sourceTree = "<group>"; };
		C4A62F38284C78CA00F404D6 /* EvaluateReversePolishNotation.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = EvaluateReversePolishNotation.cpp; sourceTree = "<group>"; };
		C4A62F39284C78CA00F404D6 /* EvaluateReversePolishNotation.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = EvaluateReversePolishNotation.hpp; sourceTree = "<group>"; };
		C4A62F3C284C81AD00F404D6 /* PlusOne.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = PlusOne.cpp; sourceTree = "<group>"; };
		C4A62F3D284C81AD00F404D6 /* PlusOne.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = PlusOne.hpp; sourceTree = "<group>"; };
		C4A62F40284C904E00F404D6 /* LinkedListInBinaryTree.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = LinkedListInBinaryTree.cpp; sourceTree = "<group>"; };
		C4A62F41284C904E00F404D6 /* LinkedListInBinaryTree.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = LinkedListInBinaryTree.hpp; sourceTree = "<group>"; };
		C4A62F43284C90BD00F404D6 /* sample_1_1720.png */ = {isa = PBXFileReference; lastKnownFileType = image.png; path = sample_1_1720.png; sourceTree = "<group>"; };
		C4A62F45284D111F00F404D6 /* AddBinary.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = AddBinary.cpp; sourceTree = "<group>"; };
		C4A62F46284D111F00F404D6 /* AddBinary.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = AddBinary.hpp; sourceTree = "<group>"; };
		C4A62F49284E536800F404D6 /* AddToArrayFormOfInteger.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = AddToArrayFormOfInteger.cpp; sourceTree = "<group>"; };
		C4A62F4A284E536800F404D6 /* AddToArrayFormOfInteger.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = AddToArrayFormOfInteger.hpp; sourceTree = "<group>"; };
		C4A62F4D284FAD3900F404D6 /* LengthOfLastWord.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = LengthOfLastWord.cpp; sourceTree = "<group>"; };
		C4A62F4E284FAD3900F404D6 /* LengthOfLastWord.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = LengthOfLastWord.hpp; sourceTree = "<group>"; };
		C4A62F512850F10700F404D6 /* DetermineWhetherMatrixCanBeObtainedByRotation.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = DetermineWhetherMatrixCanBeObtainedByRotation.cpp; sourceTree = "<group>"; };
		C4A62F522850F10700F404D6 /* DetermineWhetherMatrixCanBeObtainedByRotation.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = DetermineWhetherMatrixCanBeObtainedByRotation.hpp; sourceTree = "<group>"; };
		C4A62F542850F1D700F404D6 /* grid3.png */ = {isa = PBXFileReference; lastKnownFileType = image.png; path = grid3.png; sourceTree = "<group>"; };
		C4A62F552850F1D700F404D6 /* grid4.png */ = {isa = PBXFileReference; lastKnownFileType = image.png; path = grid4.png; sourceTree = "<group>"; };
		C4A70754283FC015007F1A43 /* ArrangingCoins.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = ArrangingCoins.cpp; sourceTree = "<group>"; };
		C4A70755283FC015007F1A43 /* ArrangingCoins.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = ArrangingCoins.hpp; sourceTree = "<group>"; };
		C4A70757283FC08D007F1A43 /* arrangecoins2-grid.jpeg */ = {isa = PBXFileReference; lastKnownFileType = image.jpeg; path = "arrangecoins2-grid.jpeg"; sourceTree = "<group>"; };
		C4A70758283FC08D007F1A43 /* arrangecoins1-grid.jpeg */ = {isa = PBXFileReference; lastKnownFileType = image.jpeg; path = "arrangecoins1-grid.jpeg"; sourceTree = "<group>"; };
		C4A7075A283FC398007F1A43 /* KthMissingPositiveNumber.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = KthMissingPositiveNumber.cpp; sourceTree = "<group>"; };
		C4A7075B283FC398007F1A43 /* KthMissingPositiveNumber.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = KthMissingPositiveNumber.hpp; sourceTree = "<group>"; };
		C4A737FA1D8E5E45007B8AFE /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		C4A738061D8F6905007B8AFE /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		C4A738151D8F7D6F007B8AFE /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		C4A738211D8FAB80007B8AFE /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		C4A8858E27C13E6600EC168C /* ReshapeTheMatrix.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = ReshapeTheMatrix.cpp; sourceTree = "<group>"; };
		C4A8858F27C13E6600EC168C /* ReshapeTheMatrix.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = ReshapeTheMatrix.hpp; sourceTree = "<group>"; };
		C4A8859227C3E37F00EC168C /* Pascal'sTriangle.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "Pascal'sTriangle.cpp"; sourceTree = "<group>"; };
		C4A8859327C3E37F00EC168C /* Pascal'sTriangle.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "Pascal'sTriangle.hpp"; sourceTree = "<group>"; };
		C4A8859627C471EC00EC168C /* ValidSudoku.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = ValidSudoku.cpp; sourceTree = "<group>"; };
		C4A8859727C471EC00EC168C /* ValidSudoku.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = ValidSudoku.hpp; sourceTree = "<group>"; };
		C4A8859A27C5C4D900EC168C /* SearchA2DMatrix.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = SearchA2DMatrix.cpp; sourceTree = "<group>"; };
		C4A8859B27C5C4D900EC168C /* SearchA2DMatrix.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = SearchA2DMatrix.hpp; sourceTree = "<group>"; };
		C4A8859F27C670F900EC168C /* FirstUniqueCharacterInAString.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = FirstUniqueCharacterInAString.cpp; sourceTree = "<group>"; };
		C4A885A027C670F900EC168C /* FirstUniqueCharacterInAString.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = FirstUniqueCharacterInAString.hpp; sourceTree = "<group>"; };
		C4A885A327C9169200EC168C /* RemoveLinkedListElements.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = RemoveLinkedListElements.cpp; sourceTree = "<group>"; };
		C4A885A427C9169200EC168C /* RemoveLinkedListElements.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = RemoveLinkedListElements.hpp; sourceTree = "<group>"; };
		C4A885A727C9269900EC168C /* ReverseLinkedList.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = ReverseLinkedList.cpp; sourceTree = "<group>"; };
		C4A885A827C9269900EC168C /* ReverseLinkedList.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = ReverseLinkedList.hpp; sourceTree = "<group>"; };
		C4A9454C27D3303B00E452DC /* TwoSumIV.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = TwoSumIV.cpp; sourceTree = "<group>"; };
		C4A9454D27D3303B00E452DC /* TwoSumIV.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = TwoSumIV.hpp; sourceTree = "<group>"; };
		C4A9455027D376CE00E452DC /* LowestCommonAncestorOfABinarySearchTree.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = LowestCommonAncestorOfABinarySearchTree.cpp; sourceTree = "<group>"; };
		C4A9455127D376CE00E452DC /* LowestCommonAncestorOfABinarySearchTree.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = LowestCommonAncestorOfABinarySearchTree.hpp; sourceTree = "<group>"; };
		C4A9455A27D3B08B00E452DC /* SingleNumber.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = SingleNumber.cpp; sourceTree = "<group>"; };
		C4A9455B27D3B08B00E452DC /* SingleNumber.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = SingleNumber.hpp; sourceTree = "<group>"; };
		C4A9455E27D4676E00E452DC /* MajorityElement.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = MajorityElement.cpp; sourceTree = "<group>"; };
		C4A9455F27D4676E00E452DC /* MajorityElement.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = MajorityElement.hpp; sourceTree = "<group>"; };
		C4A9456227D4C70800E452DC /* 3Sum.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = 3Sum.cpp; sourceTree = "<group>"; };
		C4A9456327D4C70800E452DC /* 3Sum.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = 3Sum.hpp; sourceTree = "<group>"; };
		C4A9456627D513AB00E452DC /* SortColors.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = SortColors.cpp; sourceTree = "<group>"; };
		C4A9456727D513AB00E452DC /* SortColors.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = SortColors.hpp; sourceTree = "<group>"; };
		C4A9456927D586F100E452DC /* Helper.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = Helper.cpp; sourceTree = "<group>"; };
		C4A9456A27D586F100E452DC /* Helper.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = Helper.hpp; sourceTree = "<group>"; };
		C4A9456D27D595AE00E452DC /* MergeIntervals.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = MergeIntervals.cpp; sourceTree = "<group>"; };
		C4A9456E27D595AE00E452DC /* MergeIntervals.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = MergeIntervals.hpp; sourceTree = "<group>"; };
		C4A9457127D665FC00E452DC /* DesignHashMap.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = DesignHashMap.cpp; sourceTree = "<group>"; };
		C4A9457227D665FC00E452DC /* DesignHashMap.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = DesignHashMap.hpp; sourceTree = "<group>"; };
		C4A9457527D6E5E300E452DC /* Pascal'sTriangleII.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "Pascal'sTriangleII.cpp"; sourceTree = "<group>"; };
		C4A9457627D6E5E300E452DC /* Pascal'sTriangleII.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "Pascal'sTriangleII.hpp"; sourceTree = "<group>"; };
		C4A9457927D82BD000E452DC /* SearchA2DMatrixII.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = SearchA2DMatrixII.cpp; sourceTree = "<group>"; };
		C4A9457A27D82BD000E452DC /* SearchA2DMatrixII.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = SearchA2DMatrixII.hpp; sourceTree = "<group>"; };
		C4A9457D27D8BA8C00E452DC /* Non-overlappingIntervals.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "Non-overlappingIntervals.cpp"; sourceTree = "<group>"; };
		C4A9457E27D8BA8C00E452DC /* Non-overlappingIntervals.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "Non-overlappingIntervals.hpp"; sourceTree = "<group>"; };
		C4A9458127D98B2E00E452DC /* IncreasingTripletSubsequence.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = IncreasingTripletSubsequence.cpp; sourceTree = "<group>"; };
		C4A9458227D98B2E00E452DC /* IncreasingTripletSubsequence.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = IncreasingTripletSubsequence.hpp; sourceTree = "<group>"; };
		C4A9458527DA4FA000E452DC /* ProductOfArrayExceptSelf.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = ProductOfArrayExceptSelf.cpp; sourceTree = "<group>"; };
		C4A9458627DA4FA000E452DC /* ProductOfArrayExceptSelf.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = ProductOfArrayExceptSelf.hpp; sourceTree = "<group>"; };
		C4A9458927DA593100E452DC /* SubarraySumEqualsK.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = SubarraySumEqualsK.cpp; sourceTree = "<group>"; };
		C4A9458A27DA593100E452DC /* SubarraySumEqualsK.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = SubarraySumEqualsK.hpp; sourceTree = "<group>"; };
		C4ABA57727FC979A00E64BA2 /* SquaresOfASortedArray.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = SquaresOfASortedArray.cpp; sourceTree = "<group>"; };
		C4ABA57827FC979A00E64BA2 /* SquaresOfASortedArray.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = SquaresOfASortedArray.hpp; sourceTree = "<group>"; };
		C4ABA57E27FCA0B900E64BA2 /* RotateArray.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = RotateArray.cpp; sourceTree = "<group>"; };
		C4ABA57F27FCA0B900E64BA2 /* RotateArray.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = RotateArray.hpp; sourceTree = "<group>"; };
		C4ABA58227FDE69900E64BA2 /* MoveZeroes.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = MoveZeroes.cpp; sourceTree = "<group>"; };
		C4ABA58327FDE69900E64BA2 /* MoveZeroes.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = MoveZeroes.hpp; sourceTree = "<group>"; };
		C4ABA58627FDF83800E64BA2 /* TwoSumII-InputArrayIsSorted.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "TwoSumII-InputArrayIsSorted.cpp"; sourceTree = "<group>"; };
		C4ABA58727FDF83800E64BA2 /* TwoSumII-InputArrayIsSorted.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "TwoSumII-InputArrayIsSorted.hpp"; sourceTree = "<group>"; };
		C4ABA58A27FF46E500E64BA2 /* MiddleOfTheLinkedList.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = MiddleOfTheLinkedList.cpp; sourceTree = "<group>"; };
		C4ABA58B27FF46E500E64BA2 /* MiddleOfTheLinkedList.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = MiddleOfTheLinkedList.hpp; sourceTree = "<group>"; };
		C4ABA58E27FFC3A400E64BA2 /* RemoveNthNodeFromEndOfList.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = RemoveNthNodeFromEndOfList.cpp; sourceTree = "<group>"; };
		C4ABA58F27FFC3A400E64BA2 /* RemoveNthNodeFromEndOfList.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = RemoveNthNodeFromEndOfList.hpp; sourceTree = "<group>"; };
		C4ABA592280090A000E64BA2 /* LongestSwipe.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = LongestSwipe.cpp; sourceTree = "<group>"; };
		C4ABA593280090A000E64BA2 /* LongestSwipe.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = LongestSwipe.hpp; sourceTree = "<group>"; };
		C4ABA5962801233800E64BA2 /* BossHome.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = BossHome.cpp; sourceTree = "<group>"; };
		C4ABA5972801233800E64BA2 /* BossHome.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = BossHome.hpp; sourceTree = "<group>"; };
		C4AC28F428015A1D0036E6DB /* LargestRectangleInHistogram.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = LargestRectangleInHistogram.cpp; sourceTree = "<group>"; };
		C4AC28F528015A1D0036E6DB /* LargestRectangleInHistogram.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = LargestRectangleInHistogram.hpp; sourceTree = "<group>"; };
		C4AC28F82801D2310036E6DB /* MaximalRectangle.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = MaximalRectangle.cpp; sourceTree = "<group>"; };
		C4AC28F92801D2310036E6DB /* MaximalRectangle.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = MaximalRectangle.hpp; sourceTree = "<group>"; };
		C4AC28FD2801E8110036E6DB /* LongestSubstringWithoutRepeatingCharacters.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = LongestSubstringWithoutRepeatingCharacters.cpp; sourceTree = "<group>"; };
		C4AC28FE2801E8110036E6DB /* LongestSubstringWithoutRepeatingCharacters.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = LongestSubstringWithoutRepeatingCharacters.hpp; sourceTree = "<group>"; };
		C4AC722B282EB399006412A7 /* IntegerBreak.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = IntegerBreak.cpp; sourceTree = "<group>"; };
		C4AC722C282EB399006412A7 /* IntegerBreak.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = IntegerBreak.hpp; sourceTree = "<group>"; };
		C4AC722F28314DAC006412A7 /* BitwiseAndOfNumbersRange.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = BitwiseAndOfNumbersRange.cpp; sourceTree = "<group>"; };
		C4AC723028314DAC006412A7 /* BitwiseAndOfNumbersRange.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = BitwiseAndOfNumbersRange.hpp; sourceTree = "<group>"; };
		C4ADC03C1D572CD7000F647B /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		C4B2524127F4BB620040706B /* KthLargestElementInAnArray.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = KthLargestElementInAnArray.cpp; sourceTree = "<group>"; };
		C4B2524227F4BB620040706B /* KthLargestElementInAnArray.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = KthLargestElementInAnArray.hpp; sourceTree = "<group>"; };
		C4B2524527F73CE80040706B /* SortAnArray.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = SortAnArray.cpp; sourceTree = "<group>"; };
		C4B2524627F73CE80040706B /* SortAnArray.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = SortAnArray.hpp; sourceTree = "<group>"; };
		C4B2524927F995F00040706B /* TopKFrequentElements.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = TopKFrequentElements.cpp; sourceTree = "<group>"; };
		C4B2524A27F995F00040706B /* TopKFrequentElements.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = TopKFrequentElements.hpp; sourceTree = "<group>"; };
		C4B2524D27F9FA580040706B /* SortCharactersByFrequency.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = SortCharactersByFrequency.cpp; sourceTree = "<group>"; };
		C4B2524E27F9FA580040706B /* SortCharactersByFrequency.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = SortCharactersByFrequency.hpp; sourceTree = "<group>"; };
		C4B2525127FAE9B60040706B /* KClosestPointsToOrigin.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = KClosestPointsToOrigin.cpp; sourceTree = "<group>"; };
		C4B2525227FAE9B60040706B /* KClosestPointsToOrigin.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = KClosestPointsToOrigin.hpp; sourceTree = "<group>"; };
		C4B643C51D92506D00056FEC /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		C4B643DD1D9260AC00056FEC /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		C4B643E91D9279D800056FEC /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		C4B684452807116500B41B2F /* RottingOranges.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = RottingOranges.cpp; sourceTree = "<group>"; };
		C4B684462807116500B41B2F /* RottingOranges.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = RottingOranges.hpp; sourceTree = "<group>"; };
		C4B684492807B3FF00B41B2F /* Combinations.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = Combinations.cpp; sourceTree = "<group>"; };
		C4B6844A2807B3FF00B41B2F /* Combinations.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = Combinations.hpp; sourceTree = "<group>"; };
		C4B6844E2809013700B41B2F /* ClimbingStairs.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = ClimbingStairs.cpp; sourceTree = "<group>"; };
		C4B6844F2809013700B41B2F /* ClimbingStairs.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = ClimbingStairs.hpp; sourceTree = "<group>"; };
		C4B684532809B2C100B41B2F /* HouseRobber.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = HouseRobber.cpp; sourceTree = "<group>"; };
		C4B684542809B2C100B41B2F /* HouseRobber.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = HouseRobber.hpp; sourceTree = "<group>"; };
		C4C107E2280BE10C00326A66 /* Triangle.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = Triangle.cpp; sourceTree = "<group>"; };
		C4C107E3280BE10C00326A66 /* Triangle.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = Triangle.hpp; sourceTree = "<group>"; };
		C4C19DEC2A2C38B900DD292D /* Company1Code.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Company1Code.swift; sourceTree = "<group>"; };
		C4C19DEE2A2C395E00DD292D /* Company1Code.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = Company1Code.cpp; sourceTree = "<group>"; };
		C4C9D34127E36B37007067BB /* AddTwoNumbers.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = AddTwoNumbers.cpp; sourceTree = "<group>"; };
		C4C9D34227E36B37007067BB /* AddTwoNumbers.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = AddTwoNumbers.hpp; sourceTree = "<group>"; };
		C4C9D34527E380BC007067BB /* LinkedListCycleII.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = LinkedListCycleII.cpp; sourceTree = "<group>"; };
		C4C9D34627E380BC007067BB /* LinkedListCycleII.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = LinkedListCycleII.hpp; sourceTree = "<group>"; };
		C4C9D34927E4204D007067BB /* IntersectionOfTwoLinkedLists.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = IntersectionOfTwoLinkedLists.cpp; sourceTree = "<group>"; };
		C4C9D34A27E4204D007067BB /* IntersectionOfTwoLinkedLists.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = IntersectionOfTwoLinkedLists.hpp; sourceTree = "<group>"; };
		C4C9D34D27E4ECB7007067BB /* RemoveDuplicatesFromSortedListII.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = RemoveDuplicatesFromSortedListII.cpp; sourceTree = "<group>"; };
		C4C9D34E27E4ECB7007067BB /* RemoveDuplicatesFromSortedListII.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = RemoveDuplicatesFromSortedListII.hpp; sourceTree = "<group>"; };
		C4C9D35127E5D1EA007067BB /* SwapNodesInPairs.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = SwapNodesInPairs.cpp; sourceTree = "<group>"; };
		C4C9D35227E5D1EA007067BB /* SwapNodesInPairs.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = SwapNodesInPairs.hpp; sourceTree = "<group>"; };
		C4C9D35527E616A5007067BB /* DesignLinkedList.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = DesignLinkedList.cpp; sourceTree = "<group>"; };
		C4C9D35627E616A5007067BB /* DesignLinkedList.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = DesignLinkedList.hpp; sourceTree = "<group>"; };
		C4C9D35927E62FBD007067BB /* ReverseNodesInK-Group.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "ReverseNodesInK-Group.cpp"; sourceTree = "<group>"; };
		C4C9D35A27E62FBD007067BB /* ReverseNodesInK-Group.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "ReverseNodesInK-Group.hpp"; sourceTree = "<group>"; };
		C4C9D35D27E7867D007067BB /* ReorderList.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = ReorderList.cpp; sourceTree = "<group>"; };
		C4C9D35E27E7867D007067BB /* ReorderList.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = ReorderList.hpp; sourceTree = "<group>"; };
		C4C9D36127E8B2E9007067BB /* MinStack.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = MinStack.cpp; sourceTree = "<group>"; };
		C4C9D36227E8B2E9007067BB /* MinStack.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = MinStack.hpp; sourceTree = "<group>"; };
		C4C9D36527E8DC71007067BB /* MinimumRemoveToMakeValidParentheses.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = MinimumRemoveToMakeValidParentheses.cpp; sourceTree = "<group>"; };
		C4C9D36627E8DC71007067BB /* MinimumRemoveToMakeValidParentheses.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = MinimumRemoveToMakeValidParentheses.hpp; sourceTree = "<group>"; };
		C4C9D36927E9A817007067BB /* FindTheWinnerOfTheCircularGame.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = FindTheWinnerOfTheCircularGame.cpp; sourceTree = "<group>"; };
		C4C9D36A27E9A817007067BB /* FindTheWinnerOfTheCircularGame.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = FindTheWinnerOfTheCircularGame.hpp; sourceTree = "<group>"; };
		C4CA0D4E29B08B5800ECEF6B /* CheckIfItIsAStraightLine .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "CheckIfItIsAStraightLine .swift"; sourceTree = "<group>"; };
		C4CA0D5229B24F4200ECEF6B /* SumOfAllOddLengthSubarrays .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "SumOfAllOddLengthSubarrays .swift"; sourceTree = "<group>"; };
		C4CA0D5529B2E26D00ECEF6B /* MoveZeroes .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "MoveZeroes .swift"; sourceTree = "<group>"; };
		C4CA0D5829B3A83100ECEF6B /* NextGreaterElementI .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "NextGreaterElementI .swift"; sourceTree = "<group>"; };
		C4CA0D5B29B4EAE700ECEF6B /* RichestCustomerWealth .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "RichestCustomerWealth .swift"; sourceTree = "<group>"; };
		C4CA0D5E29B4F20C00ECEF6B /* MatrixDiagonalSum .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "MatrixDiagonalSum .swift"; sourceTree = "<group>"; };
		C4CA0D6029B5DF2200ECEF6B /* ReshapeTheMatrix .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "ReshapeTheMatrix .swift"; sourceTree = "<group>"; };
		C4CA0D6329B63D5F00ECEF6B /* MergeStringsAlternately .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "MergeStringsAlternately .swift"; sourceTree = "<group>"; };
		C4CA0D6629B6460D00ECEF6B /* GoalParserInterpretation .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "GoalParserInterpretation .swift"; sourceTree = "<group>"; };
		C4CA0D6929B7094B00ECEF6B /* FindTheDifference .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "FindTheDifference .swift"; sourceTree = "<group>"; };
		C4CA0D6C29B7110500ECEF6B /* ToLowerCase .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "ToLowerCase .swift"; sourceTree = "<group>"; };
		C4CA0D6F29B715E600ECEF6B /* DecryptStringFromAlphabetToIntegerMapping .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "DecryptStringFromAlphabetToIntegerMapping .swift"; sourceTree = "<group>"; };
		C4CA0D7229B89C0900ECEF6B /* VerifyingAnAlienDictionary .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "VerifyingAnAlienDictionary .swift"; sourceTree = "<group>"; };
		C4CA0D7529B8BD3800ECEF6B /* ConvertBinaryNumberInALinkedListToInteger .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "ConvertBinaryNumberInALinkedListToInteger .swift"; sourceTree = "<group>"; };
		C4CA0D7729B8DE6700ECEF6B /* ListNode.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ListNode.swift; sourceTree = "<group>"; };
		C4CA0D7A29B8E47100ECEF6B /* MiddleOfTheLinkedList .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "MiddleOfTheLinkedList .swift"; sourceTree = "<group>"; };
		C4CA0D7C29BC3FDA00ECEF6B /* MaximumDepthOfBinaryTree.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MaximumDepthOfBinaryTree.swift; sourceTree = "<group>"; };
		C4CA0D7E29BC401900ECEF6B /* TreeNode.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = TreeNode.swift; sourceTree = "<group>"; };
		C4CA0D8029BC424E00ECEF6B /* TreeNode.jpg */ = {isa = PBXFileReference; lastKnownFileType = image.jpeg; path = TreeNode.jpg; sourceTree = "<group>"; };
		C4CA0D8429BC4F0500ECEF6B /* SumOfLeftLeaves .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "SumOfLeftLeaves .swift"; sourceTree = "<group>"; };
		C4CA0D8629BC4F5200ECEF6B /* leftsum-tree.jpg */ = {isa = PBXFileReference; lastKnownFileType = image.jpeg; path = "leftsum-tree.jpg"; sourceTree = "<group>"; };
		C4CA0D8829BC7B2A00ECEF6B /* SortIntegersByTheNumberOf1Bits .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "SortIntegersByTheNumberOf1Bits .swift"; sourceTree = "<group>"; };
		C4CA0D8A29BCD9BD00ECEF6B /* ImplementQueueUsingStacks .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "ImplementQueueUsingStacks .swift"; sourceTree = "<group>"; };
		C4CA0D8C29BCDBAF00ECEF6B /* ValidAnagram .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "ValidAnagram .swift"; sourceTree = "<group>"; };
		C4CA0D8E29BDDAF100ECEF6B /* ContainsDuplicate .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "ContainsDuplicate .swift"; sourceTree = "<group>"; };
		C4CA0D9229BE2DD000ECEF6B /* DesignParkingSystem .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "DesignParkingSystem .swift"; sourceTree = "<group>"; };
		C4CA0D9529BE32C000ECEF6B /* RangeSumQuery.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RangeSumQuery.swift; sourceTree = "<group>"; };
		C4CA0D9829BF6A8E00ECEF6B /* LongestCommonPrefix .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "LongestCommonPrefix .swift"; sourceTree = "<group>"; };
		C4CA0D9B29C09B1B00ECEF6B /* Pow(x, n) .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "Pow(x, n) .swift"; sourceTree = "<group>"; };
		C4CA0D9E29C0CD7D00ECEF6B /* SetMatrixZeroes .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "SetMatrixZeroes .swift"; sourceTree = "<group>"; };
		C4CA0DA029C0CDE900ECEF6B /* mat1.jpg */ = {isa = PBXFileReference; lastKnownFileType = image.jpeg; path = mat1.jpg; sourceTree = "<group>"; };
		C4CA0DA129C0CDE900ECEF6B /* mat2.jpg */ = {isa = PBXFileReference; lastKnownFileType = image.jpeg; path = mat2.jpg; sourceTree = "<group>"; };
		C4CA0DA329C330B700ECEF6B /* ValidPalindrome .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "ValidPalindrome .swift"; sourceTree = "<group>"; };
		C4CA0DA629C478C800ECEF6B /* LongestConsecutiveSequence .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "LongestConsecutiveSequence .swift"; sourceTree = "<group>"; };
		C4CA0DA829C4C64500ECEF6B /* MonotonicArray .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "MonotonicArray .swift"; sourceTree = "<group>"; };
		C4CF8F21283D2A1600FB1118 /* Sqrt(x).cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "Sqrt(x).cpp"; sourceTree = "<group>"; };
		C4CF8F22283D2A1600FB1118 /* Sqrt(x).hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "Sqrt(x).hpp"; sourceTree = "<group>"; };
		C4CF8F25283D2DF200FB1118 /* FindSmallestLetterGreaterThanTarget.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = FindSmallestLetterGreaterThanTarget.cpp; sourceTree = "<group>"; };
		C4CF8F26283D2DF200FB1118 /* FindSmallestLetterGreaterThanTarget.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = FindSmallestLetterGreaterThanTarget.hpp; sourceTree = "<group>"; };
		C4D85DBA1D41DF540092E613 /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		C4D85DC51D41ED7A0092E613 /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		C4D85DD01D438B610092E613 /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		C4D85DD51D43D0B50092E613 /* README.md */ = {isa = PBXFileReference; lastKnownFileType = net.daringfireball.markdown; path = README.md; sourceTree = "<group>"; };
		C4D85DDC1D443F430092E613 /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		C4D97F172833D26200D889A0 /* ShuffleAnArray.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = ShuffleAnArray.cpp; sourceTree = "<group>"; };
		C4D97F182833D26200D889A0 /* ShuffleAnArray.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = ShuffleAnArray.hpp; sourceTree = "<group>"; };
		C4D97F1B2833E18400D889A0 /* HappyNumber.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = HappyNumber.cpp; sourceTree = "<group>"; };
		C4D97F1C2833E18400D889A0 /* HappyNumber.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = HappyNumber.hpp; sourceTree = "<group>"; };
		C4E3856B27EE2A820024DDFF /* KthSmallestElementInABST.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = KthSmallestElementInABST.cpp; sourceTree = "<group>"; };
		C4E3856C27EE2A820024DDFF /* KthSmallestElementInABST.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = KthSmallestElementInABST.hpp; sourceTree = "<group>"; };
		C4E3856F27EEBBDC0024DDFF /* BinarySearchTreeIterator.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = BinarySearchTreeIterator.cpp; sourceTree = "<group>"; };
		C4E3857027EEBBDC0024DDFF /* BinarySearchTreeIterator.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = BinarySearchTreeIterator.hpp; sourceTree = "<group>"; };
		C4E3857327EF2C060024DDFF /* LowestCommonAncestorOfABinaryTree.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = LowestCommonAncestorOfABinaryTree.cpp; sourceTree = "<group>"; };
		C4E3857427EF2C060024DDFF /* LowestCommonAncestorOfABinaryTree.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = LowestCommonAncestorOfABinaryTree.hpp; sourceTree = "<group>"; };
		C4E3857727F0150A0024DDFF /* SerializeAndDeserializeBinaryTree.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = SerializeAndDeserializeBinaryTree.cpp; sourceTree = "<group>"; };
		C4E3857827F0150A0024DDFF /* SerializeAndDeserializeBinaryTree.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = SerializeAndDeserializeBinaryTree.hpp; sourceTree = "<group>"; };
		C4E3857C27F1F28F0024DDFF /* FindTheTownJudge.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = FindTheTownJudge.cpp; sourceTree = "<group>"; };
		C4E3857D27F1F28F0024DDFF /* FindTheTownJudge.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = FindTheTownJudge.hpp; sourceTree = "<group>"; };
		C4E3858027F20BD40024DDFF /* MinimumNumberOfVerticesToReachAllNodes.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = MinimumNumberOfVerticesToReachAllNodes.cpp; sourceTree = "<group>"; };
		C4E3858127F20BD40024DDFF /* MinimumNumberOfVerticesToReachAllNodes.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = MinimumNumberOfVerticesToReachAllNodes.hpp; sourceTree = "<group>"; };
		C4E3858427F2AAE10024DDFF /* KeysAndRooms.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = KeysAndRooms.cpp; sourceTree = "<group>"; };
		C4E3858527F2AAE10024DDFF /* KeysAndRooms.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = KeysAndRooms.hpp; sourceTree = "<group>"; };
		C4E610F227DE510600B56DED /* GroupAnagrams.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = GroupAnagrams.cpp; sourceTree = "<group>"; };
		C4E610F327DE510600B56DED /* GroupAnagrams.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = GroupAnagrams.hpp; sourceTree = "<group>"; };
		C4E610F627DF7B1A00B56DED /* MultiplyStrings.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = MultiplyStrings.cpp; sourceTree = "<group>"; };
		C4E610F727DF7B1A00B56DED /* MultiplyStrings.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = MultiplyStrings.hpp; sourceTree = "<group>"; };
		C4E610FA27DFA2CD00B56DED /* RepeatedDNASequences.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = RepeatedDNASequences.cpp; sourceTree = "<group>"; };
		C4E610FB27DFA2CD00B56DED /* RepeatedDNASequences.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = RepeatedDNASequences.hpp; sourceTree = "<group>"; };
		C4E610FE27E0F8F000B56DED /* LongestPalindromicSubstring.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = LongestPalindromicSubstring.cpp; sourceTree = "<group>"; };
		C4E610FF27E0F8F000B56DED /* LongestPalindromicSubstring.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = LongestPalindromicSubstring.hpp; sourceTree = "<group>"; };
		C4EB183B296964580069717E /* B096.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = B096.cpp; sourceTree = "<group>"; };
		C4EB183C296964580069717E /* B096.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = B096.hpp; sourceTree = "<group>"; };
		C4F60ACE28352F10006B990F /* MaxPointsOnALine.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = MaxPointsOnALine.cpp; sourceTree = "<group>"; };
		C4F60ACF28352F10006B990F /* MaxPointsOnALine.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = MaxPointsOnALine.hpp; sourceTree = "<group>"; };
		C4F60AD128352FB9006B990F /* plane2.jpeg */ = {isa = PBXFileReference; lastKnownFileType = image.jpeg; path = plane2.jpeg; sourceTree = "<group>"; };
		C4F60AD228352FB9006B990F /* plane1.jpeg */ = {isa = PBXFileReference; lastKnownFileType = image.jpeg; path = plane1.jpeg; sourceTree = "<group>"; };
		C4F60AD428392E7F006B990F /* GuessNumberHigherOrLower.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = GuessNumberHigherOrLower.cpp; sourceTree = "<group>"; };
		C4F60AD528392E7F006B990F /* GuessNumberHigherOrLower.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = GuessNumberHigherOrLower.hpp; sourceTree = "<group>"; };
		C4F60AD828393581006B990F /* PeakIndexInAMountainArray.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = PeakIndexInAMountainArray.cpp; sourceTree = "<group>"; };
		C4F60AD928393581006B990F /* PeakIndexInAMountainArray.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = PeakIndexInAMountainArray.hpp; sourceTree = "<group>"; };
		C4F60ADC283A1302006B990F /* ValidPerfectSquare.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = ValidPerfectSquare.cpp; sourceTree = "<group>"; };
		C4F60ADD283A1302006B990F /* ValidPerfectSquare.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = ValidPerfectSquare.hpp; sourceTree = "<group>"; };
		C4F60AE0283BDDC5006B990F /* FindTheDistanceValueBetweenTwoArrays.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = FindTheDistanceValueBetweenTwoArrays.cpp; sourceTree = "<group>"; };
		C4F60AE1283BDDC5006B990F /* FindTheDistanceValueBetweenTwoArrays.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = FindTheDistanceValueBetweenTwoArrays.hpp; sourceTree = "<group>"; };
		C4FC33C41D52C115001B5F2F /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		C4FC5ECD29A38410001CDED1 /* LeetCode-main-Bridging-Header.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = "LeetCode-main-Bridging-Header.h"; sourceTree = "<group>"; };
		C4FC5ECE29A38410001CDED1 /* CountOddNumbersInAnIntervalRange.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CountOddNumbersInAnIntervalRange.swift; sourceTree = "<group>"; };
		C4FC5ED429A384FA001CDED1 /* LeetCode-Swift */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; includeInIndex = 0; path = "LeetCode-Swift"; sourceTree = BUILT_PRODUCTS_DIR; };
		C4FC5ED629A384FA001CDED1 /* main.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = main.swift; sourceTree = "<group>"; };
		C4FC5EF229A3C3B6001CDED1 /* AverageSalaryExcludingTheMinimumAndMaximumSalary .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "AverageSalaryExcludingTheMinimumAndMaximumSalary .swift"; sourceTree = "<group>"; };
		C4FC5EF429A497EC001CDED1 /* NumberOf1Bits.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = NumberOf1Bits.swift; sourceTree = "<group>"; };
		C4FC5EF729A4A380001CDED1 /* SubtractTheProductAndSumOfDigitsOfAnInteger .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "SubtractTheProductAndSumOfDigitsOfAnInteger .swift"; sourceTree = "<group>"; };
		C4FC5EFA29A4B509001CDED1 /* LargestPerimeterTriangle .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "LargestPerimeterTriangle .swift"; sourceTree = "<group>"; };
		C4FC5EFD29A66583001CDED1 /* FindNearestPointThatHasTheSameXOrYCoordinate.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FindNearestPointThatHasTheSameXOrYCoordinate.swift; sourceTree = "<group>"; };
		C4FC5F0029A900D5001CDED1 /* SignOfTheProductOfAnArray .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "SignOfTheProductOfAnArray .swift"; sourceTree = "<group>"; };
		C4FC5F0329AA5C77001CDED1 /* CanMakeArithmeticProgressionFromSequence .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "CanMakeArithmeticProgressionFromSequence .swift"; sourceTree = "<group>"; };
		C4FC5F0529ABAF09001CDED1 /* HappyNumber .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "HappyNumber .swift"; sourceTree = "<group>"; };
		C4FC5F0829AD0975001CDED1 /* CheckIfOneStringSwapCanMakeStringsEqual .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "CheckIfOneStringSwapCanMakeStringsEqual .swift"; sourceTree = "<group>"; };
		C4FC5F0B29AE5B66001CDED1 /* N-aryTreePreorderTraversal .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "N-aryTreePreorderTraversal .swift"; sourceTree = "<group>"; };
		C4FC5F0D29AE5B9D001CDED1 /* Node.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Node.swift; sourceTree = "<group>"; };
		C4FC5F0F29AFB7EA001CDED1 /* sample_4_964.png */ = {isa = PBXFileReference; lastKnownFileType = image.png; path = sample_4_964.png; sourceTree = "<group>"; };
		CB15A52927C730A900B4AFA1 /* RansomNote.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = RansomNote.cpp; sourceTree = "<group>"; };
		CB15A52A27C730A900B4AFA1 /* RansomNote.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = RansomNote.hpp; sourceTree = "<group>"; };
		CB15B67527C7A94A00B4AFA1 /* ValidAnagram.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = ValidAnagram.cpp; sourceTree = "<group>"; };
		CB15B67627C7A94A00B4AFA1 /* ValidAnagram.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = ValidAnagram.hpp; sourceTree = "<group>"; };
		CB15B67C27C7B2FB00B4AFA1 /* LinkedListCycle.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = LinkedListCycle.cpp; sourceTree = "<group>"; };
		CB15B67D27C7B2FC00B4AFA1 /* LinkedListCycle.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = LinkedListCycle.hpp; sourceTree = "<group>"; };
		CB15B68127C876B500B4AFA1 /* MergeTwoSortedLists.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = MergeTwoSortedLists.cpp; sourceTree = "<group>"; };
		CB15B68227C876B500B4AFA1 /* MergeTwoSortedLists.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = MergeTwoSortedLists.hpp; sourceTree = "<group>"; };
		CB15D99027CE563300B4AFA1 /* BinaryTreeLevelOrderTraversal.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = BinaryTreeLevelOrderTraversal.cpp; sourceTree = "<group>"; };
		CB15D99127CE563300B4AFA1 /* BinaryTreeLevelOrderTraversal.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = BinaryTreeLevelOrderTraversal.hpp; sourceTree = "<group>"; };
		CB15D99427CF0AB400B4AFA1 /* SymmetricTree.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = SymmetricTree.cpp; sourceTree = "<group>"; };
		CB15D99527CF0AB400B4AFA1 /* SymmetricTree.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = SymmetricTree.hpp; sourceTree = "<group>"; };
		CB2C412E27FF10EE00A3658A /* ReverseString.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = ReverseString.cpp; sourceTree = "<group>"; };
		CB2C412F27FF10EE00A3658A /* ReverseString.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = ReverseString.hpp; sourceTree = "<group>"; };
		CB2C413227FF145D00A3658A /* ReverseWordsInAStringIII.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = ReverseWordsInAStringIII.cpp; sourceTree = "<group>"; };
		CB2C413327FF145D00A3658A /* ReverseWordsInAStringIII.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = ReverseWordsInAStringIII.hpp; sourceTree = "<group>"; };
		CB50F9852816CBC90097E359 /* SubsetsII.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = SubsetsII.cpp; sourceTree = "<group>"; };
		CB50F9862816CBC90097E359 /* SubsetsII.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = SubsetsII.hpp; sourceTree = "<group>"; };
		CB619F7128051C6500E5E737 /* MaxAreaOfIsland.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = MaxAreaOfIsland.cpp; sourceTree = "<group>"; };
		CB619F7228051C6500E5E737 /* MaxAreaOfIsland.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = MaxAreaOfIsland.hpp; sourceTree = "<group>"; };
		CB61B0ED28056F9A00E5E737 /* MergeTwoBinaryTrees.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = MergeTwoBinaryTrees.cpp; sourceTree = "<group>"; };
		CB61B0EE28056F9A00E5E737 /* MergeTwoBinaryTrees.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = MergeTwoBinaryTrees.hpp; sourceTree = "<group>"; };
		CB61B0F12805A63A00E5E737 /* PopulatingNextRightPointersInEachNode.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = PopulatingNextRightPointersInEachNode.cpp; sourceTree = "<group>"; };
		CB61B0F22805A63A00E5E737 /* PopulatingNextRightPointersInEachNode.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = PopulatingNextRightPointersInEachNode.hpp; sourceTree = "<group>"; };
		CB61B0F42805A71800E5E737 /* Node.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = Node.cpp; sourceTree = "<group>"; };
		CB61B0F52805A71800E5E737 /* Node.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = Node.hpp; sourceTree = "<group>"; };
		CB624D76280ED77C00BED7B6 /* BackspaceStringCompare.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = BackspaceStringCompare.cpp; sourceTree = "<group>"; };
		CB624D77280ED77C00BED7B6 /* BackspaceStringCompare.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = BackspaceStringCompare.hpp; sourceTree = "<group>"; };
		CB624D7A280EE37800BED7B6 /* IntervalListIntersections.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = IntervalListIntersections.cpp; sourceTree = "<group>"; };
		CB624D7B280EE37800BED7B6 /* IntervalListIntersections.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = IntervalListIntersections.hpp; sourceTree = "<group>"; };
		CB625F1228115E6700BED7B6 /* MinimumSizeSubarraySum.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = MinimumSizeSubarraySum.cpp; sourceTree = "<group>"; };
		CB625F1328115E6700BED7B6 /* MinimumSizeSubarraySum.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = MinimumSizeSubarraySum.hpp; sourceTree = "<group>"; };
		CB761DB62812A48A0075CA1B /* NumberOfProvinces.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = NumberOfProvinces.cpp; sourceTree = "<group>"; };
		CB761DB72812A48A0075CA1B /* NumberOfProvinces.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = NumberOfProvinces.hpp; sourceTree = "<group>"; };
		CB761DF1281554C90075CA1B /* SurroundedRegions.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = SurroundedRegions.cpp; sourceTree = "<group>"; };
		CB761DF2281554C90075CA1B /* SurroundedRegions.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = SurroundedRegions.hpp; sourceTree = "<group>"; };
		CB8C3C2827D7515E00576C6D /* RotateImage.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = RotateImage.cpp; sourceTree = "<group>"; };
		CB8C3C2927D7515E00576C6D /* RotateImage.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = RotateImage.hpp; sourceTree = "<group>"; };
		CB8C3C2C27D77C9F00576C6D /* SpiralMatrixII.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = SpiralMatrixII.cpp; sourceTree = "<group>"; };
		CB8C3C2D27D77C9F00576C6D /* SpiralMatrixII.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = SpiralMatrixII.hpp; sourceTree = "<group>"; };
		CBFE2431280830EC00B191C1 /* Permutations.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = Permutations.cpp; sourceTree = "<group>"; };
		CBFE2432280830EC00B191C1 /* Permutations.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = Permutations.hpp; sourceTree = "<group>"; };
		CBFE24352808500C00B191C1 /* LetterCasePermutation.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = LetterCasePermutation.cpp; sourceTree = "<group>"; };
		CBFE24362808500C00B191C1 /* LetterCasePermutation.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = LetterCasePermutation.hpp; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		C42241D727BC5EF300E5B034 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		C4FC5ED129A384FA001CDED1 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		C402A06027EAACF80083C036 /* 108. Convert Sorted Array to Binary Search Tree  */ = {
			isa = PBXGroup;
			children = (
				C402A06227EAAD050083C036 /* ConvertSortedArrayToBinarySearchTree.hpp */,
				C402A06127EAAD050083C036 /* ConvertSortedArrayToBinarySearchTree.cpp */,
			);
			path = "108. Convert Sorted Array to Binary Search Tree ";
			sourceTree = "<group>";
		};
		C402A06427EABFEC0083C036 /* 105. Construct Binary Tree from Preorder and Inorder Traversal  */ = {
			isa = PBXGroup;
			children = (
				C402A06627EABFFB0083C036 /* ConstructBinaryTreeFromPreorderAndInorderTraversal.hpp */,
				C402A06527EABFFB0083C036 /* ConstructBinaryTreeFromPreorderAndInorderTraversal.cpp */,
			);
			path = "105. Construct Binary Tree from Preorder and Inorder Traversal ";
			sourceTree = "<group>";
		};
		C402A06827EB4D770083C036 /* 103. Binary Tree Zigzag Level Order Traversal  */ = {
			isa = PBXGroup;
			children = (
				C402A06A27EB4D840083C036 /* BinaryTreeZigzagLevelOrderTraversal.hpp */,
				C402A06927EB4D840083C036 /* BinaryTreeZigzagLevelOrderTraversal.cpp */,
			);
			path = "103. Binary Tree Zigzag Level Order Traversal ";
			sourceTree = "<group>";
		};
		C402A06C27EB70180083C036 /* 199. Binary Tree Right Side View  */ = {
			isa = PBXGroup;
			children = (
				C402A06E27EB70270083C036 /* BinaryTreeRightSideView.hpp */,
				C402A06D27EB70270083C036 /* BinaryTreeRightSideView.cpp */,
			);
			path = "199. Binary Tree Right Side View ";
			sourceTree = "<group>";
		};
		C402A07027EB7C100083C036 /* 113. Path Sum II  */ = {
			isa = PBXGroup;
			children = (
				C402A07227EB7C460083C036 /* PathSumII.hpp */,
				C402A07127EB7C460083C036 /* PathSumII.cpp */,
			);
			path = "113. Path Sum II ";
			sourceTree = "<group>";
		};
		C402A07427ECB33A0083C036 /* 450. Delete Node in a BST  */ = {
			isa = PBXGroup;
			children = (
				C402A07627ECB3500083C036 /* DeleteNodeInABST.hpp */,
				C402A07527ECB3500083C036 /* DeleteNodeInABST.cpp */,
			);
			path = "450. Delete Node in a BST ";
			sourceTree = "<group>";
		};
		C4130D921D40AA9600AB673F = {
			isa = PBXGroup;
			children = (
				C4D85DD51D43D0B50092E613 /* README.md */,
				C4FC5ED529A384FA001CDED1 /* LeetCode-Swift */,
				C42241DB27BC5EF300E5B034 /* LeetCode-main */,
				C4A511F127CC51A10004D026 /* Library */,
				C493918D27FB4A7700E2CF01 /* Algorithm */,
				C4A9455427D3AD2F00E452DC /* Array */,
				C4A9455527D3AE5500E452DC /* Hash Table */,
				CB15B67A27C7B10800B4AFA1 /* Linked List */,
				C4A9455727D3AEB400E452DC /* Math */,
				C4A8859D27C670B500EC168C /* String */,
				C4A511E327CA68100004D026 /* Stack */,
				C4A511EC27CC51490004D026 /* Tree */,
				C4E3857A27F1F2770024DDFF /* Graph */,
				C4B2523F27F4B3070040706B /* Heap */,
				C4CA0D9029BE2DAE00ECEF6B /* Design */,
				C493919227FBE30900E2CF01 /* Paiza */,
				C4C19DEA2A2C388000DD292D /* Interview */,
				C4130D9C1D40AA9600AB673F /* Products */,
			);
			sourceTree = "<group>";
		};
		C4130D9C1D40AA9600AB673F /* Products */ = {
			isa = PBXGroup;
			children = (
				C42241DA27BC5EF300E5B034 /* LeetCode-main */,
				C4FC5ED429A384FA001CDED1 /* LeetCode-Swift */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		C4130DAA1D40AC0C00AB673F /* 1-Two_Sum */ = {
			isa = PBXGroup;
			children = (
				C4130DAB1D40AC0C00AB673F /* main.cpp */,
			);
			path = "1-Two_Sum";
			sourceTree = "<group>";
		};
		C4130DB51D40BE9800AB673F /* 4-Median_of_Two_Sorted_Arrays */ = {
			isa = PBXGroup;
			children = (
				C4130DB61D40BE9800AB673F /* main.cpp */,
			);
			path = "4-Median_of_Two_Sorted_Arrays";
			sourceTree = "<group>";
		};
		C416E6A81D9CC0400039047D /* 29-Divide_Two_Integers */ = {
			isa = PBXGroup;
			children = (
				C416E6A91D9CC0400039047D /* main.cpp */,
			);
			path = "29-Divide_Two_Integers";
			sourceTree = "<group>";
		};
		C419D2441D4B244B000B4F20 /* 48-Rotate_Image */ = {
			isa = PBXGroup;
			children = (
				C419D2451D4B244B000B4F20 /* main.cpp */,
			);
			path = "48-Rotate_Image";
			sourceTree = "<group>";
		};
		C419D24F1D4B3AED000B4F20 /* 53-Maximum_Subarray */ = {
			isa = PBXGroup;
			children = (
				C419D2501D4B3AED000B4F20 /* main.cpp */,
			);
			path = "53-Maximum_Subarray";
			sourceTree = "<group>";
		};
		C419D25A1D4B6A63000B4F20 /* 54-Spiral_Matrix */ = {
			isa = PBXGroup;
			children = (
				C419D25B1D4B6A63000B4F20 /* main.cpp */,
			);
			path = "54-Spiral_Matrix";
			sourceTree = "<group>";
		};
		C419D2651D4DDEE7000B4F20 /* 3-Longest_Substring_Without_Repeating_Characters */ = {
			isa = PBXGroup;
			children = (
				C419D2661D4DDEE7000B4F20 /* main.cpp */,
			);
			path = "3-Longest_Substring_Without_Repeating_Characters";
			sourceTree = "<group>";
		};
		C419D2931D4EF604000B4F20 /* 30-Substring_with_Concatenation_of_All_Words */ = {
			isa = PBXGroup;
			children = (
				C419D2941D4EF604000B4F20 /* main.cpp */,
			);
			path = "30-Substring_with_Concatenation_of_All_Words";
			sourceTree = "<group>";
		};
		C4209A291D532F80009DB1E7 /* 37-Sudoku_Solver */ = {
			isa = PBXGroup;
			children = (
				C4209A2A1D532F80009DB1E7 /* main.cpp */,
			);
			path = "37-Sudoku_Solver";
			sourceTree = "<group>";
		};
		C42241D527BC5E7900E5B034 /* 217. Contains Duplicate */ = {
			isa = PBXGroup;
			children = (
				C42241E227BC5F4100E5B034 /* ContainsDuplicate.hpp */,
				C42241E127BC5F4100E5B034 /* ContainsDuplicate.cpp */,
				C4CA0D8E29BDDAF100ECEF6B /* ContainsDuplicate .swift */,
			);
			path = "217. Contains Duplicate";
			sourceTree = "<group>";
		};
		C42241DB27BC5EF300E5B034 /* LeetCode-main */ = {
			isa = PBXGroup;
			children = (
				C42241DC27BC5EF300E5B034 /* main.cpp */,
				C42241E427BC601F00E5B034 /* PrefixHeader.pch */,
				C4FC5ECD29A38410001CDED1 /* LeetCode-main-Bridging-Header.h */,
			);
			path = "LeetCode-main";
			sourceTree = "<group>";
		};
		C42241E527BC6C8700E5B034 /* 53. Maximum Subarray  */ = {
			isa = PBXGroup;
			children = (
				C42241E727BC6CA900E5B034 /* MaximumSubarray.hpp */,
				C42241E627BC6CA900E5B034 /* MaximumSubarray.cpp */,
			);
			path = "53. Maximum Subarray ";
			sourceTree = "<group>";
		};
		C42A7B211D864E400039DE1B /* 2-Add_Two_Numbers */ = {
			isa = PBXGroup;
			children = (
				C42A7B221D864E400039DE1B /* main.cpp */,
			);
			path = "2-Add_Two_Numbers";
			sourceTree = "<group>";
		};
		C43616941D99181500FB468B /* 13-Roman_to_Integer */ = {
			isa = PBXGroup;
			children = (
				C43616951D99181500FB468B /* main.cpp */,
			);
			path = "13-Roman_to_Integer";
			sourceTree = "<group>";
		};
		C438E2B71D48973D00DDA9D3 /* 41-First_Missing_Positive */ = {
			isa = PBXGroup;
			children = (
				C438E2B81D48973D00DDA9D3 /* main.cpp */,
			);
			path = "41-First_Missing_Positive";
			sourceTree = "<group>";
		};
		C438E2C21D49CADF00DDA9D3 /* 42-Trapping_Rain_Water */ = {
			isa = PBXGroup;
			children = (
				C438E2C31D49CADF00DDA9D3 /* main.cpp */,
			);
			path = "42-Trapping_Rain_Water";
			sourceTree = "<group>";
		};
		C438E2CD1D49ED7B00DDA9D3 /* 45-Jump_Game_II */ = {
			isa = PBXGroup;
			children = (
				C438E2CE1D49ED7B00DDA9D3 /* main.cpp */,
			);
			path = "45-Jump_Game_II";
			sourceTree = "<group>";
		};
		C43C86C41D5B10E300D3712C /* 84-Largest_Rectangle_in_Histogram */ = {
			isa = PBXGroup;
			children = (
				C43C86C51D5B10E300D3712C /* main.cpp */,
			);
			path = "84-Largest_Rectangle_in_Histogram";
			sourceTree = "<group>";
		};
		C43C86D01D5D5B4E00D3712C /* 32_Longest_Valid_Parentheses */ = {
			isa = PBXGroup;
			children = (
				C43C86D11D5D5B4E00D3712C /* main.cpp */,
			);
			path = 32_Longest_Valid_Parentheses;
			sourceTree = "<group>";
		};
		C44BB83F1D45BB150058B979 /* 26-Remove_Duplicates_from_Sorted_Array */ = {
			isa = PBXGroup;
			children = (
				C44BB8401D45BB150058B979 /* main.cpp */,
			);
			path = "26-Remove_Duplicates_from_Sorted_Array";
			sourceTree = "<group>";
		};
		C44BB84A1D45E77B0058B979 /* 27-Remove_Element */ = {
			isa = PBXGroup;
			children = (
				C44BB84B1D45E77B0058B979 /* main.cpp */,
			);
			path = "27-Remove_Element";
			sourceTree = "<group>";
		};
		C44BB8551D46EA390058B979 /* 31-Next_Permutation */ = {
			isa = PBXGroup;
			children = (
				C44BB8561D46EA390058B979 /* main.cpp */,
			);
			path = "31-Next_Permutation";
			sourceTree = "<group>";
		};
		C44BB8601D4729B90058B979 /* 33-Search_in_Rotated_Sorted_Array */ = {
			isa = PBXGroup;
			children = (
				C44BB8611D4729B90058B979 /* main.cpp */,
			);
			path = "33-Search_in_Rotated_Sorted_Array";
			sourceTree = "<group>";
		};
		C44BB86B1D4743510058B979 /* 34_Search_for_a_Range */ = {
			isa = PBXGroup;
			children = (
				C44BB86C1D4743510058B979 /* main.cpp */,
			);
			path = 34_Search_for_a_Range;
			sourceTree = "<group>";
		};
		C44BB8761D4836B10058B979 /* 35-Search_Insert_Position */ = {
			isa = PBXGroup;
			children = (
				C44BB8771D4836B10058B979 /* main.cpp */,
			);
			path = "35-Search_Insert_Position";
			sourceTree = "<group>";
		};
		C44BB8811D4856A50058B979 /* 39-Combination_Sum */ = {
			isa = PBXGroup;
			children = (
				C44BB8761D4836B10058B979 /* 35-Search_Insert_Position */,
				C44BB8821D4856A50058B979 /* main.cpp */,
			);
			path = "39-Combination_Sum";
			sourceTree = "<group>";
		};
		C44BB8971D4887D80058B979 /* 40-Combination_Sum_II */ = {
			isa = PBXGroup;
			children = (
				C44BB8981D4887D80058B979 /* main.cpp */,
			);
			path = "40-Combination_Sum_II";
			sourceTree = "<group>";
		};
		C452371A1D5848BE00205120 /* 76-Minimum_Window_Substring */ = {
			isa = PBXGroup;
			children = (
				C452371B1D5848BE00205120 /* main.cpp */,
			);
			path = "76-Minimum_Window_Substring";
			sourceTree = "<group>";
		};
		C4549C512A06997C006BB982 /* 739. Daily Temperatures  */ = {
			isa = PBXGroup;
			children = (
				C4549C522A06998E006BB982 /* DailyTemperatures .swift */,
			);
			path = "739. Daily Temperatures ";
			sourceTree = "<group>";
		};
		C4549C5A2A0933DA006BB982 /* 54. Spiral Matrix  */ = {
			isa = PBXGroup;
			children = (
				C4549C5B2A0933E4006BB982 /* SpiralMatrix .swift */,
				C4549C5D2A093566006BB982 /* spiral.jpg */,
				C4549C5E2A093566006BB982 /* spiral1.jpg */,
			);
			path = "54. Spiral Matrix ";
			sourceTree = "<group>";
		};
		C454CE872A1F9449006BB982 /* 1630. Arithmetic Subarrays  */ = {
			isa = PBXGroup;
			children = (
				C454CE882A1F945D006BB982 /* ArithmeticSubarrays .swift */,
			);
			path = "1630. Arithmetic Subarrays ";
			sourceTree = "<group>";
		};
		C454CE8A2A1F9B42006BB982 /* 429. N-ary Tree Level Order Traversal  */ = {
			isa = PBXGroup;
			children = (
				C454CE8B2A1F9B50006BB982 /* N-aryTreeLevelOrderTraversal .swift */,
				C454CE8D2A1F9BB8006BB982 /* narytreeexample.png */,
			);
			path = "429. N-ary Tree Level Order Traversal ";
			sourceTree = "<group>";
		};
		C45620F11D94C50D008F81B9 /* 9-Palindrome_Number */ = {
			isa = PBXGroup;
			children = (
				C45620F21D94C50D008F81B9 /* main.cpp */,
			);
			path = "9-Palindrome_Number";
			sourceTree = "<group>";
		};
		C461DD3D29E3E44100FB7CC0 /* 111. Minimum Depth of Binary Tree  */ = {
			isa = PBXGroup;
			children = (
				C461DD3E29E3E45200FB7CC0 /* MinimumDepthOfBinaryTree .swift */,
				C461DD4029E3F1D400FB7CC0 /* ex_depth.jpg */,
			);
			path = "111. Minimum Depth of Binary Tree ";
			sourceTree = "<group>";
		};
		C4635AE91D7BC5830012CD4B /* 85-Maximal_Rectangle */ = {
			isa = PBXGroup;
			children = (
				C4635AEA1D7BC5830012CD4B /* main.cpp */,
			);
			path = "85-Maximal_Rectangle";
			sourceTree = "<group>";
		};
		C4635AF41D7C17EE0012CD4B /* 94-Binary_Tree_Inorder_Traversal */ = {
			isa = PBXGroup;
			children = (
				C4635AF51D7C17EE0012CD4B /* main.cpp */,
			);
			path = "94-Binary_Tree_Inorder_Traversal";
			sourceTree = "<group>";
		};
		C481ECFA2802B7480022DEEC /* 567. Permutation in String  */ = {
			isa = PBXGroup;
			children = (
				C481ECFC2802B7540022DEEC /* PermutationInString.hpp */,
				C481ECFB2802B7540022DEEC /* PermutationInString.cpp */,
			);
			path = "567. Permutation in String ";
			sourceTree = "<group>";
		};
		C481ECFE28047D2A0022DEEC /* 438. Find All Anagrams in a String  */ = {
			isa = PBXGroup;
			children = (
				C481ED0028047D380022DEEC /* FindAllAnagramsInAString.hpp */,
				C481ECFF28047D380022DEEC /* FindAllAnagramsInAString.cpp */,
			);
			path = "438. Find All Anagrams in a String ";
			sourceTree = "<group>";
		};
		C481ED022804825D0022DEEC /* BFS & DFS */ = {
			isa = PBXGroup;
			children = (
				C454CE8A2A1F9B42006BB982 /* 429. N-ary Tree Level Order Traversal  */,
				C4A62F3F284C902F00F404D6 /* 1367. Linked List in Binary Tree  */,
				C4A62F2D284B01B000F404D6 /* 110. Balanced Binary Tree  */,
				C484BA7D2815A28300CF92BD /* 797. All Paths From Source to Target  */,
				CB761DF0281554BD0075CA1B /* 130. Surrounded Regions  */,
				C484BA79281401B700CF92BD /* 1091. Shortest Path in Binary Matrix  */,
				C484BA752813C45F00CF92BD /* 572. Subtree of Another Tree  */,
				C49BE7A02812FB75008ACB59 /* 117. Populating Next Right Pointers in Each Node II  */,
				CB761DB52812A47C0075CA1B /* 547. Number of Provinces  */,
				C49BE79928123CE3008ACB59 /* 200. Number of Islands  */,
				C4B684442807115B00B41B2F /* 994. Rotting Oranges  */,
				C481ED072805CFE10022DEEC /* 542. 01 Matrix  */,
				CB61B0F02805A62300E5E737 /* 116. Populating Next Right Pointers in Each Node  */,
				CB61B0EC28056F7900E5E737 /* 617. Merge Two Binary Trees  */,
				CB619F7028051C4800E5E737 /* 695. Max Area of Island  */,
				C481ED032804826A0022DEEC /* 733. Flood Fill  */,
			);
			path = "BFS & DFS";
			sourceTree = "<group>";
		};
		C481ED032804826A0022DEEC /* 733. Flood Fill  */ = {
			isa = PBXGroup;
			children = (
				C481ED05280482730022DEEC /* FloodFill.hpp */,
				C481ED04280482730022DEEC /* FloodFill.cpp */,
			);
			path = "733. Flood Fill ";
			sourceTree = "<group>";
		};
		C481ED072805CFE10022DEEC /* 542. 01 Matrix  */ = {
			isa = PBXGroup;
			children = (
				C481ED092805CFF50022DEEC /* 01Matrix.hpp */,
				C481ED082805CFF50022DEEC /* 01Matrix.cpp */,
			);
			path = "542. 01 Matrix ";
			sourceTree = "<group>";
		};
		C484BA752813C45F00CF92BD /* 572. Subtree of Another Tree  */ = {
			isa = PBXGroup;
			children = (
				C484BA772813C46E00CF92BD /* SubtreeOfAnotherTree.hpp */,
				C484BA762813C46E00CF92BD /* SubtreeOfAnotherTree.cpp */,
			);
			path = "572. Subtree of Another Tree ";
			sourceTree = "<group>";
		};
		C484BA79281401B700CF92BD /* 1091. Shortest Path in Binary Matrix  */ = {
			isa = PBXGroup;
			children = (
				C484BA7B281401C400CF92BD /* ShortestPathInBinaryMatrix.hpp */,
				C484BA7A281401C400CF92BD /* ShortestPathInBinaryMatrix.cpp */,
			);
			path = "1091. Shortest Path in Binary Matrix ";
			sourceTree = "<group>";
		};
		C484BA7D2815A28300CF92BD /* 797. All Paths From Source to Target  */ = {
			isa = PBXGroup;
			children = (
				C484BA7F2815A2AE00CF92BD /* AllPathsFromSourceToTarget.hpp */,
				C484BA7E2815A2AE00CF92BD /* AllPathsFromSourceToTarget.cpp */,
			);
			path = "797. All Paths From Source to Target ";
			sourceTree = "<group>";
		};
		C484BA81281631A500CF92BD /* 78. Subsets  */ = {
			isa = PBXGroup;
			children = (
				C484BA83281631AE00CF92BD /* Subsets.hpp */,
				C484BA82281631AE00CF92BD /* Subsets.cpp */,
			);
			path = "78. Subsets ";
			sourceTree = "<group>";
		};
		C484BA852816F08300CF92BD /* 47. Permutations II  */ = {
			isa = PBXGroup;
			children = (
				C484BA872816F08C00CF92BD /* PermutationsII.hpp */,
				C484BA862816F08C00CF92BD /* PermutationsII.cpp */,
			);
			path = "47. Permutations II ";
			sourceTree = "<group>";
		};
		C484BA8928182A1800CF92BD /* 39. Combination Sum  */ = {
			isa = PBXGroup;
			children = (
				C484BA8B28182A2100CF92BD /* CombinationSum.hpp */,
				C484BA8A28182A2100CF92BD /* CombinationSum.cpp */,
			);
			path = "39. Combination Sum ";
			sourceTree = "<group>";
		};
		C484BA9028184A0400CF92BD /* 40. Combination Sum II  */ = {
			isa = PBXGroup;
			children = (
				C484BA9228184A0D00CF92BD /* CombinationSumII.hpp */,
				C484BA9128184A0D00CF92BD /* CombinationSumII.cpp */,
			);
			path = "40. Combination Sum II ";
			sourceTree = "<group>";
		};
		C484BA942819859F00CF92BD /* 17. Letter Combinations of a Phone Number  */ = {
			isa = PBXGroup;
			children = (
				C484BA96281985AE00CF92BD /* LetterCombinationsOfAPhoneNumber.hpp */,
				C484BA95281985AE00CF92BD /* LetterCombinationsOfAPhoneNumber.cpp */,
				C484BA982819868400CF92BD /* 200px-Telephone-keypad2.svg.webp */,
			);
			path = "17. Letter Combinations of a Phone Number ";
			sourceTree = "<group>";
		};
		C484BA992819987900CF92BD /* 22. Generate Parentheses  */ = {
			isa = PBXGroup;
			children = (
				C484BA9B2819988B00CF92BD /* GenerateParentheses.hpp */,
				C484BA9A2819988B00CF92BD /* GenerateParentheses.cpp */,
			);
			path = "22. Generate Parentheses ";
			sourceTree = "<group>";
		};
		C484BA9E281A322B00CF92BD /* 79. Word Search  */ = {
			isa = PBXGroup;
			children = (
				C484BAA0281A323400CF92BD /* WordSearch.hpp */,
				C484BA9F281A323400CF92BD /* WordSearch.cpp */,
				C484BAA2281A32F000CF92BD /* word2.jpeg */,
			);
			path = "79. Word Search ";
			sourceTree = "<group>";
		};
		C484BAA4281ADE0F00CF92BD /* 213. House Robber II  */ = {
			isa = PBXGroup;
			children = (
				C484BAA6281ADE2100CF92BD /* HouseRobberII.hpp */,
				C484BAA5281ADE2100CF92BD /* HouseRobberII.cpp */,
			);
			path = "213. House Robber II ";
			sourceTree = "<group>";
		};
		C484BAA8281B7CA400CF92BD /* 55. Jump Game  */ = {
			isa = PBXGroup;
			children = (
				C484BAAA281B7CB000CF92BD /* JumpGame.hpp */,
				C484BAA9281B7CB000CF92BD /* JumpGame.cpp */,
			);
			path = "55. Jump Game ";
			sourceTree = "<group>";
		};
		C484BAAC281C345000CF92BD /* 45. Jump Game II  */ = {
			isa = PBXGroup;
			children = (
				C484BAAF281C345E00CF92BD /* JumpGameII.hpp */,
				C484BAAE281C345E00CF92BD /* JumpGameII.cpp */,
			);
			path = "45. Jump Game II ";
			sourceTree = "<group>";
		};
		C484BAB1281FAE0700CF92BD /* 62. Unique Paths  */ = {
			isa = PBXGroup;
			children = (
				C484BAB3281FAE1100CF92BD /* UniquePaths.hpp */,
				C484BAB2281FAE1100CF92BD /* UniquePaths.cpp */,
				C484BAB5281FD35B00CF92BD /* robot_maze.png */,
			);
			path = "62. Unique Paths ";
			sourceTree = "<group>";
		};
		C484BAB62820E27A00CF92BD /* 413. Arithmetic Slices  */ = {
			isa = PBXGroup;
			children = (
				C484BAB82820E28600CF92BD /* ArithmeticSlices.hpp */,
				C484BAB72820E28600CF92BD /* ArithmeticSlices.cpp */,
			);
			path = "413. Arithmetic Slices ";
			sourceTree = "<group>";
		};
		C489C5D227CD172E002A6D34 /* 94. Binary Tree Inorder Traversal  */ = {
			isa = PBXGroup;
			children = (
				C489C5D427CD173D002A6D34 /* BinaryTreeInorderTraversal.hpp */,
				C489C5D327CD173D002A6D34 /* BinaryTreeInorderTraversal.cpp */,
			);
			path = "94. Binary Tree Inorder Traversal ";
			sourceTree = "<group>";
		};
		C489C5D627CD2690002A6D34 /* 145. Binary Tree Postorder Traversal  */ = {
			isa = PBXGroup;
			children = (
				C489C5D827CD26A2002A6D34 /* BinaryTreePostorderTraversal.hpp */,
				C489C5D727CD26A2002A6D34 /* BinaryTreePostorderTraversal.cpp */,
			);
			path = "145. Binary Tree Postorder Traversal ";
			sourceTree = "<group>";
		};
		C489C5DA27CEF8AE002A6D34 /* 104. Maximum Depth of Binary Tree  */ = {
			isa = PBXGroup;
			children = (
				C489C5DC27CEF8C3002A6D34 /* MaximumDepthOfBinaryTree.hpp */,
				C489C5DB27CEF8C3002A6D34 /* MaximumDepthOfBinaryTree.cpp */,
				C4CA0D7C29BC3FDA00ECEF6B /* MaximumDepthOfBinaryTree.swift */,
			);
			path = "104. Maximum Depth of Binary Tree ";
			sourceTree = "<group>";
		};
		C489C5DE27D04674002A6D34 /* 226. Invert Binary Tree  */ = {
			isa = PBXGroup;
			children = (
				C489C5E027D04687002A6D34 /* InvertBinaryTree.hpp */,
				C489C5DF27D04687002A6D34 /* InvertBinaryTree.cpp */,
			);
			path = "226. Invert Binary Tree ";
			sourceTree = "<group>";
		};
		C489C5E227D05330002A6D34 /* 112. Path Sum  */ = {
			isa = PBXGroup;
			children = (
				C489C5E427D0533C002A6D34 /* PathSum.hpp */,
				C489C5E327D0533C002A6D34 /* PathSum.cpp */,
			);
			path = "112. Path Sum ";
			sourceTree = "<group>";
		};
		C489C5E627D10DBB002A6D34 /* 700. Search in a Binary Search Tree  */ = {
			isa = PBXGroup;
			children = (
				C489C5E827D10DD6002A6D34 /* SearchInABinarySearchTree.hpp */,
				C489C5E727D10DD6002A6D34 /* SearchInABinarySearchTree.cpp */,
			);
			path = "700. Search in a Binary Search Tree ";
			sourceTree = "<group>";
		};
		C489C5EA27D11703002A6D34 /* 701. Insert into a Binary Search Tree  */ = {
			isa = PBXGroup;
			children = (
				C489C5EC27D11719002A6D34 /* InsertIntoABinarySearchTree.hpp */,
				C489C5EB27D11719002A6D34 /* InsertIntoABinarySearchTree.cpp */,
			);
			path = "701. Insert into a Binary Search Tree ";
			sourceTree = "<group>";
		};
		C489C5EE27D19ACE002A6D34 /* 98. Validate Binary Search Tree  */ = {
			isa = PBXGroup;
			children = (
				C489C5F027D19ADF002A6D34 /* ValidateBinarySearchTree.hpp */,
				C489C5EF27D19ADF002A6D34 /* ValidateBinarySearchTree.cpp */,
			);
			path = "98. Validate Binary Search Tree ";
			sourceTree = "<group>";
		};
		C48E9E6227DC41C80063E280 /* 415. Add Strings  */ = {
			isa = PBXGroup;
			children = (
				C48E9E6427DC41D40063E280 /* AddStrings.hpp */,
				C48E9E6327DC41D40063E280 /* AddStrings.cpp */,
			);
			path = "415. Add Strings ";
			sourceTree = "<group>";
		};
		C48E9E6627DC74400063E280 /* 409. Longest Palindrome  */ = {
			isa = PBXGroup;
			children = (
				C48E9E6827DC74880063E280 /* LongestPalindrome.hpp */,
				C48E9E6727DC74880063E280 /* LongestPalindrome.cpp */,
			);
			path = "409. Longest Palindrome ";
			sourceTree = "<group>";
		};
		C48E9E6A27DC894A0063E280 /* 290. Word Pattern  */ = {
			isa = PBXGroup;
			children = (
				C48E9E6C27DC89540063E280 /* WordPattern.hpp */,
				C48E9E6B27DC89540063E280 /* WordPattern.cpp */,
			);
			path = "290. Word Pattern ";
			sourceTree = "<group>";
		};
		C48E9E6E27DCE65B0063E280 /* 763. Partition Labels  */ = {
			isa = PBXGroup;
			children = (
				C48E9E7027DCE6690063E280 /* PartitionLabels.hpp */,
				C48E9E6F27DCE6690063E280 /* PartitionLabels.cpp */,
			);
			path = "763. Partition Labels ";
			sourceTree = "<group>";
		};
		C493918D27FB4A7700E2CF01 /* Algorithm */ = {
			isa = PBXGroup;
			children = (
				C4D97F152833D24400D889A0 /* Others */,
				C49BE770280C2F11008ACB59 /* Bit Manipulation */,
				C4B6844D2809012200B41B2F /* DP */,
				C4B684482807256100B41B2F /* Recursion */,
				C481ED022804825D0022DEEC /* BFS & DFS */,
				C4AC28FB2801E7F00036E6DB /* Sliding Window */,
				C4ABA57C27FCA01900E64BA2 /* Two Pointers */,
				C4ABA57B27FCA00E00E64BA2 /* Binary Search */,
			);
			path = Algorithm;
			sourceTree = "<group>";
		};
		C493918E27FB4A8700E2CF01 /* 704. Binary Search */ = {
			isa = PBXGroup;
			children = (
				C493919027FB4CB500E2CF01 /* BinarySearch.hpp */,
				C493918F27FB4CB500E2CF01 /* BinarySearch.cpp */,
			);
			path = "704. Binary Search";
			sourceTree = "<group>";
		};
		C493919227FBE30900E2CF01 /* Paiza */ = {
			isa = PBXGroup;
			children = (
				C4EB183A296964010069717E /* B096 */,
				C4ABA5952801232300E64BA2 /* S039 */,
				C4ABA5912800906800E64BA2 /* A057 */,
				C493919827FBE86E00E2CF01 /* A052 */,
				C493919327FBE32800E2CF01 /* A055 */,
			);
			path = Paiza;
			sourceTree = "<group>";
		};
		C493919327FBE32800E2CF01 /* A055 */ = {
			isa = PBXGroup;
			children = (
				C493919F27FC783300E2CF01 /* EscapeFromTheGame.hpp */,
				C49391A027FC783300E2CF01 /* EscapeFromTheGame.cpp */,
			);
			path = A055;
			sourceTree = "<group>";
		};
		C493919827FBE86E00E2CF01 /* A052 */ = {
			isa = PBXGroup;
			children = (
				C493919C27FC782D00E2CF01 /* ClimbTheStairs.hpp */,
				C493919D27FC782D00E2CF01 /* ClimbTheStairs.cpp */,
			);
			path = A052;
			sourceTree = "<group>";
		};
		C49391A227FC7C6300E2CF01 /* 278. First Bad Version  */ = {
			isa = PBXGroup;
			children = (
				C49391A427FC7C6D00E2CF01 /* FirstBadVersion.hpp */,
				C49391A327FC7C6D00E2CF01 /* FirstBadVersion.cpp */,
			);
			path = "278. First Bad Version ";
			sourceTree = "<group>";
		};
		C49391A627FC8DFE00E2CF01 /* 35. Search Insert Position  */ = {
			isa = PBXGroup;
			children = (
				C49391A827FC8E0900E2CF01 /* SearchInsertPosition.hpp */,
				C49391A727FC8E0900E2CF01 /* SearchInsertPosition.cpp */,
			);
			path = "35. Search Insert Position ";
			sourceTree = "<group>";
		};
		C49664F0282383AC00E6FB57 /* 300. Longest Increasing Subsequence */ = {
			isa = PBXGroup;
			children = (
				C49664F2282383BB00E6FB57 /* LongestIncreasingSubsequence.hpp */,
				C49664F1282383BB00E6FB57 /* LongestIncreasingSubsequence.cpp */,
			);
			path = "300. Longest Increasing Subsequence";
			sourceTree = "<group>";
		};
		C49664F4282424F400E6FB57 /* 673. Number of Longest Increasing Subsequence  */ = {
			isa = PBXGroup;
			children = (
				C49664F62824250000E6FB57 /* NumberOfLongestIncreasingSubsequence.hpp */,
				C49664F52824250000E6FB57 /* NumberOfLongestIncreasingSubsequence.cpp */,
			);
			path = "673. Number of Longest Increasing Subsequence ";
			sourceTree = "<group>";
		};
		C49664F8282581C400E6FB57 /* 1143. Longest Common Subsequence  */ = {
			isa = PBXGroup;
			children = (
				C49664FA282581CD00E6FB57 /* LongestCommonSubsequence.hpp */,
				C49664F9282581CD00E6FB57 /* LongestCommonSubsequence.cpp */,
			);
			path = "1143. Longest Common Subsequence ";
			sourceTree = "<group>";
		};
		C49664FC28276A3E00E6FB57 /* 583. Delete Operation for Two Strings  */ = {
			isa = PBXGroup;
			children = (
				C49664FE28276A5100E6FB57 /* DeleteOperationForTwoStrings.hpp */,
				C49664FD28276A5100E6FB57 /* DeleteOperationForTwoStrings.cpp */,
			);
			path = "583. Delete Operation for Two Strings ";
			sourceTree = "<group>";
		};
		C49665002827F5B900E6FB57 /* 72. Edit Distance  */ = {
			isa = PBXGroup;
			children = (
				C49665022827F5C100E6FB57 /* EditDistance.hpp */,
				C49665012827F5C100E6FB57 /* EditDistance.cpp */,
			);
			path = "72. Edit Distance ";
			sourceTree = "<group>";
		};
		C4966504282C0C5200E6FB57 /* 322. Coin Change  */ = {
			isa = PBXGroup;
			children = (
				C4966506282C0C5D00E6FB57 /* CoinChange.hpp */,
				C4966505282C0C5D00E6FB57 /* CoinChange.cpp */,
			);
			path = "322. Coin Change ";
			sourceTree = "<group>";
		};
		C49BE770280C2F11008ACB59 /* Bit Manipulation */ = {
			isa = PBXGroup;
			children = (
				C4CA0D8729BC7B1500ECEF6B /* 1356. Sort Integers by The Number of 1 Bits  */,
				C4CA0D6829B7094000ECEF6B /* 389. Find the Difference  */,
				C4A62F44284D111500F404D6 /* 67. Add Binary  */,
				C4AC722E28314D9C006412A7 /* 201. Bitwise AND of Numbers Range  */,
				C49BE779280C46A3008ACB59 /* 190. Reverse Bits  */,
				C49BE775280C365F008ACB59 /* 191. Number of 1 Bits  */,
				C49BE771280C2F15008ACB59 /* 231. Power of Two  */,
			);
			path = "Bit Manipulation";
			sourceTree = "<group>";
		};
		C49BE771280C2F15008ACB59 /* 231. Power of Two  */ = {
			isa = PBXGroup;
			children = (
				C49BE773280C2F29008ACB59 /* PowerOfTwo.hpp */,
				C49BE772280C2F29008ACB59 /* PowerOfTwo.cpp */,
			);
			path = "231. Power of Two ";
			sourceTree = "<group>";
		};
		C49BE775280C365F008ACB59 /* 191. Number of 1 Bits  */ = {
			isa = PBXGroup;
			children = (
				C49BE777280C366C008ACB59 /* NumberOf1Bits.hpp */,
				C49BE776280C366C008ACB59 /* NumberOf1Bits.cpp */,
				C4FC5EF429A497EC001CDED1 /* NumberOf1Bits.swift */,
			);
			path = "191. Number of 1 Bits ";
			sourceTree = "<group>";
		};
		C49BE779280C46A3008ACB59 /* 190. Reverse Bits  */ = {
			isa = PBXGroup;
			children = (
				C49BE77B280C46AB008ACB59 /* ReverseBits.hpp */,
				C49BE77A280C46AB008ACB59 /* ReverseBits.cpp */,
			);
			path = "190. Reverse Bits ";
			sourceTree = "<group>";
		};
		C49BE781280C55B1008ACB59 /* 34. Find First and Last Position of Element in Sorted Array  */ = {
			isa = PBXGroup;
			children = (
				C49BE783280C55C5008ACB59 /* FindFirstandLastPositionOfElementInSortedArray.hpp */,
				C49BE782280C55C5008ACB59 /* FindFirstandLastPositionOfElementInSortedArray.cpp */,
			);
			path = "34. Find First and Last Position of Element in Sorted Array ";
			sourceTree = "<group>";
		};
		C49BE785280D553E008ACB59 /* 33. Search in Rotated Sorted Array  */ = {
			isa = PBXGroup;
			children = (
				C49BE787280D554A008ACB59 /* SearchInRotatedSortedArray.hpp */,
				C49BE786280D554A008ACB59 /* SearchInRotatedSortedArray.cpp */,
			);
			path = "33. Search in Rotated Sorted Array ";
			sourceTree = "<group>";
		};
		C49BE789280DA41A008ACB59 /* 153. Find Minimum in Rotated Sorted Array  */ = {
			isa = PBXGroup;
			children = (
				C49BE78B280DA426008ACB59 /* FindMinimumInRotatedSortedArray.hpp */,
				C49BE78A280DA426008ACB59 /* FindMinimumInRotatedSortedArray.cpp */,
			);
			path = "153. Find Minimum in Rotated Sorted Array ";
			sourceTree = "<group>";
		};
		C49BE78D280DAEB4008ACB59 /* 162. Find Peak Element  */ = {
			isa = PBXGroup;
			children = (
				C49BE78F280DAEBE008ACB59 /* FindPeakElement.hpp */,
				C49BE78E280DAEBE008ACB59 /* FindPeakElement.cpp */,
			);
			path = "162. Find Peak Element ";
			sourceTree = "<group>";
		};
		C49BE791280F0FA4008ACB59 /* 11. Container With Most Water  */ = {
			isa = PBXGroup;
			children = (
				C49BE793280F0FB9008ACB59 /* ContainerWithMostWater.hpp */,
				C49BE792280F0FB9008ACB59 /* ContainerWithMostWater.cpp */,
			);
			path = "11. Container With Most Water ";
			sourceTree = "<group>";
		};
		C49BE795281054E4008ACB59 /* 713. Subarray Product Less Than K  */ = {
			isa = PBXGroup;
			children = (
				C49BE79728105624008ACB59 /* SubarrayProductLessThanK.hpp */,
				C49BE79628105624008ACB59 /* SubarrayProductLessThanK.cpp */,
			);
			path = "713. Subarray Product Less Than K ";
			sourceTree = "<group>";
		};
		C49BE79928123CE3008ACB59 /* 200. Number of Islands  */ = {
			isa = PBXGroup;
			children = (
				C49BE79E28123D0E008ACB59 /* NumberOfIslands.hpp */,
				C49BE79D28123D0E008ACB59 /* NumberOfIslands.cpp */,
			);
			path = "200. Number of Islands ";
			sourceTree = "<group>";
		};
		C49BE7A02812FB75008ACB59 /* 117. Populating Next Right Pointers in Each Node II  */ = {
			isa = PBXGroup;
			children = (
				C49BE7A22812FB88008ACB59 /* PopulatingNextRightPointersInEachNodeII.hpp */,
				C49BE7A12812FB88008ACB59 /* PopulatingNextRightPointersInEachNodeII.cpp */,
			);
			path = "117. Populating Next Right Pointers in Each Node II ";
			sourceTree = "<group>";
		};
		C49F2FF51D8C39EA004E8E43 /* 24-Swap_Nodes_in_Pairs */ = {
			isa = PBXGroup;
			children = (
				C49F2FF61D8C39EA004E8E43 /* main.cpp */,
			);
			path = "24-Swap_Nodes_in_Pairs";
			sourceTree = "<group>";
		};
		C4A043131D890B2000551755 /* 19-Remove_Nth_Node_From_End_of_List */ = {
			isa = PBXGroup;
			children = (
				C4A043141D890B2000551755 /* main.cpp */,
			);
			path = "19-Remove_Nth_Node_From_End_of_List";
			sourceTree = "<group>";
		};
		C4A0431E1D89164400551755 /* 21-Merge_Two_Sorted_Lists */ = {
			isa = PBXGroup;
			children = (
				C4A0431F1D89164400551755 /* main.cpp */,
			);
			path = "21-Merge_Two_Sorted_Lists";
			sourceTree = "<group>";
		};
		C4A0432F1D89233A00551755 /* 23-Merge_k_Sorted_Lists */ = {
			isa = PBXGroup;
			children = (
				C4A043301D89233A00551755 /* main.cpp */,
			);
			path = "23-Merge_k_Sorted_Lists";
			sourceTree = "<group>";
		};
		C4A0B01428223448003EECAF /* 91. Decode Ways  */ = {
			isa = PBXGroup;
			children = (
				C4A0B01628223454003EECAF /* DecodeWays.hpp */,
				C4A0B01528223454003EECAF /* DecodeWays.cpp */,
			);
			path = "91. Decode Ways ";
			sourceTree = "<group>";
		};
		C4A0B01828226751003EECAF /* 139. Word Break  */ = {
			isa = PBXGroup;
			children = (
				C4A0B01A2822675A003EECAF /* WordBreak.hpp */,
				C4A0B0192822675A003EECAF /* WordBreak.cpp */,
			);
			path = "139. Word Break ";
			sourceTree = "<group>";
		};
		C4A18EC81D98A5D500FF6791 /* 12-Integer_to_Roman */ = {
			isa = PBXGroup;
			children = (
				C4A18EC91D98A5D500FF6791 /* main.cpp */,
			);
			path = "12-Integer_to_Roman";
			sourceTree = "<group>";
		};
		C4A337CD27BD55F600B1DBAD /* 1. Two Sum  */ = {
			isa = PBXGroup;
			children = (
				C4A337CF27BD561D00B1DBAD /* TwoSum.hpp */,
				C4A337CE27BD561D00B1DBAD /* TwoSum.cpp */,
			);
			path = "1. Two Sum ";
			sourceTree = "<group>";
		};
		C4A337D127BDDA7800B1DBAD /* 88. Merge Sorted Array  */ = {
			isa = PBXGroup;
			children = (
				C4A337D327BDDA9000B1DBAD /* MergeSortedArray.hpp */,
				C4A337D227BDDA9000B1DBAD /* MergeSortedArray.cpp */,
			);
			path = "88. Merge Sorted Array ";
			sourceTree = "<group>";
		};
		C4A337D527BE944F00B1DBAD /* 350. Intersection of Two Arrays II  */ = {
			isa = PBXGroup;
			children = (
				C4A337D727BE947F00B1DBAD /* IntersectionOfTwoArraysII.hpp */,
				C4A337D627BE947F00B1DBAD /* IntersectionOfTwoArraysII.cpp */,
			);
			path = "350. Intersection of Two Arrays II ";
			sourceTree = "<group>";
		};
		C4A337D927BF8F4900B1DBAD /* 121. Best Time to Buy and Sell Stock  */ = {
			isa = PBXGroup;
			children = (
				C4A337DB27BF8F6D00B1DBAD /* BestTimeToBuyAndSellStock.hpp */,
				C4A337DA27BF8F6D00B1DBAD /* BestTimeToBuyAndSellStock.cpp */,
			);
			path = "121. Best Time to Buy and Sell Stock ";
			sourceTree = "<group>";
		};
		C4A511DE27C9CED00004D026 /* 83. Remove Duplicates from Sorted List  */ = {
			isa = PBXGroup;
			children = (
				C4A511E127C9CEEA0004D026 /* RemoveDuplicatesFromSortedList.hpp */,
				C4A511E027C9CEEA0004D026 /* RemoveDuplicatesFromSortedList.cpp */,
			);
			path = "83. Remove Duplicates from Sorted List ";
			sourceTree = "<group>";
		};
		C4A511E327CA68100004D026 /* Stack */ = {
			isa = PBXGroup;
			children = (
				C4549C512A06997C006BB982 /* 739. Daily Temperatures  */,
				C4CA0D5729B3A82600ECEF6B /* 496. Next Greater Element I  */,
				C4A62F37284C78C000F404D6 /* 150. Evaluate Reverse Polish Notation  */,
				C4AC28F72801D21F0036E6DB /* 85. Maximal Rectangle  */,
				C4AC28F328015A110036E6DB /* 84. Largest Rectangle in Histogram  */,
				C4C9D36827E9A7E8007067BB /* 1823. Find the Winner of the Circular Game  */,
				C4C9D36427E8DC5B007067BB /* 1249. Minimum Remove to Make Valid Parentheses  */,
				C4C9D36027E8B2DE007067BB /* 155. Min Stack */,
				C4A511E827CB25160004D026 /* 232. Implement Queue using Stacks  */,
				C4A511E427CA681C0004D026 /* 20. Valid Parentheses  */,
			);
			path = Stack;
			sourceTree = "<group>";
		};
		C4A511E427CA681C0004D026 /* 20. Valid Parentheses  */ = {
			isa = PBXGroup;
			children = (
				C4A511E627CA68300004D026 /* ValidParentheses.hpp */,
				C4A511E527CA68300004D026 /* ValidParentheses.cpp */,
			);
			path = "20. Valid Parentheses ";
			sourceTree = "<group>";
		};
		C4A511E827CB25160004D026 /* 232. Implement Queue using Stacks  */ = {
			isa = PBXGroup;
			children = (
				C4A511EA27CB25280004D026 /* ImplementQueueUsingStacks.hpp */,
				C4A511E927CB25280004D026 /* ImplementQueueUsingStacks.cpp */,
				C4CA0D8A29BCD9BD00ECEF6B /* ImplementQueueUsingStacks .swift */,
			);
			path = "232. Implement Queue using Stacks ";
			sourceTree = "<group>";
		};
		C4A511EC27CC51490004D026 /* Tree */ = {
			isa = PBXGroup;
			children = (
				C461DD3D29E3E44100FB7CC0 /* 111. Minimum Depth of Binary Tree  */,
				C4CA0D8329BC4EFA00ECEF6B /* 404. Sum of Left Leaves  */,
				C4FC5F0A29AE5B5B001CDED1 /* 589. N-ary Tree Preorder Traversal  */,
				C4E3857627F014FE0024DDFF /* 297. Serialize and Deserialize Binary Tree  */,
				C4E3857227EF2BF30024DDFF /* 236. Lowest Common Ancestor of a Binary Tree  */,
				C4E3856E27EEBBC90024DDFF /* 173. Binary Search Tree Iterator  */,
				C4E3856A27EE2A6F0024DDFF /* 230. Kth Smallest Element in a BST  */,
				C402A07427ECB33A0083C036 /* 450. Delete Node in a BST  */,
				C402A07027EB7C100083C036 /* 113. Path Sum II  */,
				C402A06C27EB70180083C036 /* 199. Binary Tree Right Side View  */,
				C402A06827EB4D770083C036 /* 103. Binary Tree Zigzag Level Order Traversal  */,
				C402A06427EABFEC0083C036 /* 105. Construct Binary Tree from Preorder and Inorder Traversal  */,
				C402A06027EAACF80083C036 /* 108. Convert Sorted Array to Binary Search Tree  */,
				C4A9454F27D376BB00E452DC /* 235. Lowest Common Ancestor of a Binary Search Tree  */,
				C4A9454B27D316F800E452DC /* 653. Two Sum IV - Input is a BST  */,
				C489C5EE27D19ACE002A6D34 /* 98. Validate Binary Search Tree  */,
				C489C5EA27D11703002A6D34 /* 701. Insert into a Binary Search Tree  */,
				C489C5E627D10DBB002A6D34 /* 700. Search in a Binary Search Tree  */,
				C489C5E227D05330002A6D34 /* 112. Path Sum  */,
				C489C5DE27D04674002A6D34 /* 226. Invert Binary Tree  */,
				CB15D99327CF0AA200B4AFA1 /* 101. Symmetric Tree  */,
				C489C5DA27CEF8AE002A6D34 /* 104. Maximum Depth of Binary Tree  */,
				CB15D98F27CE560C00B4AFA1 /* 102. Binary Tree Level Order Traversal  */,
				C489C5D627CD2690002A6D34 /* 145. Binary Tree Postorder Traversal  */,
				C489C5D227CD172E002A6D34 /* 94. Binary Tree Inorder Traversal  */,
				C4A511ED27CC515C0004D026 /* 144. Binary Tree Preorder Traversal  */,
				C4635AF41D7C17EE0012CD4B /* 94-Binary_Tree_Inorder_Traversal */,
			);
			path = Tree;
			sourceTree = "<group>";
		};
		C4A511ED27CC515C0004D026 /* 144. Binary Tree Preorder Traversal  */ = {
			isa = PBXGroup;
			children = (
				C4A511EF27CC516F0004D026 /* BinaryTreePreorderTraversal.hpp */,
				C4A511EE27CC516F0004D026 /* BinaryTreePreorderTraversal.cpp */,
			);
			path = "144. Binary Tree Preorder Traversal ";
			sourceTree = "<group>";
		};
		C4A511F127CC51A10004D026 /* Library */ = {
			isa = PBXGroup;
			children = (
				C4A043251D8916C000551755 /* ListNode.h */,
				C4A043241D8916C000551755 /* ListNode.cpp */,
				C4A511F327CC51C30004D026 /* TreeNode.hpp */,
				C4A511F227CC51C30004D026 /* TreeNode.cpp */,
				CB61B0F52805A71800E5E737 /* Node.hpp */,
				CB61B0F42805A71800E5E737 /* Node.cpp */,
				C4A9456A27D586F100E452DC /* Helper.hpp */,
				C4A9456927D586F100E452DC /* Helper.cpp */,
				C4CA0D7729B8DE6700ECEF6B /* ListNode.swift */,
				C4CA0D7E29BC401900ECEF6B /* TreeNode.swift */,
				C4FC5F0D29AE5B9D001CDED1 /* Node.swift */,
				C4FC5F0F29AFB7EA001CDED1 /* sample_4_964.png */,
				C4CA0D8029BC424E00ECEF6B /* TreeNode.jpg */,
			);
			path = Library;
			sourceTree = "<group>";
		};
		C4A62F0D2843AE0200F404D6 /* 1608. Special Array With X Elements Greater Than or Equal X  */ = {
			isa = PBXGroup;
			children = (
				C4A62F0F2843AE1200F404D6 /* SpecialArrayWithXElementsGreaterThanOrEqualX.hpp */,
				C4A62F0E2843AE1200F404D6 /* SpecialArrayWithXElementsGreaterThanOrEqualX.cpp */,
			);
			path = "1608. Special Array With X Elements Greater Than or Equal X ";
			sourceTree = "<group>";
		};
		C4A62F112845031400F404D6 /* 1351. Count Negative Numbers in a Sorted Matrix  */ = {
			isa = PBXGroup;
			children = (
				C4A62F132845032300F404D6 /* CountNegativeNumbersInASortedMatrix.hpp */,
				C4A62F122845032300F404D6 /* CountNegativeNumbersInASortedMatrix.cpp */,
			);
			path = "1351. Count Negative Numbers in a Sorted Matrix ";
			sourceTree = "<group>";
		};
		C4A62F15284514DC00F404D6 /* 1337. The K Weakest Rows in a Matrix  */ = {
			isa = PBXGroup;
			children = (
				C4A62F17284514F300F404D6 /* TheKWeakestRowsInAMatrix.hpp */,
				C4A62F16284514F300F404D6 /* TheKWeakestRowsInAMatrix.cpp */,
			);
			path = "1337. The K Weakest Rows in a Matrix ";
			sourceTree = "<group>";
		};
		C4A62F19284735AF00F404D6 /* 1346. Check If N and Its Double Exist  */ = {
			isa = PBXGroup;
			children = (
				C4A62F1B284735CC00F404D6 /* CheckIfNAndItsDoubleExist.hpp */,
				C4A62F1A284735CC00F404D6 /* CheckIfNAndItsDoubleExist.cpp */,
			);
			path = "1346. Check If N and Its Double Exist ";
			sourceTree = "<group>";
		};
		C4A62F1D28475BEE00F404D6 /* 633. Sum of Square Numbers  */ = {
			isa = PBXGroup;
			children = (
				C4A62F1F28475BF900F404D6 /* SumOfSquareNumbers.hpp */,
				C4A62F1E28475BF900F404D6 /* SumOfSquareNumbers.cpp */,
			);
			path = "633. Sum of Square Numbers ";
			sourceTree = "<group>";
		};
		C4A62F21284792DB00F404D6 /* 1855. Maximum Distance Between a Pair of Values  */ = {
			isa = PBXGroup;
			children = (
				C4A62F23284792EC00F404D6 /* MaximumDistanceBetweenAPairOfValues.hpp */,
				C4A62F22284792EC00F404D6 /* MaximumDistanceBetweenAPairOfValues.cpp */,
			);
			path = "1855. Maximum Distance Between a Pair of Values ";
			sourceTree = "<group>";
		};
		C4A62F252849D22100F404D6 /* 896. Monotonic Array  */ = {
			isa = PBXGroup;
			children = (
				C4A62F272849D22A00F404D6 /* MonotonicArray.hpp */,
				C4A62F262849D22A00F404D6 /* MonotonicArray.cpp */,
				C4CA0DA829C4C64500ECEF6B /* MonotonicArray .swift */,
			);
			path = "896. Monotonic Array ";
			sourceTree = "<group>";
		};
		C4A62F292849EF8600F404D6 /* 28. Implement strStr()  */ = {
			isa = PBXGroup;
			children = (
				C461DD3929E18A9C00FB7CC0 /* ImplementStrStr.swift */,
				C4A62F2B2849FB5800F404D6 /* ImplementStrStr().hpp */,
				C4A62F2A2849FB5800F404D6 /* ImplementStrStr().cpp */,
			);
			path = "28. Implement strStr() ";
			sourceTree = "<group>";
		};
		C4A62F2D284B01B000F404D6 /* 110. Balanced Binary Tree  */ = {
			isa = PBXGroup;
			children = (
				C4A62F2F284B01BA00F404D6 /* BalancedBinaryTree.hpp */,
				C4A62F2E284B01BA00F404D6 /* BalancedBinaryTree.cpp */,
				C461DD3B29E1AC7A00FB7CC0 /* BalancedBinaryTree.swift */,
				C4A62F31284B253500F404D6 /* balance_1.jpeg */,
				C4A62F32284B253500F404D6 /* balance_2.jpeg */,
			);
			path = "110. Balanced Binary Tree ";
			sourceTree = "<group>";
		};
		C4A62F33284B443300F404D6 /* 459. Repeated Substring Pattern  */ = {
			isa = PBXGroup;
			children = (
				C4A62F35284B443D00F404D6 /* RepeatedSubstringPattern.hpp */,
				C4A62F34284B443D00F404D6 /* RepeatedSubstringPattern.cpp */,
				C461DD4129E6F5CA00FB7CC0 /* RepeatedSubstringPattern.swift */,
			);
			path = "459. Repeated Substring Pattern ";
			sourceTree = "<group>";
		};
		C4A62F37284C78C000F404D6 /* 150. Evaluate Reverse Polish Notation  */ = {
			isa = PBXGroup;
			children = (
				C4A62F39284C78CA00F404D6 /* EvaluateReversePolishNotation.hpp */,
				C4A62F38284C78CA00F404D6 /* EvaluateReversePolishNotation.cpp */,
				C461DD4329E858D100FB7CC0 /* EvaluateReversePolishNotation.swift */,
			);
			path = "150. Evaluate Reverse Polish Notation ";
			sourceTree = "<group>";
		};
		C4A62F3B284C819B00F404D6 /* 66. Plus One  */ = {
			isa = PBXGroup;
			children = (
				C4A62F3D284C81AD00F404D6 /* PlusOne.hpp */,
				C4A62F3C284C81AD00F404D6 /* PlusOne.cpp */,
				C461DD4529E99E7100FB7CC0 /* PlusOne.swift */,
			);
			path = "66. Plus One ";
			sourceTree = "<group>";
		};
		C4A62F3F284C902F00F404D6 /* 1367. Linked List in Binary Tree  */ = {
			isa = PBXGroup;
			children = (
				C4A62F41284C904E00F404D6 /* LinkedListInBinaryTree.hpp */,
				C4A62F40284C904E00F404D6 /* LinkedListInBinaryTree.cpp */,
				C461DD4729EAF2BC00FB7CC0 /* LinkedListInBinaryTree.swift */,
				C4A62F43284C90BD00F404D6 /* sample_1_1720.png */,
			);
			path = "1367. Linked List in Binary Tree ";
			sourceTree = "<group>";
		};
		C4A62F44284D111500F404D6 /* 67. Add Binary  */ = {
			isa = PBXGroup;
			children = (
				C4A62F46284D111F00F404D6 /* AddBinary.hpp */,
				C4A62F45284D111F00F404D6 /* AddBinary.cpp */,
				C4549C4D2A053711006BB982 /* AddBinary.swift */,
			);
			path = "67. Add Binary ";
			sourceTree = "<group>";
		};
		C4A62F48284E52AE00F404D6 /* 989. Add to Array-Form of Integer  */ = {
			isa = PBXGroup;
			children = (
				C4A62F4A284E536800F404D6 /* AddToArrayFormOfInteger.hpp */,
				C4A62F49284E536800F404D6 /* AddToArrayFormOfInteger.cpp */,
				C4549C4F2A0549DB006BB982 /* AddToArrayFormOfInteger.swift */,
			);
			path = "989. Add to Array-Form of Integer ";
			sourceTree = "<group>";
		};
		C4A62F4C284FAD2900F404D6 /* 58. Length of Last Word */ = {
			isa = PBXGroup;
			children = (
				C4A62F4E284FAD3900F404D6 /* LengthOfLastWord.hpp */,
				C4A62F4D284FAD3900F404D6 /* LengthOfLastWord.cpp */,
				C4549C542A06BB9B006BB982 /* LengthOfLastWord.swift */,
			);
			path = "58. Length of Last Word";
			sourceTree = "<group>";
		};
		C4A62F502850F0FA00F404D6 /* 1886. Determine Whether Matrix Can Be Obtained By Rotation  */ = {
			isa = PBXGroup;
			children = (
				C4A62F522850F10700F404D6 /* DetermineWhetherMatrixCanBeObtainedByRotation.hpp */,
				C4A62F512850F10700F404D6 /* DetermineWhetherMatrixCanBeObtainedByRotation.cpp */,
				C4549C582A092836006BB982 /* DetermineWhetherMatrixCanBeObtainedByRotation.swift */,
				C4A62F542850F1D700F404D6 /* grid3.png */,
				C4A62F552850F1D700F404D6 /* grid4.png */,
			);
			path = "1886. Determine Whether Matrix Can Be Obtained By Rotation ";
			sourceTree = "<group>";
		};
		C4A70753283FC008007F1A43 /* 441. Arranging Coins  */ = {
			isa = PBXGroup;
			children = (
				C4A70755283FC015007F1A43 /* ArrangingCoins.hpp */,
				C4A70754283FC015007F1A43 /* ArrangingCoins.cpp */,
				C4A70758283FC08D007F1A43 /* arrangecoins1-grid.jpeg */,
				C4A70757283FC08D007F1A43 /* arrangecoins2-grid.jpeg */,
			);
			path = "441. Arranging Coins ";
			sourceTree = "<group>";
		};
		C4A70759283FC38B007F1A43 /* 1539. Kth Missing Positive Number  */ = {
			isa = PBXGroup;
			children = (
				C4A7075B283FC398007F1A43 /* KthMissingPositiveNumber.hpp */,
				C4A7075A283FC398007F1A43 /* KthMissingPositiveNumber.cpp */,
			);
			path = "1539. Kth Missing Positive Number ";
			sourceTree = "<group>";
		};
		C4A737F91D8E5E45007B8AFE /* 25-Reverse_Nodes_in_k-Group */ = {
			isa = PBXGroup;
			children = (
				C4A737FA1D8E5E45007B8AFE /* main.cpp */,
			);
			path = "25-Reverse_Nodes_in_k-Group";
			sourceTree = "<group>";
		};
		C4A738051D8F6905007B8AFE /* 61-Rotate_List */ = {
			isa = PBXGroup;
			children = (
				C4A738061D8F6905007B8AFE /* main.cpp */,
			);
			path = "61-Rotate_List";
			sourceTree = "<group>";
		};
		C4A738141D8F7D6F007B8AFE /* 82-Remove_Duplicates_from_Sorted_List_II */ = {
			isa = PBXGroup;
			children = (
				C4A738151D8F7D6F007B8AFE /* main.cpp */,
			);
			path = "82-Remove_Duplicates_from_Sorted_List_II";
			sourceTree = "<group>";
		};
		C4A738201D8FAB80007B8AFE /* 83-Remove_Duplicates_from_Sorted_List */ = {
			isa = PBXGroup;
			children = (
				C4A738211D8FAB80007B8AFE /* main.cpp */,
			);
			path = "83-Remove_Duplicates_from_Sorted_List";
			sourceTree = "<group>";
		};
		C4A8858C27C13E0100EC168C /* 566. Reshape the Matrix  */ = {
			isa = PBXGroup;
			children = (
				C4A8858F27C13E6600EC168C /* ReshapeTheMatrix.hpp */,
				C4A8858E27C13E6600EC168C /* ReshapeTheMatrix.cpp */,
				C4CA0D6029B5DF2200ECEF6B /* ReshapeTheMatrix .swift */,
			);
			path = "566. Reshape the Matrix ";
			sourceTree = "<group>";
		};
		C4A8859127C3E36100EC168C /* 118. Pascal's Triangle  */ = {
			isa = PBXGroup;
			children = (
				C4A8859327C3E37F00EC168C /* Pascal'sTriangle.hpp */,
				C4A8859227C3E37F00EC168C /* Pascal'sTriangle.cpp */,
			);
			path = "118. Pascal's Triangle ";
			sourceTree = "<group>";
		};
		C4A8859527C471DB00EC168C /* 36. Valid Sudoku  */ = {
			isa = PBXGroup;
			children = (
				C4A8859727C471EC00EC168C /* ValidSudoku.hpp */,
				C4A8859627C471EC00EC168C /* ValidSudoku.cpp */,
			);
			path = "36. Valid Sudoku ";
			sourceTree = "<group>";
		};
		C4A8859927C5C4BC00EC168C /* 74. Search a 2D Matrix  */ = {
			isa = PBXGroup;
			children = (
				C4A8859B27C5C4D900EC168C /* SearchA2DMatrix.hpp */,
				C4A8859A27C5C4D900EC168C /* SearchA2DMatrix.cpp */,
			);
			path = "74. Search a 2D Matrix ";
			sourceTree = "<group>";
		};
		C4A8859D27C670B500EC168C /* String */ = {
			isa = PBXGroup;
			children = (
				C4CA0D9729BF6A8200ECEF6B /* 14. Longest Common Prefix  */,
				C4CA0D7129B89BFE00ECEF6B /* 953. Verifying an Alien Dictionary  */,
				C4CA0D6E29B715D900ECEF6B /* 1309. Decrypt String from Alphabet to Integer Mapping  */,
				C4CA0D6B29B710F800ECEF6B /* 709. To Lower Case  */,
				C4CA0D6529B6460300ECEF6B /* 1678. Goal Parser Interpretation  */,
				C4FC5F0729AD0957001CDED1 /* 1790. Check if One String Swap Can Make Strings Equal  */,
				C4A62F4C284FAD2900F404D6 /* 58. Length of Last Word */,
				C4A62F33284B443300F404D6 /* 459. Repeated Substring Pattern  */,
				C4E610FD27E0F8DF00B56DED /* 5. Longest Palindromic Substring  */,
				C4E610F927DFA2C100B56DED /* 187. Repeated DNA Sequences  */,
				C4E610F527DF7B0F00B56DED /* 43. Multiply Strings  */,
				C4E610F127DE50FB00B56DED /* 49. Group Anagrams  */,
				C48E9E6E27DCE65B0063E280 /* 763. Partition Labels  */,
				C48E9E6A27DC894A0063E280 /* 290. Word Pattern  */,
				C48E9E6627DC74400063E280 /* 409. Longest Palindrome  */,
				C48E9E6227DC41C80063E280 /* 415. Add Strings  */,
				CB15B67427C7A93A00B4AFA1 /* 242. Valid Anagram  */,
				CB15A52827C7309300B4AFA1 /* 383. Ransom Note  */,
				C4A8859E27C670D200EC168C /* 387. First Unique Character in a String  */,
			);
			path = String;
			sourceTree = "<group>";
		};
		C4A8859E27C670D200EC168C /* 387. First Unique Character in a String  */ = {
			isa = PBXGroup;
			children = (
				C4A885A027C670F900EC168C /* FirstUniqueCharacterInAString.hpp */,
				C4A8859F27C670F900EC168C /* FirstUniqueCharacterInAString.cpp */,
			);
			path = "387. First Unique Character in a String ";
			sourceTree = "<group>";
		};
		C4A885A227C9167A00EC168C /* 203. Remove Linked List Elements  */ = {
			isa = PBXGroup;
			children = (
				C4A885A427C9169200EC168C /* RemoveLinkedListElements.hpp */,
				C4A885A327C9169200EC168C /* RemoveLinkedListElements.cpp */,
			);
			path = "203. Remove Linked List Elements ";
			sourceTree = "<group>";
		};
		C4A885A627C9268C00EC168C /* 206. Reverse Linked List  */ = {
			isa = PBXGroup;
			children = (
				C4A885A827C9269900EC168C /* ReverseLinkedList.hpp */,
				C4A885A727C9269900EC168C /* ReverseLinkedList.cpp */,
			);
			path = "206. Reverse Linked List ";
			sourceTree = "<group>";
		};
		C4A9454B27D316F800E452DC /* 653. Two Sum IV - Input is a BST  */ = {
			isa = PBXGroup;
			children = (
				C4A9454D27D3303B00E452DC /* TwoSumIV.hpp */,
				C4A9454C27D3303B00E452DC /* TwoSumIV.cpp */,
			);
			path = "653. Two Sum IV - Input is a BST ";
			sourceTree = "<group>";
		};
		C4A9454F27D376BB00E452DC /* 235. Lowest Common Ancestor of a Binary Search Tree  */ = {
			isa = PBXGroup;
			children = (
				C4A9455127D376CE00E452DC /* LowestCommonAncestorOfABinarySearchTree.hpp */,
				C4A9455027D376CE00E452DC /* LowestCommonAncestorOfABinarySearchTree.cpp */,
			);
			path = "235. Lowest Common Ancestor of a Binary Search Tree ";
			sourceTree = "<group>";
		};
		C4A9455327D3AA8500E452DC /* Array Old */ = {
			isa = PBXGroup;
			children = (
				C4130DAA1D40AC0C00AB673F /* 1-Two_Sum */,
				C4130DB51D40BE9800AB673F /* 4-Median_of_Two_Sorted_Arrays */,
				C4D85DB91D41DF540092E613 /* 11-Container_With_Most_Water */,
				C4D85DC41D41ED7A0092E613 /* 15-3Sum */,
				C4D85DCF1D438B610092E613 /* 16-3Sum_Closest */,
				C4D85DDB1D443F430092E613 /* 18-4Sum */,
				C44BB83F1D45BB150058B979 /* 26-Remove_Duplicates_from_Sorted_Array */,
				C44BB84A1D45E77B0058B979 /* 27-Remove_Element */,
				C44BB8551D46EA390058B979 /* 31-Next_Permutation */,
				C44BB8601D4729B90058B979 /* 33-Search_in_Rotated_Sorted_Array */,
				C44BB86B1D4743510058B979 /* 34_Search_for_a_Range */,
				C44BB8811D4856A50058B979 /* 39-Combination_Sum */,
				C44BB8971D4887D80058B979 /* 40-Combination_Sum_II */,
				C438E2B71D48973D00DDA9D3 /* 41-First_Missing_Positive */,
				C438E2C21D49CADF00DDA9D3 /* 42-Trapping_Rain_Water */,
				C438E2CD1D49ED7B00DDA9D3 /* 45-Jump_Game_II */,
				C419D2441D4B244B000B4F20 /* 48-Rotate_Image */,
				C419D24F1D4B3AED000B4F20 /* 53-Maximum_Subarray */,
				C419D25A1D4B6A63000B4F20 /* 54-Spiral_Matrix */,
			);
			path = "Array Old";
			sourceTree = "<group>";
		};
		C4A9455427D3AD2F00E452DC /* Array */ = {
			isa = PBXGroup;
			children = (
				C454CE872A1F9449006BB982 /* 1630. Arithmetic Subarrays  */,
				C4549C5A2A0933DA006BB982 /* 54. Spiral Matrix  */,
				C4CA0DA529C478C000ECEF6B /* 128. Longest Consecutive Sequence  */,
				C4CA0D9D29C0CD6800ECEF6B /* 73. Set Matrix Zeroes  */,
				C4CA0D5D29B4F20200ECEF6B /* 1572. Matrix Diagonal Sum  */,
				C4CA0D5A29B4EADC00ECEF6B /* 1672. Richest Customer Wealth  */,
				C4CA0D5129B24F3600ECEF6B /* 1588. Sum of All Odd Length Subarrays  */,
				C4FC5EFC29A6656D001CDED1 /* 1779. Find Nearest Point That Has the Same X or Y Coordinate */,
				C4FC5EF129A3C395001CDED1 /* 1491. Average Salary Excluding the Minimum and Maximum Salary  */,
				C4A62F502850F0FA00F404D6 /* 1886. Determine Whether Matrix Can Be Obtained By Rotation  */,
				C4A62F48284E52AE00F404D6 /* 989. Add to Array-Form of Integer  */,
				C4A62F3B284C819B00F404D6 /* 66. Plus One  */,
				C4A62F252849D22100F404D6 /* 896. Monotonic Array  */,
				C4B2524427F7399E0040706B /* 912. Sort an Array  */,
				C4A9458827DA592300E452DC /* 560. Subarray Sum Equals K */,
				C4A9458427DA4F9100E452DC /* 238. Product of Array Except Self  */,
				C4A9458027D98B2100E452DC /* 334. Increasing Triplet Subsequence  */,
				C4A9457C27D8BA6700E452DC /* 435. Non-overlapping Intervals  */,
				C4A9457827D82BA600E452DC /* 240. Search a 2D Matrix II  */,
				CB8C3C2B27D77C7F00576C6D /* 59. Spiral Matrix II  */,
				CB8C3C2727D7514B00576C6D /* 48. Rotate Image  */,
				C4A9457427D6E53C00E452DC /* 119. Pascal's Triangle II  */,
				C4A9457027D665F200E452DC /* 706. Design HashMap  */,
				C4A9456C27D5959B00E452DC /* 56. Merge Intervals  */,
				C4A9456527D5139900E452DC /* 75. Sort Colors  */,
				C4A9456127D4C6FA00E452DC /* 15. 3Sum  */,
				C4A9455D27D4676200E452DC /* 169. Majority Element  */,
				C4A9455827D3B06200E452DC /* 136. Single Number  */,
				C4A8859927C5C4BC00EC168C /* 74. Search a 2D Matrix  */,
				C4A8859527C471DB00EC168C /* 36. Valid Sudoku  */,
				C4A8859127C3E36100EC168C /* 118. Pascal's Triangle  */,
				C4A8858C27C13E0100EC168C /* 566. Reshape the Matrix  */,
				C4A337D927BF8F4900B1DBAD /* 121. Best Time to Buy and Sell Stock  */,
				C4A337D527BE944F00B1DBAD /* 350. Intersection of Two Arrays II  */,
				C4A337D127BDDA7800B1DBAD /* 88. Merge Sorted Array  */,
				C4A337CD27BD55F600B1DBAD /* 1. Two Sum  */,
				C42241E527BC6C8700E5B034 /* 53. Maximum Subarray  */,
				C42241D527BC5E7900E5B034 /* 217. Contains Duplicate */,
				C4A9455327D3AA8500E452DC /* Array Old */,
			);
			path = Array;
			sourceTree = "<group>";
		};
		C4A9455527D3AE5500E452DC /* Hash Table */ = {
			isa = PBXGroup;
			children = (
				C419D2651D4DDEE7000B4F20 /* 3-Longest_Substring_Without_Repeating_Characters */,
				C419D2931D4EF604000B4F20 /* 30-Substring_with_Concatenation_of_All_Words */,
				C43C86D01D5D5B4E00D3712C /* 32_Longest_Valid_Parentheses */,
				C4FC33C31D52C115001B5F2F /* 36-Valid_Sudoku */,
				C4209A291D532F80009DB1E7 /* 37-Sudoku_Solver */,
				C4ADC03B1D572CD7000F647B /* 49-Group_Anagrams */,
				C452371A1D5848BE00205120 /* 76-Minimum_Window_Substring */,
				C43C86C41D5B10E300D3712C /* 84-Largest_Rectangle_in_Histogram */,
				C4635AE91D7BC5830012CD4B /* 85-Maximal_Rectangle */,
			);
			path = "Hash Table";
			sourceTree = "<group>";
		};
		C4A9455727D3AEB400E452DC /* Math */ = {
			isa = PBXGroup;
			children = (
				C4CA0D4D29B08B4A00ECEF6B /* 1232. Check If It Is a Straight Line  */,
				C4FC5F0229AA5C6A001CDED1 /* 1502. Can Make Arithmetic Progression From Sequence 1502. Can Make Arithmetic Progression From Sequence  */,
				C4FC5EFF29A900C1001CDED1 /* 1822. Sign of the Product of an Array  */,
				C4FC5EF929A4B4FC001CDED1 /* 976. Largest Perimeter Triangle  */,
				C4FC5EF629A4A264001CDED1 /* 1281. Subtract the Product and Sum of Digits of an Integer  */,
				C4FC5EC929A380EB001CDED1 /* 1523-Count_Odd_Numbers_in_an_Interval_Range  */,
				C4B643DC1D9260AC00056FEC /* 7-Reverse_Integer */,
				C4B643E81D9279D800056FEC /* 8-String_to_Integer */,
				C45620F11D94C50D008F81B9 /* 9-Palindrome_Number */,
				C4A18EC81D98A5D500FF6791 /* 12-Integer_to_Roman */,
				C43616941D99181500FB468B /* 13-Roman_to_Integer */,
				C416E6A81D9CC0400039047D /* 29-Divide_Two_Integers */,
			);
			path = Math;
			sourceTree = "<group>";
		};
		C4A9455827D3B06200E452DC /* 136. Single Number  */ = {
			isa = PBXGroup;
			children = (
				C4A9455B27D3B08B00E452DC /* SingleNumber.hpp */,
				C4A9455A27D3B08B00E452DC /* SingleNumber.cpp */,
			);
			path = "136. Single Number ";
			sourceTree = "<group>";
		};
		C4A9455D27D4676200E452DC /* 169. Majority Element  */ = {
			isa = PBXGroup;
			children = (
				C4A9455F27D4676E00E452DC /* MajorityElement.hpp */,
				C4A9455E27D4676E00E452DC /* MajorityElement.cpp */,
			);
			path = "169. Majority Element ";
			sourceTree = "<group>";
		};
		C4A9456127D4C6FA00E452DC /* 15. 3Sum  */ = {
			isa = PBXGroup;
			children = (
				C4A9456327D4C70800E452DC /* 3Sum.hpp */,
				C4A9456227D4C70800E452DC /* 3Sum.cpp */,
			);
			path = "15. 3Sum ";
			sourceTree = "<group>";
		};
		C4A9456527D5139900E452DC /* 75. Sort Colors  */ = {
			isa = PBXGroup;
			children = (
				C4A9456727D513AB00E452DC /* SortColors.hpp */,
				C4A9456627D513AB00E452DC /* SortColors.cpp */,
			);
			path = "75. Sort Colors ";
			sourceTree = "<group>";
		};
		C4A9456C27D5959B00E452DC /* 56. Merge Intervals  */ = {
			isa = PBXGroup;
			children = (
				C4A9456E27D595AE00E452DC /* MergeIntervals.hpp */,
				C4A9456D27D595AE00E452DC /* MergeIntervals.cpp */,
			);
			path = "56. Merge Intervals ";
			sourceTree = "<group>";
		};
		C4A9457027D665F200E452DC /* 706. Design HashMap  */ = {
			isa = PBXGroup;
			children = (
				C4A9457227D665FC00E452DC /* DesignHashMap.hpp */,
				C4A9457127D665FC00E452DC /* DesignHashMap.cpp */,
			);
			path = "706. Design HashMap ";
			sourceTree = "<group>";
		};
		C4A9457427D6E53C00E452DC /* 119. Pascal's Triangle II  */ = {
			isa = PBXGroup;
			children = (
				C4A9457627D6E5E300E452DC /* Pascal'sTriangleII.hpp */,
				C4A9457527D6E5E300E452DC /* Pascal'sTriangleII.cpp */,
			);
			path = "119. Pascal's Triangle II ";
			sourceTree = "<group>";
		};
		C4A9457827D82BA600E452DC /* 240. Search a 2D Matrix II  */ = {
			isa = PBXGroup;
			children = (
				C4A9457A27D82BD000E452DC /* SearchA2DMatrixII.hpp */,
				C4A9457927D82BD000E452DC /* SearchA2DMatrixII.cpp */,
			);
			path = "240. Search a 2D Matrix II ";
			sourceTree = "<group>";
		};
		C4A9457C27D8BA6700E452DC /* 435. Non-overlapping Intervals  */ = {
			isa = PBXGroup;
			children = (
				C4A9457E27D8BA8C00E452DC /* Non-overlappingIntervals.hpp */,
				C4A9457D27D8BA8C00E452DC /* Non-overlappingIntervals.cpp */,
			);
			path = "435. Non-overlapping Intervals ";
			sourceTree = "<group>";
		};
		C4A9458027D98B2100E452DC /* 334. Increasing Triplet Subsequence  */ = {
			isa = PBXGroup;
			children = (
				C4A9458227D98B2E00E452DC /* IncreasingTripletSubsequence.hpp */,
				C4A9458127D98B2E00E452DC /* IncreasingTripletSubsequence.cpp */,
			);
			path = "334. Increasing Triplet Subsequence ";
			sourceTree = "<group>";
		};
		C4A9458427DA4F9100E452DC /* 238. Product of Array Except Self  */ = {
			isa = PBXGroup;
			children = (
				C4A9458627DA4FA000E452DC /* ProductOfArrayExceptSelf.hpp */,
				C4A9458527DA4FA000E452DC /* ProductOfArrayExceptSelf.cpp */,
			);
			path = "238. Product of Array Except Self ";
			sourceTree = "<group>";
		};
		C4A9458827DA592300E452DC /* 560. Subarray Sum Equals K */ = {
			isa = PBXGroup;
			children = (
				C4A9458A27DA593100E452DC /* SubarraySumEqualsK.hpp */,
				C4A9458927DA593100E452DC /* SubarraySumEqualsK.cpp */,
			);
			path = "560. Subarray Sum Equals K";
			sourceTree = "<group>";
		};
		C4ABA57627FC978B00E64BA2 /* 977. Squares of a Sorted Array  */ = {
			isa = PBXGroup;
			children = (
				C4ABA57827FC979A00E64BA2 /* SquaresOfASortedArray.hpp */,
				C4ABA57727FC979A00E64BA2 /* SquaresOfASortedArray.cpp */,
			);
			path = "977. Squares of a Sorted Array ";
			sourceTree = "<group>";
		};
		C4ABA57B27FCA00E00E64BA2 /* Binary Search */ = {
			isa = PBXGroup;
			children = (
				C4A62F21284792DB00F404D6 /* 1855. Maximum Distance Between a Pair of Values  */,
				C4A62F1D28475BEE00F404D6 /* 633. Sum of Square Numbers  */,
				C4A62F19284735AF00F404D6 /* 1346. Check If N and Its Double Exist  */,
				C4A62F15284514DC00F404D6 /* 1337. The K Weakest Rows in a Matrix  */,
				C4A62F112845031400F404D6 /* 1351. Count Negative Numbers in a Sorted Matrix  */,
				C4A62F0D2843AE0200F404D6 /* 1608. Special Array With X Elements Greater Than or Equal X  */,
				C4A70759283FC38B007F1A43 /* 1539. Kth Missing Positive Number  */,
				C4A70753283FC008007F1A43 /* 441. Arranging Coins  */,
				C4CF8F24283D2DDC00FB1118 /* 744. Find Smallest Letter Greater Than Target  */,
				C4CF8F20283D2A0C00FB1118 /* 69. Sqrt(x)  */,
				C4F60ADF283BDDB5006B990F /* 1385. Find the Distance Value Between Two Arrays  */,
				C4F60ADB283A12F7006B990F /* 367. Valid Perfect Square  */,
				C4F60AD72839356D006B990F /* 852. Peak Index in a Mountain Array  */,
				C4F60AD328392E70006B990F /* 374. Guess Number Higher or Lower  */,
				C49BE78D280DAEB4008ACB59 /* 162. Find Peak Element  */,
				C49BE789280DA41A008ACB59 /* 153. Find Minimum in Rotated Sorted Array  */,
				C49BE785280D553E008ACB59 /* 33. Search in Rotated Sorted Array  */,
				C49BE781280C55B1008ACB59 /* 34. Find First and Last Position of Element in Sorted Array  */,
				C49391A627FC8DFE00E2CF01 /* 35. Search Insert Position  */,
				C49391A227FC7C6300E2CF01 /* 278. First Bad Version  */,
				C493918E27FB4A8700E2CF01 /* 704. Binary Search */,
			);
			path = "Binary Search";
			sourceTree = "<group>";
		};
		C4ABA57C27FCA01900E64BA2 /* Two Pointers */ = {
			isa = PBXGroup;
			children = (
				C4CA0DA229C3309600ECEF6B /* 125. Valid Palindrome  */,
				C4CA0D6229B63D5600ECEF6B /* 1768. Merge Strings Alternately  */,
				C4A62F292849EF8600F404D6 /* 28. Implement strStr()  */,
				C49BE791280F0FA4008ACB59 /* 11. Container With Most Water  */,
				CB624D79280EE36C00BED7B6 /* 986. Interval List Intersections  */,
				CB624D75280ED76C00BED7B6 /* 844. Backspace String Compare  */,
				C4ABA58D27FFC39700E64BA2 /* 19. Remove Nth Node From End of List  */,
				C4ABA58927FF46CB00E64BA2 /* 876. Middle of the Linked List  */,
				CB2C413127FF144900A3658A /* 557. Reverse Words in a String III  */,
				CB2C412D27FF10E000A3658A /* 344. Reverse String  */,
				C4ABA58527FDF81C00E64BA2 /* 167. Two Sum II - Input Array Is Sorted */,
				C4ABA58127FDE67600E64BA2 /* 283. Move Zeroes  */,
				C4ABA57D27FCA0AD00E64BA2 /* 189. Rotate Array  */,
				C4ABA57627FC978B00E64BA2 /* 977. Squares of a Sorted Array  */,
			);
			path = "Two Pointers";
			sourceTree = "<group>";
		};
		C4ABA57D27FCA0AD00E64BA2 /* 189. Rotate Array  */ = {
			isa = PBXGroup;
			children = (
				C4ABA57F27FCA0B900E64BA2 /* RotateArray.hpp */,
				C4ABA57E27FCA0B900E64BA2 /* RotateArray.cpp */,
			);
			path = "189. Rotate Array ";
			sourceTree = "<group>";
		};
		C4ABA58127FDE67600E64BA2 /* 283. Move Zeroes  */ = {
			isa = PBXGroup;
			children = (
				C4ABA58327FDE69900E64BA2 /* MoveZeroes.hpp */,
				C4ABA58227FDE69900E64BA2 /* MoveZeroes.cpp */,
				C4CA0D5529B2E26D00ECEF6B /* MoveZeroes .swift */,
			);
			path = "283. Move Zeroes ";
			sourceTree = "<group>";
		};
		C4ABA58527FDF81C00E64BA2 /* 167. Two Sum II - Input Array Is Sorted */ = {
			isa = PBXGroup;
			children = (
				C4ABA58727FDF83800E64BA2 /* TwoSumII-InputArrayIsSorted.hpp */,
				C4ABA58627FDF83800E64BA2 /* TwoSumII-InputArrayIsSorted.cpp */,
			);
			path = "167. Two Sum II - Input Array Is Sorted";
			sourceTree = "<group>";
		};
		C4ABA58927FF46CB00E64BA2 /* 876. Middle of the Linked List  */ = {
			isa = PBXGroup;
			children = (
				C4ABA58B27FF46E500E64BA2 /* MiddleOfTheLinkedList.hpp */,
				C4ABA58A27FF46E500E64BA2 /* MiddleOfTheLinkedList.cpp */,
				C4CA0D7A29B8E47100ECEF6B /* MiddleOfTheLinkedList .swift */,
			);
			path = "876. Middle of the Linked List ";
			sourceTree = "<group>";
		};
		C4ABA58D27FFC39700E64BA2 /* 19. Remove Nth Node From End of List  */ = {
			isa = PBXGroup;
			children = (
				C4ABA58F27FFC3A400E64BA2 /* RemoveNthNodeFromEndOfList.hpp */,
				C4ABA58E27FFC3A400E64BA2 /* RemoveNthNodeFromEndOfList.cpp */,
			);
			path = "19. Remove Nth Node From End of List ";
			sourceTree = "<group>";
		};
		C4ABA5912800906800E64BA2 /* A057 */ = {
			isa = PBXGroup;
			children = (
				C4ABA593280090A000E64BA2 /* LongestSwipe.hpp */,
				C4ABA592280090A000E64BA2 /* LongestSwipe.cpp */,
			);
			path = A057;
			sourceTree = "<group>";
		};
		C4ABA5952801232300E64BA2 /* S039 */ = {
			isa = PBXGroup;
			children = (
				C4ABA5972801233800E64BA2 /* BossHome.hpp */,
				C4ABA5962801233800E64BA2 /* BossHome.cpp */,
			);
			path = S039;
			sourceTree = "<group>";
		};
		C4AC28F328015A110036E6DB /* 84. Largest Rectangle in Histogram  */ = {
			isa = PBXGroup;
			children = (
				C4AC28F528015A1D0036E6DB /* LargestRectangleInHistogram.hpp */,
				C4AC28F428015A1D0036E6DB /* LargestRectangleInHistogram.cpp */,
			);
			path = "84. Largest Rectangle in Histogram ";
			sourceTree = "<group>";
		};
		C4AC28F72801D21F0036E6DB /* 85. Maximal Rectangle  */ = {
			isa = PBXGroup;
			children = (
				C4AC28F92801D2310036E6DB /* MaximalRectangle.hpp */,
				C4AC28F82801D2310036E6DB /* MaximalRectangle.cpp */,
			);
			path = "85. Maximal Rectangle ";
			sourceTree = "<group>";
		};
		C4AC28FB2801E7F00036E6DB /* Sliding Window */ = {
			isa = PBXGroup;
			children = (
				CB625F1128115E5200BED7B6 /* 209. Minimum Size Subarray Sum  */,
				C49BE795281054E4008ACB59 /* 713. Subarray Product Less Than K  */,
				C481ECFE28047D2A0022DEEC /* 438. Find All Anagrams in a String  */,
				C481ECFA2802B7480022DEEC /* 567. Permutation in String  */,
				C4AC28FC2801E8020036E6DB /* 3. Longest Substring Without Repeating Characters  */,
			);
			path = "Sliding Window";
			sourceTree = "<group>";
		};
		C4AC28FC2801E8020036E6DB /* 3. Longest Substring Without Repeating Characters  */ = {
			isa = PBXGroup;
			children = (
				C4AC28FE2801E8110036E6DB /* LongestSubstringWithoutRepeatingCharacters.hpp */,
				C4AC28FD2801E8110036E6DB /* LongestSubstringWithoutRepeatingCharacters.cpp */,
			);
			path = "3. Longest Substring Without Repeating Characters ";
			sourceTree = "<group>";
		};
		C4AC722A282EB390006412A7 /* 343. Integer Break  */ = {
			isa = PBXGroup;
			children = (
				C4AC722C282EB399006412A7 /* IntegerBreak.hpp */,
				C4AC722B282EB399006412A7 /* IntegerBreak.cpp */,
			);
			path = "343. Integer Break ";
			sourceTree = "<group>";
		};
		C4AC722E28314D9C006412A7 /* 201. Bitwise AND of Numbers Range  */ = {
			isa = PBXGroup;
			children = (
				C4AC723028314DAC006412A7 /* BitwiseAndOfNumbersRange.hpp */,
				C4AC722F28314DAC006412A7 /* BitwiseAndOfNumbersRange.cpp */,
			);
			path = "201. Bitwise AND of Numbers Range ";
			sourceTree = "<group>";
		};
		C4ADC03B1D572CD7000F647B /* 49-Group_Anagrams */ = {
			isa = PBXGroup;
			children = (
				C4ADC03C1D572CD7000F647B /* main.cpp */,
			);
			path = "49-Group_Anagrams";
			sourceTree = "<group>";
		};
		C4B2523F27F4B3070040706B /* Heap */ = {
			isa = PBXGroup;
			children = (
				C4B2525027FAE9A90040706B /* 973. K Closest Points to Origin  */,
				C4B2524C27F9FA4F0040706B /* 451. Sort Characters By Frequency  */,
				C4B2524827F995E70040706B /* 347. Top K Frequent Elements  */,
				C4B2524027F4B3140040706B /* 215. Kth Largest Element in an Array  */,
			);
			path = Heap;
			sourceTree = "<group>";
		};
		C4B2524027F4B3140040706B /* 215. Kth Largest Element in an Array  */ = {
			isa = PBXGroup;
			children = (
				C4B2524227F4BB620040706B /* KthLargestElementInAnArray.hpp */,
				C4B2524127F4BB620040706B /* KthLargestElementInAnArray.cpp */,
			);
			path = "215. Kth Largest Element in an Array ";
			sourceTree = "<group>";
		};
		C4B2524427F7399E0040706B /* 912. Sort an Array  */ = {
			isa = PBXGroup;
			children = (
				C4B2524627F73CE80040706B /* SortAnArray.hpp */,
				C4B2524527F73CE80040706B /* SortAnArray.cpp */,
			);
			path = "912. Sort an Array ";
			sourceTree = "<group>";
		};
		C4B2524827F995E70040706B /* 347. Top K Frequent Elements  */ = {
			isa = PBXGroup;
			children = (
				C4B2524A27F995F00040706B /* TopKFrequentElements.hpp */,
				C4B2524927F995F00040706B /* TopKFrequentElements.cpp */,
			);
			path = "347. Top K Frequent Elements ";
			sourceTree = "<group>";
		};
		C4B2524C27F9FA4F0040706B /* 451. Sort Characters By Frequency  */ = {
			isa = PBXGroup;
			children = (
				C4B2524E27F9FA580040706B /* SortCharactersByFrequency.hpp */,
				C4B2524D27F9FA580040706B /* SortCharactersByFrequency.cpp */,
			);
			path = "451. Sort Characters By Frequency ";
			sourceTree = "<group>";
		};
		C4B2525027FAE9A90040706B /* 973. K Closest Points to Origin  */ = {
			isa = PBXGroup;
			children = (
				C4B2525227FAE9B60040706B /* KClosestPointsToOrigin.hpp */,
				C4B2525127FAE9B60040706B /* KClosestPointsToOrigin.cpp */,
				C4549C5F2A0A1550006BB982 /* KClosestPointsToOrigin.swift */,
			);
			path = "973. K Closest Points to Origin ";
			sourceTree = "<group>";
		};
		C4B643C41D92506D00056FEC /* 86-Partition_List */ = {
			isa = PBXGroup;
			children = (
				C4B643C51D92506D00056FEC /* main.cpp */,
			);
			path = "86-Partition_List";
			sourceTree = "<group>";
		};
		C4B643DC1D9260AC00056FEC /* 7-Reverse_Integer */ = {
			isa = PBXGroup;
			children = (
				C4B643DD1D9260AC00056FEC /* main.cpp */,
			);
			path = "7-Reverse_Integer";
			sourceTree = "<group>";
		};
		C4B643E81D9279D800056FEC /* 8-String_to_Integer */ = {
			isa = PBXGroup;
			children = (
				C4B643E91D9279D800056FEC /* main.cpp */,
			);
			path = "8-String_to_Integer";
			sourceTree = "<group>";
		};
		C4B684442807115B00B41B2F /* 994. Rotting Oranges  */ = {
			isa = PBXGroup;
			children = (
				C4B684462807116500B41B2F /* RottingOranges.hpp */,
				C4B684452807116500B41B2F /* RottingOranges.cpp */,
			);
			path = "994. Rotting Oranges ";
			sourceTree = "<group>";
		};
		C4B684482807256100B41B2F /* Recursion */ = {
			isa = PBXGroup;
			children = (
				C4CA0D9A29C09B0B00ECEF6B /* 50. Pow(x, n)  */,
				C484BA9E281A322B00CF92BD /* 79. Word Search  */,
				C484BA992819987900CF92BD /* 22. Generate Parentheses  */,
				C484BA942819859F00CF92BD /* 17. Letter Combinations of a Phone Number  */,
				C484BA9028184A0400CF92BD /* 40. Combination Sum II  */,
				C484BA8928182A1800CF92BD /* 39. Combination Sum  */,
				C484BA852816F08300CF92BD /* 47. Permutations II  */,
				CB50F9842816CBB70097E359 /* 90. Subsets II  */,
				C484BA81281631A500CF92BD /* 78. Subsets  */,
				CBFE24342808500100B191C1 /* 784. Letter Case Permutation  */,
				CBFE2430280830E100B191C1 /* 46. Permutations  */,
				C4B6844C2807B40300B41B2F /* 77. Combinations  */,
			);
			path = Recursion;
			sourceTree = "<group>";
		};
		C4B6844C2807B40300B41B2F /* 77. Combinations  */ = {
			isa = PBXGroup;
			children = (
				C4B6844A2807B3FF00B41B2F /* Combinations.hpp */,
				C4B684492807B3FF00B41B2F /* Combinations.cpp */,
			);
			path = "77. Combinations ";
			sourceTree = "<group>";
		};
		C4B6844D2809012200B41B2F /* DP */ = {
			isa = PBXGroup;
			children = (
				C4AC722A282EB390006412A7 /* 343. Integer Break  */,
				C4966504282C0C5200E6FB57 /* 322. Coin Change  */,
				C49665002827F5B900E6FB57 /* 72. Edit Distance  */,
				C49664FC28276A3E00E6FB57 /* 583. Delete Operation for Two Strings  */,
				C49664F8282581C400E6FB57 /* 1143. Longest Common Subsequence  */,
				C49664F4282424F400E6FB57 /* 673. Number of Longest Increasing Subsequence  */,
				C49664F0282383AC00E6FB57 /* 300. Longest Increasing Subsequence */,
				C4A0B01828226751003EECAF /* 139. Word Break  */,
				C4A0B01428223448003EECAF /* 91. Decode Ways  */,
				C484BAB62820E27A00CF92BD /* 413. Arithmetic Slices  */,
				C484BAB1281FAE0700CF92BD /* 62. Unique Paths  */,
				C484BAAC281C345000CF92BD /* 45. Jump Game II  */,
				C484BAA8281B7CA400CF92BD /* 55. Jump Game  */,
				C484BAA4281ADE0F00CF92BD /* 213. House Robber II  */,
				C4C107E1280BE0E500326A66 /* 120. Triangle  */,
				C4B684522809B2AF00B41B2F /* 198. House Robber  */,
				C4B684512809013A00B41B2F /* 70. Climbing Stairs  */,
			);
			path = DP;
			sourceTree = "<group>";
		};
		C4B684512809013A00B41B2F /* 70. Climbing Stairs  */ = {
			isa = PBXGroup;
			children = (
				C4B6844F2809013700B41B2F /* ClimbingStairs.hpp */,
				C4B6844E2809013700B41B2F /* ClimbingStairs.cpp */,
			);
			path = "70. Climbing Stairs ";
			sourceTree = "<group>";
		};
		C4B684522809B2AF00B41B2F /* 198. House Robber  */ = {
			isa = PBXGroup;
			children = (
				C4B684542809B2C100B41B2F /* HouseRobber.hpp */,
				C4B684532809B2C100B41B2F /* HouseRobber.cpp */,
			);
			path = "198. House Robber ";
			sourceTree = "<group>";
		};
		C4C107E1280BE0E500326A66 /* 120. Triangle  */ = {
			isa = PBXGroup;
			children = (
				C4C107E3280BE10C00326A66 /* Triangle.hpp */,
				C4C107E2280BE10C00326A66 /* Triangle.cpp */,
			);
			path = "120. Triangle ";
			sourceTree = "<group>";
		};
		C4C19DEA2A2C388000DD292D /* Interview */ = {
			isa = PBXGroup;
			children = (
				C4C19DEB2A2C389B00DD292D /* company1 */,
			);
			path = Interview;
			sourceTree = "<group>";
		};
		C4C19DEB2A2C389B00DD292D /* company1 */ = {
			isa = PBXGroup;
			children = (
				C4C19DEC2A2C38B900DD292D /* Company1Code.swift */,
				C4C19DEE2A2C395E00DD292D /* Company1Code.cpp */,
			);
			path = company1;
			sourceTree = "<group>";
		};
		C4C9D34027E36B22007067BB /* 2. Add Two Numbers  */ = {
			isa = PBXGroup;
			children = (
				C4C9D34227E36B37007067BB /* AddTwoNumbers.hpp */,
				C4C9D34127E36B37007067BB /* AddTwoNumbers.cpp */,
			);
			path = "2. Add Two Numbers ";
			sourceTree = "<group>";
		};
		C4C9D34427E380AC007067BB /* 142. Linked List Cycle II  */ = {
			isa = PBXGroup;
			children = (
				C4C9D34627E380BC007067BB /* LinkedListCycleII.hpp */,
				C4C9D34527E380BC007067BB /* LinkedListCycleII.cpp */,
			);
			path = "142. Linked List Cycle II ";
			sourceTree = "<group>";
		};
		C4C9D34827E4203B007067BB /* 160. Intersection of Two Linked Lists  */ = {
			isa = PBXGroup;
			children = (
				C4C9D34A27E4204D007067BB /* IntersectionOfTwoLinkedLists.hpp */,
				C4C9D34927E4204D007067BB /* IntersectionOfTwoLinkedLists.cpp */,
			);
			path = "160. Intersection of Two Linked Lists ";
			sourceTree = "<group>";
		};
		C4C9D34C27E4ECA9007067BB /* 82. Remove Duplicates from Sorted List II  */ = {
			isa = PBXGroup;
			children = (
				C4C9D34E27E4ECB7007067BB /* RemoveDuplicatesFromSortedListII.hpp */,
				C4C9D34D27E4ECB7007067BB /* RemoveDuplicatesFromSortedListII.cpp */,
			);
			path = "82. Remove Duplicates from Sorted List II ";
			sourceTree = "<group>";
		};
		C4C9D35027E5D1D5007067BB /* 24. Swap Nodes in Pairs  */ = {
			isa = PBXGroup;
			children = (
				C4C9D35227E5D1EA007067BB /* SwapNodesInPairs.hpp */,
				C4C9D35127E5D1EA007067BB /* SwapNodesInPairs.cpp */,
			);
			path = "24. Swap Nodes in Pairs ";
			sourceTree = "<group>";
		};
		C4C9D35427E6169C007067BB /* 707. Design Linked List  */ = {
			isa = PBXGroup;
			children = (
				C4C9D35627E616A5007067BB /* DesignLinkedList.hpp */,
				C4C9D35527E616A5007067BB /* DesignLinkedList.cpp */,
			);
			path = "707. Design Linked List ";
			sourceTree = "<group>";
		};
		C4C9D35827E62FAA007067BB /* 25. Reverse Nodes in k-Group  */ = {
			isa = PBXGroup;
			children = (
				C4C9D35A27E62FBD007067BB /* ReverseNodesInK-Group.hpp */,
				C4C9D35927E62FBD007067BB /* ReverseNodesInK-Group.cpp */,
			);
			path = "25. Reverse Nodes in k-Group ";
			sourceTree = "<group>";
		};
		C4C9D35C27E78674007067BB /* 143. Reorder List  */ = {
			isa = PBXGroup;
			children = (
				C4C9D35E27E7867D007067BB /* ReorderList.hpp */,
				C4C9D35D27E7867D007067BB /* ReorderList.cpp */,
			);
			path = "143. Reorder List ";
			sourceTree = "<group>";
		};
		C4C9D36027E8B2DE007067BB /* 155. Min Stack */ = {
			isa = PBXGroup;
			children = (
				C4C9D36227E8B2E9007067BB /* MinStack.hpp */,
				C4C9D36127E8B2E9007067BB /* MinStack.cpp */,
			);
			path = "155. Min Stack";
			sourceTree = "<group>";
		};
		C4C9D36427E8DC5B007067BB /* 1249. Minimum Remove to Make Valid Parentheses  */ = {
			isa = PBXGroup;
			children = (
				C4C9D36627E8DC71007067BB /* MinimumRemoveToMakeValidParentheses.hpp */,
				C4C9D36527E8DC71007067BB /* MinimumRemoveToMakeValidParentheses.cpp */,
			);
			path = "1249. Minimum Remove to Make Valid Parentheses ";
			sourceTree = "<group>";
		};
		C4C9D36827E9A7E8007067BB /* 1823. Find the Winner of the Circular Game  */ = {
			isa = PBXGroup;
			children = (
				C4C9D36A27E9A817007067BB /* FindTheWinnerOfTheCircularGame.hpp */,
				C4C9D36927E9A817007067BB /* FindTheWinnerOfTheCircularGame.cpp */,
			);
			path = "1823. Find the Winner of the Circular Game ";
			sourceTree = "<group>";
		};
		C4CA0D4D29B08B4A00ECEF6B /* 1232. Check If It Is a Straight Line  */ = {
			isa = PBXGroup;
			children = (
				C4CA0D4E29B08B5800ECEF6B /* CheckIfItIsAStraightLine .swift */,
			);
			path = "1232. Check If It Is a Straight Line ";
			sourceTree = "<group>";
		};
		C4CA0D5129B24F3600ECEF6B /* 1588. Sum of All Odd Length Subarrays  */ = {
			isa = PBXGroup;
			children = (
				C4CA0D5229B24F4200ECEF6B /* SumOfAllOddLengthSubarrays .swift */,
			);
			path = "1588. Sum of All Odd Length Subarrays ";
			sourceTree = "<group>";
		};
		C4CA0D5729B3A82600ECEF6B /* 496. Next Greater Element I  */ = {
			isa = PBXGroup;
			children = (
				C4CA0D5829B3A83100ECEF6B /* NextGreaterElementI .swift */,
			);
			path = "496. Next Greater Element I ";
			sourceTree = "<group>";
		};
		C4CA0D5A29B4EADC00ECEF6B /* 1672. Richest Customer Wealth  */ = {
			isa = PBXGroup;
			children = (
				C4CA0D5B29B4EAE700ECEF6B /* RichestCustomerWealth .swift */,
			);
			path = "1672. Richest Customer Wealth ";
			sourceTree = "<group>";
		};
		C4CA0D5D29B4F20200ECEF6B /* 1572. Matrix Diagonal Sum  */ = {
			isa = PBXGroup;
			children = (
				C4CA0D5E29B4F20C00ECEF6B /* MatrixDiagonalSum .swift */,
			);
			path = "1572. Matrix Diagonal Sum ";
			sourceTree = "<group>";
		};
		C4CA0D6229B63D5600ECEF6B /* 1768. Merge Strings Alternately  */ = {
			isa = PBXGroup;
			children = (
				C4CA0D6329B63D5F00ECEF6B /* MergeStringsAlternately .swift */,
			);
			path = "1768. Merge Strings Alternately ";
			sourceTree = "<group>";
		};
		C4CA0D6529B6460300ECEF6B /* 1678. Goal Parser Interpretation  */ = {
			isa = PBXGroup;
			children = (
				C4CA0D6629B6460D00ECEF6B /* GoalParserInterpretation .swift */,
			);
			path = "1678. Goal Parser Interpretation ";
			sourceTree = "<group>";
		};
		C4CA0D6829B7094000ECEF6B /* 389. Find the Difference  */ = {
			isa = PBXGroup;
			children = (
				C4CA0D6929B7094B00ECEF6B /* FindTheDifference .swift */,
			);
			path = "389. Find the Difference ";
			sourceTree = "<group>";
		};
		C4CA0D6B29B710F800ECEF6B /* 709. To Lower Case  */ = {
			isa = PBXGroup;
			children = (
				C4CA0D6C29B7110500ECEF6B /* ToLowerCase .swift */,
			);
			path = "709. To Lower Case ";
			sourceTree = "<group>";
		};
		C4CA0D6E29B715D900ECEF6B /* 1309. Decrypt String from Alphabet to Integer Mapping  */ = {
			isa = PBXGroup;
			children = (
				C4CA0D6F29B715E600ECEF6B /* DecryptStringFromAlphabetToIntegerMapping .swift */,
			);
			path = "1309. Decrypt String from Alphabet to Integer Mapping ";
			sourceTree = "<group>";
		};
		C4CA0D7129B89BFE00ECEF6B /* 953. Verifying an Alien Dictionary  */ = {
			isa = PBXGroup;
			children = (
				C4CA0D7229B89C0900ECEF6B /* VerifyingAnAlienDictionary .swift */,
			);
			path = "953. Verifying an Alien Dictionary ";
			sourceTree = "<group>";
		};
		C4CA0D7429B8BD2500ECEF6B /* 1290. Convert Binary Number in a Linked List to Integer  */ = {
			isa = PBXGroup;
			children = (
				C4CA0D7529B8BD3800ECEF6B /* ConvertBinaryNumberInALinkedListToInteger .swift */,
			);
			path = "1290. Convert Binary Number in a Linked List to Integer ";
			sourceTree = "<group>";
		};
		C4CA0D8329BC4EFA00ECEF6B /* 404. Sum of Left Leaves  */ = {
			isa = PBXGroup;
			children = (
				C4CA0D8429BC4F0500ECEF6B /* SumOfLeftLeaves .swift */,
				C4CA0D8629BC4F5200ECEF6B /* leftsum-tree.jpg */,
			);
			path = "404. Sum of Left Leaves ";
			sourceTree = "<group>";
		};
		C4CA0D8729BC7B1500ECEF6B /* 1356. Sort Integers by The Number of 1 Bits  */ = {
			isa = PBXGroup;
			children = (
				C4CA0D8829BC7B2A00ECEF6B /* SortIntegersByTheNumberOf1Bits .swift */,
			);
			path = "1356. Sort Integers by The Number of 1 Bits ";
			sourceTree = "<group>";
		};
		C4CA0D9029BE2DAE00ECEF6B /* Design */ = {
			isa = PBXGroup;
			children = (
				C4CA0D9429BE32B100ECEF6B /* 303. Range Sum Query - Immutable  */,
				C4CA0D9129BE2DC100ECEF6B /* 1603. Design Parking System  */,
			);
			path = Design;
			sourceTree = "<group>";
		};
		C4CA0D9129BE2DC100ECEF6B /* 1603. Design Parking System  */ = {
			isa = PBXGroup;
			children = (
				C4CA0D9229BE2DD000ECEF6B /* DesignParkingSystem .swift */,
			);
			path = "1603. Design Parking System ";
			sourceTree = "<group>";
		};
		C4CA0D9429BE32B100ECEF6B /* 303. Range Sum Query - Immutable  */ = {
			isa = PBXGroup;
			children = (
				C4CA0D9529BE32C000ECEF6B /* RangeSumQuery.swift */,
			);
			path = "303. Range Sum Query - Immutable ";
			sourceTree = "<group>";
		};
		C4CA0D9729BF6A8200ECEF6B /* 14. Longest Common Prefix  */ = {
			isa = PBXGroup;
			children = (
				C4CA0D9829BF6A8E00ECEF6B /* LongestCommonPrefix .swift */,
			);
			path = "14. Longest Common Prefix ";
			sourceTree = "<group>";
		};
		C4CA0D9A29C09B0B00ECEF6B /* 50. Pow(x, n)  */ = {
			isa = PBXGroup;
			children = (
				C4CA0D9B29C09B1B00ECEF6B /* Pow(x, n) .swift */,
			);
			path = "50. Pow(x, n) ";
			sourceTree = "<group>";
		};
		C4CA0D9D29C0CD6800ECEF6B /* 73. Set Matrix Zeroes  */ = {
			isa = PBXGroup;
			children = (
				C4CA0D9E29C0CD7D00ECEF6B /* SetMatrixZeroes .swift */,
				C4CA0DA029C0CDE900ECEF6B /* mat1.jpg */,
				C4CA0DA129C0CDE900ECEF6B /* mat2.jpg */,
			);
			path = "73. Set Matrix Zeroes ";
			sourceTree = "<group>";
		};
		C4CA0DA229C3309600ECEF6B /* 125. Valid Palindrome  */ = {
			isa = PBXGroup;
			children = (
				C4CA0DA329C330B700ECEF6B /* ValidPalindrome .swift */,
			);
			path = "125. Valid Palindrome ";
			sourceTree = "<group>";
		};
		C4CA0DA529C478C000ECEF6B /* 128. Longest Consecutive Sequence  */ = {
			isa = PBXGroup;
			children = (
				C4CA0DA629C478C800ECEF6B /* LongestConsecutiveSequence .swift */,
			);
			path = "128. Longest Consecutive Sequence ";
			sourceTree = "<group>";
		};
		C4CF8F20283D2A0C00FB1118 /* 69. Sqrt(x)  */ = {
			isa = PBXGroup;
			children = (
				C4CF8F22283D2A1600FB1118 /* Sqrt(x).hpp */,
				C4CF8F21283D2A1600FB1118 /* Sqrt(x).cpp */,
			);
			path = "69. Sqrt(x) ";
			sourceTree = "<group>";
		};
		C4CF8F24283D2DDC00FB1118 /* 744. Find Smallest Letter Greater Than Target  */ = {
			isa = PBXGroup;
			children = (
				C4CF8F26283D2DF200FB1118 /* FindSmallestLetterGreaterThanTarget.hpp */,
				C4CF8F25283D2DF200FB1118 /* FindSmallestLetterGreaterThanTarget.cpp */,
			);
			path = "744. Find Smallest Letter Greater Than Target ";
			sourceTree = "<group>";
		};
		C4D85DB91D41DF540092E613 /* 11-Container_With_Most_Water */ = {
			isa = PBXGroup;
			children = (
				C4D85DBA1D41DF540092E613 /* main.cpp */,
			);
			path = "11-Container_With_Most_Water";
			sourceTree = "<group>";
		};
		C4D85DC41D41ED7A0092E613 /* 15-3Sum */ = {
			isa = PBXGroup;
			children = (
				C4D85DC51D41ED7A0092E613 /* main.cpp */,
			);
			path = "15-3Sum";
			sourceTree = "<group>";
		};
		C4D85DCF1D438B610092E613 /* 16-3Sum_Closest */ = {
			isa = PBXGroup;
			children = (
				C4D85DD01D438B610092E613 /* main.cpp */,
			);
			path = "16-3Sum_Closest";
			sourceTree = "<group>";
		};
		C4D85DDB1D443F430092E613 /* 18-4Sum */ = {
			isa = PBXGroup;
			children = (
				C4D85DDC1D443F430092E613 /* main.cpp */,
			);
			path = "18-4Sum";
			sourceTree = "<group>";
		};
		C4D97F152833D24400D889A0 /* Others */ = {
			isa = PBXGroup;
			children = (
				C4F60ACD28352F00006B990F /* 149. Max Points on a Line  */,
				C4D97F1A2833E17B00D889A0 /* 202. Happy Number  */,
				C4D97F162833D24E00D889A0 /* 384. Shuffle an Array  */,
			);
			path = Others;
			sourceTree = "<group>";
		};
		C4D97F162833D24E00D889A0 /* 384. Shuffle an Array  */ = {
			isa = PBXGroup;
			children = (
				C4D97F182833D26200D889A0 /* ShuffleAnArray.hpp */,
				C4D97F172833D26200D889A0 /* ShuffleAnArray.cpp */,
			);
			path = "384. Shuffle an Array ";
			sourceTree = "<group>";
		};
		C4D97F1A2833E17B00D889A0 /* 202. Happy Number  */ = {
			isa = PBXGroup;
			children = (
				C4D97F1C2833E18400D889A0 /* HappyNumber.hpp */,
				C4D97F1B2833E18400D889A0 /* HappyNumber.cpp */,
				C4FC5F0529ABAF09001CDED1 /* HappyNumber .swift */,
			);
			path = "202. Happy Number ";
			sourceTree = "<group>";
		};
		C4E3856A27EE2A6F0024DDFF /* 230. Kth Smallest Element in a BST  */ = {
			isa = PBXGroup;
			children = (
				C4E3856C27EE2A820024DDFF /* KthSmallestElementInABST.hpp */,
				C4E3856B27EE2A820024DDFF /* KthSmallestElementInABST.cpp */,
			);
			path = "230. Kth Smallest Element in a BST ";
			sourceTree = "<group>";
		};
		C4E3856E27EEBBC90024DDFF /* 173. Binary Search Tree Iterator  */ = {
			isa = PBXGroup;
			children = (
				C4E3857027EEBBDC0024DDFF /* BinarySearchTreeIterator.hpp */,
				C4E3856F27EEBBDC0024DDFF /* BinarySearchTreeIterator.cpp */,
			);
			path = "173. Binary Search Tree Iterator ";
			sourceTree = "<group>";
		};
		C4E3857227EF2BF30024DDFF /* 236. Lowest Common Ancestor of a Binary Tree  */ = {
			isa = PBXGroup;
			children = (
				C4E3857427EF2C060024DDFF /* LowestCommonAncestorOfABinaryTree.hpp */,
				C4E3857327EF2C060024DDFF /* LowestCommonAncestorOfABinaryTree.cpp */,
			);
			path = "236. Lowest Common Ancestor of a Binary Tree ";
			sourceTree = "<group>";
		};
		C4E3857627F014FE0024DDFF /* 297. Serialize and Deserialize Binary Tree  */ = {
			isa = PBXGroup;
			children = (
				C4E3857827F0150A0024DDFF /* SerializeAndDeserializeBinaryTree.hpp */,
				C4E3857727F0150A0024DDFF /* SerializeAndDeserializeBinaryTree.cpp */,
			);
			path = "297. Serialize and Deserialize Binary Tree ";
			sourceTree = "<group>";
		};
		C4E3857A27F1F2770024DDFF /* Graph */ = {
			isa = PBXGroup;
			children = (
				C4E3858327F2AAD50024DDFF /* 841. Keys and Rooms  */,
				C4E3857F27F20BC70024DDFF /* 1557. Minimum Number of Vertices to Reach All Nodes  */,
				C4E3857B27F1F2830024DDFF /* 997. Find the Town Judge  */,
			);
			path = Graph;
			sourceTree = "<group>";
		};
		C4E3857B27F1F2830024DDFF /* 997. Find the Town Judge  */ = {
			isa = PBXGroup;
			children = (
				C4E3857D27F1F28F0024DDFF /* FindTheTownJudge.hpp */,
				C4E3857C27F1F28F0024DDFF /* FindTheTownJudge.cpp */,
			);
			path = "997. Find the Town Judge ";
			sourceTree = "<group>";
		};
		C4E3857F27F20BC70024DDFF /* 1557. Minimum Number of Vertices to Reach All Nodes  */ = {
			isa = PBXGroup;
			children = (
				C4E3858127F20BD40024DDFF /* MinimumNumberOfVerticesToReachAllNodes.hpp */,
				C4E3858027F20BD40024DDFF /* MinimumNumberOfVerticesToReachAllNodes.cpp */,
			);
			path = "1557. Minimum Number of Vertices to Reach All Nodes ";
			sourceTree = "<group>";
		};
		C4E3858327F2AAD50024DDFF /* 841. Keys and Rooms  */ = {
			isa = PBXGroup;
			children = (
				C4E3858527F2AAE10024DDFF /* KeysAndRooms.hpp */,
				C4E3858427F2AAE10024DDFF /* KeysAndRooms.cpp */,
			);
			path = "841. Keys and Rooms ";
			sourceTree = "<group>";
		};
		C4E610F127DE50FB00B56DED /* 49. Group Anagrams  */ = {
			isa = PBXGroup;
			children = (
				C4E610F327DE510600B56DED /* GroupAnagrams.hpp */,
				C4E610F227DE510600B56DED /* GroupAnagrams.cpp */,
			);
			path = "49. Group Anagrams ";
			sourceTree = "<group>";
		};
		C4E610F527DF7B0F00B56DED /* 43. Multiply Strings  */ = {
			isa = PBXGroup;
			children = (
				C4E610F727DF7B1A00B56DED /* MultiplyStrings.hpp */,
				C4E610F627DF7B1A00B56DED /* MultiplyStrings.cpp */,
				C461DD9129F172C900FB7CC0 /* MultiplyStrings.swift */,
			);
			path = "43. Multiply Strings ";
			sourceTree = "<group>";
		};
		C4E610F927DFA2C100B56DED /* 187. Repeated DNA Sequences  */ = {
			isa = PBXGroup;
			children = (
				C4E610FB27DFA2CD00B56DED /* RepeatedDNASequences.hpp */,
				C4E610FA27DFA2CD00B56DED /* RepeatedDNASequences.cpp */,
			);
			path = "187. Repeated DNA Sequences ";
			sourceTree = "<group>";
		};
		C4E610FD27E0F8DF00B56DED /* 5. Longest Palindromic Substring  */ = {
			isa = PBXGroup;
			children = (
				C4E610FF27E0F8F000B56DED /* LongestPalindromicSubstring.hpp */,
				C4E610FE27E0F8F000B56DED /* LongestPalindromicSubstring.cpp */,
			);
			path = "5. Longest Palindromic Substring ";
			sourceTree = "<group>";
		};
		C4EB183A296964010069717E /* B096 */ = {
			isa = PBXGroup;
			children = (
				C4EB183C296964580069717E /* B096.hpp */,
				C4EB183B296964580069717E /* B096.cpp */,
			);
			path = B096;
			sourceTree = "<group>";
		};
		C4F60ACD28352F00006B990F /* 149. Max Points on a Line  */ = {
			isa = PBXGroup;
			children = (
				C4F60ACF28352F10006B990F /* MaxPointsOnALine.hpp */,
				C4F60ACE28352F10006B990F /* MaxPointsOnALine.cpp */,
				C4F60AD228352FB9006B990F /* plane1.jpeg */,
				C4F60AD128352FB9006B990F /* plane2.jpeg */,
			);
			path = "149. Max Points on a Line ";
			sourceTree = "<group>";
		};
		C4F60AD328392E70006B990F /* 374. Guess Number Higher or Lower  */ = {
			isa = PBXGroup;
			children = (
				C4F60AD528392E7F006B990F /* GuessNumberHigherOrLower.hpp */,
				C4F60AD428392E7F006B990F /* GuessNumberHigherOrLower.cpp */,
			);
			path = "374. Guess Number Higher or Lower ";
			sourceTree = "<group>";
		};
		C4F60AD72839356D006B990F /* 852. Peak Index in a Mountain Array  */ = {
			isa = PBXGroup;
			children = (
				C4F60AD928393581006B990F /* PeakIndexInAMountainArray.hpp */,
				C4F60AD828393581006B990F /* PeakIndexInAMountainArray.cpp */,
			);
			path = "852. Peak Index in a Mountain Array ";
			sourceTree = "<group>";
		};
		C4F60ADB283A12F7006B990F /* 367. Valid Perfect Square  */ = {
			isa = PBXGroup;
			children = (
				C4F60ADD283A1302006B990F /* ValidPerfectSquare.hpp */,
				C4F60ADC283A1302006B990F /* ValidPerfectSquare.cpp */,
			);
			path = "367. Valid Perfect Square ";
			sourceTree = "<group>";
		};
		C4F60ADF283BDDB5006B990F /* 1385. Find the Distance Value Between Two Arrays  */ = {
			isa = PBXGroup;
			children = (
				C4F60AE1283BDDC5006B990F /* FindTheDistanceValueBetweenTwoArrays.hpp */,
				C4F60AE0283BDDC5006B990F /* FindTheDistanceValueBetweenTwoArrays.cpp */,
			);
			path = "1385. Find the Distance Value Between Two Arrays ";
			sourceTree = "<group>";
		};
		C4FC33C31D52C115001B5F2F /* 36-Valid_Sudoku */ = {
			isa = PBXGroup;
			children = (
				C4FC33C41D52C115001B5F2F /* main.cpp */,
			);
			path = "36-Valid_Sudoku";
			sourceTree = "<group>";
		};
		C4FC5EC929A380EB001CDED1 /* 1523-Count_Odd_Numbers_in_an_Interval_Range  */ = {
			isa = PBXGroup;
			children = (
				C4FC5ECE29A38410001CDED1 /* CountOddNumbersInAnIntervalRange.swift */,
			);
			path = "1523-Count_Odd_Numbers_in_an_Interval_Range ";
			sourceTree = "<group>";
		};
		C4FC5ED529A384FA001CDED1 /* LeetCode-Swift */ = {
			isa = PBXGroup;
			children = (
				C4FC5ED629A384FA001CDED1 /* main.swift */,
			);
			path = "LeetCode-Swift";
			sourceTree = "<group>";
		};
		C4FC5EF129A3C395001CDED1 /* 1491. Average Salary Excluding the Minimum and Maximum Salary  */ = {
			isa = PBXGroup;
			children = (
				C4FC5EF229A3C3B6001CDED1 /* AverageSalaryExcludingTheMinimumAndMaximumSalary .swift */,
			);
			path = "1491. Average Salary Excluding the Minimum and Maximum Salary ";
			sourceTree = "<group>";
		};
		C4FC5EF629A4A264001CDED1 /* 1281. Subtract the Product and Sum of Digits of an Integer  */ = {
			isa = PBXGroup;
			children = (
				C4FC5EF729A4A380001CDED1 /* SubtractTheProductAndSumOfDigitsOfAnInteger .swift */,
			);
			path = "1281. Subtract the Product and Sum of Digits of an Integer ";
			sourceTree = "<group>";
		};
		C4FC5EF929A4B4FC001CDED1 /* 976. Largest Perimeter Triangle  */ = {
			isa = PBXGroup;
			children = (
				C4FC5EFA29A4B509001CDED1 /* LargestPerimeterTriangle .swift */,
			);
			path = "976. Largest Perimeter Triangle ";
			sourceTree = "<group>";
		};
		C4FC5EFC29A6656D001CDED1 /* 1779. Find Nearest Point That Has the Same X or Y Coordinate */ = {
			isa = PBXGroup;
			children = (
				C4FC5EFD29A66583001CDED1 /* FindNearestPointThatHasTheSameXOrYCoordinate.swift */,
			);
			path = "1779. Find Nearest Point That Has the Same X or Y Coordinate";
			sourceTree = "<group>";
		};
		C4FC5EFF29A900C1001CDED1 /* 1822. Sign of the Product of an Array  */ = {
			isa = PBXGroup;
			children = (
				C4FC5F0029A900D5001CDED1 /* SignOfTheProductOfAnArray .swift */,
			);
			path = "1822. Sign of the Product of an Array ";
			sourceTree = "<group>";
		};
		C4FC5F0229AA5C6A001CDED1 /* 1502. Can Make Arithmetic Progression From Sequence 1502. Can Make Arithmetic Progression From Sequence  */ = {
			isa = PBXGroup;
			children = (
				C4FC5F0329AA5C77001CDED1 /* CanMakeArithmeticProgressionFromSequence .swift */,
			);
			path = "1502. Can Make Arithmetic Progression From Sequence 1502. Can Make Arithmetic Progression From Sequence ";
			sourceTree = "<group>";
		};
		C4FC5F0729AD0957001CDED1 /* 1790. Check if One String Swap Can Make Strings Equal  */ = {
			isa = PBXGroup;
			children = (
				C4FC5F0829AD0975001CDED1 /* CheckIfOneStringSwapCanMakeStringsEqual .swift */,
			);
			path = "1790. Check if One String Swap Can Make Strings Equal ";
			sourceTree = "<group>";
		};
		C4FC5F0A29AE5B5B001CDED1 /* 589. N-ary Tree Preorder Traversal  */ = {
			isa = PBXGroup;
			children = (
				C4FC5F0B29AE5B66001CDED1 /* N-aryTreePreorderTraversal .swift */,
			);
			path = "589. N-ary Tree Preorder Traversal ";
			sourceTree = "<group>";
		};
		CB15A52827C7309300B4AFA1 /* 383. Ransom Note  */ = {
			isa = PBXGroup;
			children = (
				CB15A52A27C730A900B4AFA1 /* RansomNote.hpp */,
				CB15A52927C730A900B4AFA1 /* RansomNote.cpp */,
			);
			path = "383. Ransom Note ";
			sourceTree = "<group>";
		};
		CB15B67427C7A93A00B4AFA1 /* 242. Valid Anagram  */ = {
			isa = PBXGroup;
			children = (
				CB15B67627C7A94A00B4AFA1 /* ValidAnagram.hpp */,
				CB15B67527C7A94A00B4AFA1 /* ValidAnagram.cpp */,
				C4CA0D8C29BCDBAF00ECEF6B /* ValidAnagram .swift */,
			);
			path = "242. Valid Anagram ";
			sourceTree = "<group>";
		};
		CB15B67A27C7B10800B4AFA1 /* Linked List */ = {
			isa = PBXGroup;
			children = (
				C4CA0D7429B8BD2500ECEF6B /* 1290. Convert Binary Number in a Linked List to Integer  */,
				C4C9D35C27E78674007067BB /* 143. Reorder List  */,
				C4C9D35827E62FAA007067BB /* 25. Reverse Nodes in k-Group  */,
				C4C9D35427E6169C007067BB /* 707. Design Linked List  */,
				C4C9D35027E5D1D5007067BB /* 24. Swap Nodes in Pairs  */,
				C4C9D34C27E4ECA9007067BB /* 82. Remove Duplicates from Sorted List II  */,
				C4C9D34827E4203B007067BB /* 160. Intersection of Two Linked Lists  */,
				C4C9D34427E380AC007067BB /* 142. Linked List Cycle II  */,
				C4C9D34027E36B22007067BB /* 2. Add Two Numbers  */,
				C4A511DE27C9CED00004D026 /* 83. Remove Duplicates from Sorted List  */,
				C4A885A627C9268C00EC168C /* 206. Reverse Linked List  */,
				C4A885A227C9167A00EC168C /* 203. Remove Linked List Elements  */,
				CB15B68027C8769800B4AFA1 /* 21. Merge Two Sorted Lists  */,
				CB15B67B27C7B2DA00B4AFA1 /* 141. Linked List Cycle  */,
				C42A7B211D864E400039DE1B /* 2-Add_Two_Numbers */,
				C4A043131D890B2000551755 /* 19-Remove_Nth_Node_From_End_of_List */,
				C4A0431E1D89164400551755 /* 21-Merge_Two_Sorted_Lists */,
				C4A0432F1D89233A00551755 /* 23-Merge_k_Sorted_Lists */,
				C49F2FF51D8C39EA004E8E43 /* 24-Swap_Nodes_in_Pairs */,
				C4A737F91D8E5E45007B8AFE /* 25-Reverse_Nodes_in_k-Group */,
				C4A738051D8F6905007B8AFE /* 61-Rotate_List */,
				C4A738141D8F7D6F007B8AFE /* 82-Remove_Duplicates_from_Sorted_List_II */,
				C4A738201D8FAB80007B8AFE /* 83-Remove_Duplicates_from_Sorted_List */,
				C4B643C41D92506D00056FEC /* 86-Partition_List */,
			);
			path = "Linked List";
			sourceTree = "<group>";
		};
		CB15B67B27C7B2DA00B4AFA1 /* 141. Linked List Cycle  */ = {
			isa = PBXGroup;
			children = (
				CB15B67D27C7B2FC00B4AFA1 /* LinkedListCycle.hpp */,
				CB15B67C27C7B2FB00B4AFA1 /* LinkedListCycle.cpp */,
			);
			path = "141. Linked List Cycle ";
			sourceTree = "<group>";
		};
		CB15B68027C8769800B4AFA1 /* 21. Merge Two Sorted Lists  */ = {
			isa = PBXGroup;
			children = (
				CB15B68227C876B500B4AFA1 /* MergeTwoSortedLists.hpp */,
				CB15B68127C876B500B4AFA1 /* MergeTwoSortedLists.cpp */,
			);
			path = "21. Merge Two Sorted Lists ";
			sourceTree = "<group>";
		};
		CB15D98F27CE560C00B4AFA1 /* 102. Binary Tree Level Order Traversal  */ = {
			isa = PBXGroup;
			children = (
				CB15D99127CE563300B4AFA1 /* BinaryTreeLevelOrderTraversal.hpp */,
				CB15D99027CE563300B4AFA1 /* BinaryTreeLevelOrderTraversal.cpp */,
			);
			path = "102. Binary Tree Level Order Traversal ";
			sourceTree = "<group>";
		};
		CB15D99327CF0AA200B4AFA1 /* 101. Symmetric Tree  */ = {
			isa = PBXGroup;
			children = (
				CB15D99527CF0AB400B4AFA1 /* SymmetricTree.hpp */,
				CB15D99427CF0AB400B4AFA1 /* SymmetricTree.cpp */,
			);
			path = "101. Symmetric Tree ";
			sourceTree = "<group>";
		};
		CB2C412D27FF10E000A3658A /* 344. Reverse String  */ = {
			isa = PBXGroup;
			children = (
				CB2C412F27FF10EE00A3658A /* ReverseString.hpp */,
				CB2C412E27FF10EE00A3658A /* ReverseString.cpp */,
			);
			path = "344. Reverse String ";
			sourceTree = "<group>";
		};
		CB2C413127FF144900A3658A /* 557. Reverse Words in a String III  */ = {
			isa = PBXGroup;
			children = (
				CB2C413327FF145D00A3658A /* ReverseWordsInAStringIII.hpp */,
				CB2C413227FF145D00A3658A /* ReverseWordsInAStringIII.cpp */,
			);
			path = "557. Reverse Words in a String III ";
			sourceTree = "<group>";
		};
		CB50F9842816CBB70097E359 /* 90. Subsets II  */ = {
			isa = PBXGroup;
			children = (
				CB50F9862816CBC90097E359 /* SubsetsII.hpp */,
				CB50F9852816CBC90097E359 /* SubsetsII.cpp */,
			);
			path = "90. Subsets II ";
			sourceTree = "<group>";
		};
		CB619F7028051C4800E5E737 /* 695. Max Area of Island  */ = {
			isa = PBXGroup;
			children = (
				CB619F7228051C6500E5E737 /* MaxAreaOfIsland.hpp */,
				CB619F7128051C6500E5E737 /* MaxAreaOfIsland.cpp */,
			);
			path = "695. Max Area of Island ";
			sourceTree = "<group>";
		};
		CB61B0EC28056F7900E5E737 /* 617. Merge Two Binary Trees  */ = {
			isa = PBXGroup;
			children = (
				CB61B0EE28056F9A00E5E737 /* MergeTwoBinaryTrees.hpp */,
				CB61B0ED28056F9A00E5E737 /* MergeTwoBinaryTrees.cpp */,
			);
			path = "617. Merge Two Binary Trees ";
			sourceTree = "<group>";
		};
		CB61B0F02805A62300E5E737 /* 116. Populating Next Right Pointers in Each Node  */ = {
			isa = PBXGroup;
			children = (
				CB61B0F22805A63A00E5E737 /* PopulatingNextRightPointersInEachNode.hpp */,
				CB61B0F12805A63A00E5E737 /* PopulatingNextRightPointersInEachNode.cpp */,
			);
			path = "116. Populating Next Right Pointers in Each Node ";
			sourceTree = "<group>";
		};
		CB624D75280ED76C00BED7B6 /* 844. Backspace String Compare  */ = {
			isa = PBXGroup;
			children = (
				CB624D77280ED77C00BED7B6 /* BackspaceStringCompare.hpp */,
				CB624D76280ED77C00BED7B6 /* BackspaceStringCompare.cpp */,
			);
			path = "844. Backspace String Compare ";
			sourceTree = "<group>";
		};
		CB624D79280EE36C00BED7B6 /* 986. Interval List Intersections  */ = {
			isa = PBXGroup;
			children = (
				CB624D7B280EE37800BED7B6 /* IntervalListIntersections.hpp */,
				CB624D7A280EE37800BED7B6 /* IntervalListIntersections.cpp */,
			);
			path = "986. Interval List Intersections ";
			sourceTree = "<group>";
		};
		CB625F1128115E5200BED7B6 /* 209. Minimum Size Subarray Sum  */ = {
			isa = PBXGroup;
			children = (
				CB625F1328115E6700BED7B6 /* MinimumSizeSubarraySum.hpp */,
				CB625F1228115E6700BED7B6 /* MinimumSizeSubarraySum.cpp */,
			);
			path = "209. Minimum Size Subarray Sum ";
			sourceTree = "<group>";
		};
		CB761DB52812A47C0075CA1B /* 547. Number of Provinces  */ = {
			isa = PBXGroup;
			children = (
				CB761DB72812A48A0075CA1B /* NumberOfProvinces.hpp */,
				CB761DB62812A48A0075CA1B /* NumberOfProvinces.cpp */,
			);
			path = "547. Number of Provinces ";
			sourceTree = "<group>";
		};
		CB761DF0281554BD0075CA1B /* 130. Surrounded Regions  */ = {
			isa = PBXGroup;
			children = (
				CB761DF2281554C90075CA1B /* SurroundedRegions.hpp */,
				CB761DF1281554C90075CA1B /* SurroundedRegions.cpp */,
			);
			path = "130. Surrounded Regions ";
			sourceTree = "<group>";
		};
		CB8C3C2727D7514B00576C6D /* 48. Rotate Image  */ = {
			isa = PBXGroup;
			children = (
				CB8C3C2927D7515E00576C6D /* RotateImage.hpp */,
				CB8C3C2827D7515E00576C6D /* RotateImage.cpp */,
				C4549C562A07F062006BB982 /* RotateImage.swift */,
			);
			path = "48. Rotate Image ";
			sourceTree = "<group>";
		};
		CB8C3C2B27D77C7F00576C6D /* 59. Spiral Matrix II  */ = {
			isa = PBXGroup;
			children = (
				CB8C3C2D27D77C9F00576C6D /* SpiralMatrixII.hpp */,
				CB8C3C2C27D77C9F00576C6D /* SpiralMatrixII.cpp */,
			);
			path = "59. Spiral Matrix II ";
			sourceTree = "<group>";
		};
		CBFE2430280830E100B191C1 /* 46. Permutations  */ = {
			isa = PBXGroup;
			children = (
				CBFE2432280830EC00B191C1 /* Permutations.hpp */,
				CBFE2431280830EC00B191C1 /* Permutations.cpp */,
			);
			path = "46. Permutations ";
			sourceTree = "<group>";
		};
		CBFE24342808500100B191C1 /* 784. Letter Case Permutation  */ = {
			isa = PBXGroup;
			children = (
				CBFE24362808500C00B191C1 /* LetterCasePermutation.hpp */,
				CBFE24352808500C00B191C1 /* LetterCasePermutation.cpp */,
			);
			path = "784. Letter Case Permutation ";
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		C42241D927BC5EF300E5B034 /* LeetCode-main */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = C42241DE27BC5EF300E5B034 /* Build configuration list for PBXNativeTarget "LeetCode-main" */;
			buildPhases = (
				C42241D627BC5EF300E5B034 /* Sources */,
				C42241D727BC5EF300E5B034 /* Frameworks */,
				C42241D827BC5EF300E5B034 /* CopyFiles */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "LeetCode-main";
			productName = "LeetCode-main";
			productReference = C42241DA27BC5EF300E5B034 /* LeetCode-main */;
			productType = "com.apple.product-type.tool";
		};
		C4FC5ED329A384FA001CDED1 /* LeetCode-Swift */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = C4FC5ED829A384FA001CDED1 /* Build configuration list for PBXNativeTarget "LeetCode-Swift" */;
			buildPhases = (
				C4FC5ED029A384FA001CDED1 /* Sources */,
				C4FC5ED129A384FA001CDED1 /* Frameworks */,
				C4FC5ED229A384FA001CDED1 /* CopyFiles */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "LeetCode-Swift";
			productName = "LeetCode-Swift";
			productReference = C4FC5ED429A384FA001CDED1 /* LeetCode-Swift */;
			productType = "com.apple.product-type.tool";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		C4130D931D40AA9600AB673F /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastSwiftUpdateCheck = 1420;
				LastUpgradeCheck = 0800;
				ORGANIZATIONNAME = JackMa;
				TargetAttributes = {
					C42241D927BC5EF300E5B034 = {
						CreatedOnToolsVersion = 12.5.1;
						DevelopmentTeam = 2658KK4JZ7;
						LastSwiftMigration = 1420;
						ProvisioningStyle = Automatic;
					};
					C4FC5ED329A384FA001CDED1 = {
						CreatedOnToolsVersion = 14.2;
						DevelopmentTeam = 2658KK4JZ7;
						ProvisioningStyle = Automatic;
					};
				};
			};
			buildConfigurationList = C4130D961D40AA9600AB673F /* Build configuration list for PBXProject "LeetCode" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				English,
				en,
			);
			mainGroup = C4130D921D40AA9600AB673F;
			productRefGroup = C4130D9C1D40AA9600AB673F /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				C42241D927BC5EF300E5B034 /* LeetCode-main */,
				C4FC5ED329A384FA001CDED1 /* LeetCode-Swift */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		C42241D627BC5EF300E5B034 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				C4A8859427C3E37F00EC168C /* Pascal'sTriangle.cpp in Sources */,
				C4A62F102843AE1200F404D6 /* SpecialArrayWithXElementsGreaterThanOrEqualX.cpp in Sources */,
				C4A8859827C471EC00EC168C /* ValidSudoku.cpp in Sources */,
				C4ABA594280090A000E64BA2 /* LongestSwipe.cpp in Sources */,
				C489C5F127D19ADF002A6D34 /* ValidateBinarySearchTree.cpp in Sources */,
				C402A06B27EB4D840083C036 /* BinaryTreeZigzagLevelOrderTraversal.cpp in Sources */,
				CB624D78280ED77C00BED7B6 /* BackspaceStringCompare.cpp in Sources */,
				C49BE794280F0FB9008ACB59 /* ContainerWithMostWater.cpp in Sources */,
				C4A9458327D98B2E00E452DC /* IncreasingTripletSubsequence.cpp in Sources */,
				C4C9D34B27E4204D007067BB /* IntersectionOfTwoLinkedLists.cpp in Sources */,
				C4A62F4B284E536800F404D6 /* AddToArrayFormOfInteger.cpp in Sources */,
				C4E3857127EEBBDC0024DDFF /* BinarySearchTreeIterator.cpp in Sources */,
				CB624D7C280EE37800BED7B6 /* IntervalListIntersections.cpp in Sources */,
				C402A06327EAAD050083C036 /* ConvertSortedArrayToBinarySearchTree.cpp in Sources */,
				C4966507282C0C5D00E6FB57 /* CoinChange.cpp in Sources */,
				C4C9D35F27E7867D007067BB /* ReorderList.cpp in Sources */,
				CB8C3C2E27D77CA000576C6D /* SpiralMatrixII.cpp in Sources */,
				C4AC28FF2801E8110036E6DB /* LongestSubstringWithoutRepeatingCharacters.cpp in Sources */,
				C4C9D35727E616A5007067BB /* DesignLinkedList.cpp in Sources */,
				C4B2524327F4BB620040706B /* KthLargestElementInAnArray.cpp in Sources */,
				C4ABA5982801233800E64BA2 /* BossHome.cpp in Sources */,
				CB61B0EF28056F9D00E5E737 /* MergeTwoBinaryTrees.cpp in Sources */,
				C4A9456F27D595AE00E452DC /* MergeIntervals.cpp in Sources */,
				C402A07727ECB3500083C036 /* DeleteNodeInABST.cpp in Sources */,
				C4ABA58427FDE69900E64BA2 /* MoveZeroes.cpp in Sources */,
				C4A62F2C2849FB5800F404D6 /* ImplementStrStr().cpp in Sources */,
				C49664F72824250000E6FB57 /* NumberOfLongestIncreasingSubsequence.cpp in Sources */,
				C489C5DD27CEF8C3002A6D34 /* MaximumDepthOfBinaryTree.cpp in Sources */,
				C49BE78C280DA426008ACB59 /* FindMinimumInRotatedSortedArray.cpp in Sources */,
				CB15B68327C876B500B4AFA1 /* MergeTwoSortedLists.cpp in Sources */,
				C489C5E127D04687002A6D34 /* InvertBinaryTree.cpp in Sources */,
				CB625F1428115E6700BED7B6 /* MinimumSizeSubarraySum.cpp in Sources */,
				C4A62F142845032300F404D6 /* CountNegativeNumbersInASortedMatrix.cpp in Sources */,
				C4ABA58027FCA0B900E64BA2 /* RotateArray.cpp in Sources */,
				C49664FB282581CD00E6FB57 /* LongestCommonSubsequence.cpp in Sources */,
				C4C9D34327E36B37007067BB /* AddTwoNumbers.cpp in Sources */,
				C484BAB0281C345E00CF92BD /* JumpGameII.cpp in Sources */,
				C4B2524727F73CE90040706B /* SortAnArray.cpp in Sources */,
				C4CF8F27283D2DF200FB1118 /* FindSmallestLetterGreaterThanTarget.cpp in Sources */,
				CB15B67727C7A94B00B4AFA1 /* ValidAnagram.cpp in Sources */,
				C484BA9D281A312C00CF92BD /* CombinationSumII.cpp in Sources */,
				C484BA7C281401C400CF92BD /* ShortestPathInBinaryMatrix.cpp in Sources */,
				C48E9E6527DC41D40063E280 /* AddStrings.cpp in Sources */,
				C49BE788280D554A008ACB59 /* SearchInRotatedSortedArray.cpp in Sources */,
				CBFE2433280830EC00B191C1 /* Permutations.cpp in Sources */,
				C4CF8F23283D2A1600FB1118 /* Sqrt(x).cpp in Sources */,
				C402A06F27EB70270083C036 /* BinaryTreeRightSideView.cpp in Sources */,
				C4C9D36327E8B2E9007067BB /* MinStack.cpp in Sources */,
				C4AC28FA2801D2310036E6DB /* MaximalRectangle.cpp in Sources */,
				C4A337D827BE947F00B1DBAD /* IntersectionOfTwoArraysII.cpp in Sources */,
				C4C9D36B27E9A817007067BB /* FindTheWinnerOfTheCircularGame.cpp in Sources */,
				CB2C413027FF10EF00A3658A /* ReverseString.cpp in Sources */,
				C4A9458B27DA593100E452DC /* SubarraySumEqualsK.cpp in Sources */,
				C4C9D35327E5D1EA007067BB /* SwapNodesInPairs.cpp in Sources */,
				C4A62F4F284FAD3900F404D6 /* LengthOfLastWord.cpp in Sources */,
				C4B2525327FAE9B60040706B /* KClosestPointsToOrigin.cpp in Sources */,
				C4A62F36284B443D00F404D6 /* RepeatedSubstringPattern.cpp in Sources */,
				C4F60ADE283A1302006B990F /* ValidPerfectSquare.cpp in Sources */,
				CB619F7328051C6500E5E737 /* MaxAreaOfIsland.cpp in Sources */,
				C489C5E927D10DD6002A6D34 /* SearchInABinarySearchTree.cpp in Sources */,
				C49BE774280C2F29008ACB59 /* PowerOfTwo.cpp in Sources */,
				C4A9457B27D82BD000E452DC /* SearchA2DMatrixII.cpp in Sources */,
				C49BE778280C366C008ACB59 /* NumberOf1Bits.cpp in Sources */,
				C4D97F192833D26200D889A0 /* ShuffleAnArray.cpp in Sources */,
				C4B684552809B2C100B41B2F /* HouseRobber.cpp in Sources */,
				C4A9456827D513AB00E452DC /* SortColors.cpp in Sources */,
				C4E610FC27DFA2CD00B56DED /* RepeatedDNASequences.cpp in Sources */,
				C4A511F027CC516F0004D026 /* BinaryTreePreorderTraversal.cpp in Sources */,
				C4C9D34727E380BC007067BB /* LinkedListCycleII.cpp in Sources */,
				C49BE79828105624008ACB59 /* SubarrayProductLessThanK.cpp in Sources */,
				C4A885A127C670F900EC168C /* FirstUniqueCharacterInAString.cpp in Sources */,
				C4A511E727CA68300004D026 /* ValidParentheses.cpp in Sources */,
				C489C5D927CD26A2002A6D34 /* BinaryTreePostorderTraversal.cpp in Sources */,
				C493919E27FC782D00E2CF01 /* ClimbTheStairs.cpp in Sources */,
				C4C19DEF2A2C395E00DD292D /* Company1Code.cpp in Sources */,
				CB61B0F62805A71800E5E737 /* Node.cpp in Sources */,
				C4A511EB27CB25280004D026 /* ImplementQueueUsingStacks.cpp in Sources */,
				C4A62F532850F10700F404D6 /* DetermineWhetherMatrixCanBeObtainedByRotation.cpp in Sources */,
				C481ED0A2805CFF50022DEEC /* 01Matrix.cpp in Sources */,
				C4E610F827DF7B1A00B56DED /* MultiplyStrings.cpp in Sources */,
				C4A62F18284514F300F404D6 /* TheKWeakestRowsInAMatrix.cpp in Sources */,
				C4ABA58827FDF83800E64BA2 /* TwoSumII-InputArrayIsSorted.cpp in Sources */,
				C489C5E527D0533C002A6D34 /* PathSum.cpp in Sources */,
				C4A9456027D4676E00E452DC /* MajorityElement.cpp in Sources */,
				C4A9457F27D8BA8C00E452DC /* Non-overlappingIntervals.cpp in Sources */,
				CB15D99227CE563400B4AFA1 /* BinaryTreeLevelOrderTraversal.cpp in Sources */,
				C4A62F3E284C81AE00F404D6 /* PlusOne.cpp in Sources */,
				C4B684502809013700B41B2F /* ClimbingStairs.cpp in Sources */,
				C402A07327EB7C460083C036 /* PathSumII.cpp in Sources */,
				C4C107E4280BE10C00326A66 /* Triangle.cpp in Sources */,
				C4E610F427DE510600B56DED /* GroupAnagrams.cpp in Sources */,
				C493919127FB4CB500E2CF01 /* BinarySearch.cpp in Sources */,
				C4A337D427BDDA9000B1DBAD /* MergeSortedArray.cpp in Sources */,
				CB15D99627CF0AB400B4AFA1 /* SymmetricTree.cpp in Sources */,
				C49BE79F28123D0E008ACB59 /* NumberOfIslands.cpp in Sources */,
				C42241E327BC5F4100E5B034 /* ContainsDuplicate.cpp in Sources */,
				CB61B0F32805A63A00E5E737 /* PopulatingNextRightPointersInEachNode.cpp in Sources */,
				C4A511E227C9CEEA0004D026 /* RemoveDuplicatesFromSortedList.cpp in Sources */,
				C4B2524F27F9FA580040706B /* SortCharactersByFrequency.cpp in Sources */,
				C4A9456427D4C70800E452DC /* 3Sum.cpp in Sources */,
				C48E9E6927DC74880063E280 /* LongestPalindrome.cpp in Sources */,
				C4A9457327D665FC00E452DC /* DesignHashMap.cpp in Sources */,
				C4A9458727DA4FA000E452DC /* ProductOfArrayExceptSelf.cpp in Sources */,
				C4A62F1C284735CC00F404D6 /* CheckIfNAndItsDoubleExist.cpp in Sources */,
				C4E3856D27EE2A820024DDFF /* KthSmallestElementInABST.cpp in Sources */,
				C484BAA7281ADE2100CF92BD /* HouseRobberII.cpp in Sources */,
				C4A8859027C13E6600EC168C /* ReshapeTheMatrix.cpp in Sources */,
				C4E6110027E0F8F000B56DED /* LongestPalindromicSubstring.cpp in Sources */,
				C484BA97281985AE00CF92BD /* LetterCombinationsOfAPhoneNumber.cpp in Sources */,
				C49BE790280DAEBE008ACB59 /* FindPeakElement.cpp in Sources */,
				C4C9D34F27E4ECB7007067BB /* RemoveDuplicatesFromSortedListII.cpp in Sources */,
				CB761DF3281554C90075CA1B /* SurroundedRegions.cpp in Sources */,
				C4A9454E27D3303B00E452DC /* TwoSumIV.cpp in Sources */,
				C481ED06280482730022DEEC /* FloodFill.cpp in Sources */,
				C484BAAB281B7CB000CF92BD /* JumpGame.cpp in Sources */,
				CBFE24372808500D00B191C1 /* LetterCasePermutation.cpp in Sources */,
				C4A885A527C9169200EC168C /* RemoveLinkedListElements.cpp in Sources */,
				C4ABA59027FFC3A400E64BA2 /* RemoveNthNodeFromEndOfList.cpp in Sources */,
				C48E9E6D27DC89540063E280 /* WordPattern.cpp in Sources */,
				C4A9455C27D3B08B00E452DC /* SingleNumber.cpp in Sources */,
				C4A62F47284D111F00F404D6 /* AddBinary.cpp in Sources */,
				C4B6844B2807B3FF00B41B2F /* Combinations.cpp in Sources */,
				C4AC722D282EB399006412A7 /* IntegerBreak.cpp in Sources */,
				C484BAB4281FAE1100CF92BD /* UniquePaths.cpp in Sources */,
				C4A9456B27D586F100E452DC /* Helper.cpp in Sources */,
				C4A62F42284C904E00F404D6 /* LinkedListInBinaryTree.cpp in Sources */,
				C4F60AD628392E7F006B990F /* GuessNumberHigherOrLower.cpp in Sources */,
				C42241DD27BC5EF300E5B034 /* main.cpp in Sources */,
				C4A0B01B2822675A003EECAF /* WordBreak.cpp in Sources */,
				C4A8859C27C5C4D900EC168C /* SearchA2DMatrix.cpp in Sources */,
				C4A62F24284792EC00F404D6 /* MaximumDistanceBetweenAPairOfValues.cpp in Sources */,
				C49391A927FC8E0900E2CF01 /* SearchInsertPosition.cpp in Sources */,
				C484BAA1281A323400CF92BD /* WordSearch.cpp in Sources */,
				CB8C3C2A27D7515F00576C6D /* RotateImage.cpp in Sources */,
				CB2C413427FF145D00A3658A /* ReverseWordsInAStringIII.cpp in Sources */,
				C49665032827F5C100E6FB57 /* EditDistance.cpp in Sources */,
				C4E3858227F20BD40024DDFF /* MinimumNumberOfVerticesToReachAllNodes.cpp in Sources */,
				C484BA8E2818408400CF92BD /* SubsetsII.cpp in Sources */,
				C4E3857E27F1F28F0024DDFF /* FindTheTownJudge.cpp in Sources */,
				C48E9E7127DCE6690063E280 /* PartitionLabels.cpp in Sources */,
				C4A337D027BD561D00B1DBAD /* TwoSum.cpp in Sources */,
				C49391A127FC783300E2CF01 /* EscapeFromTheGame.cpp in Sources */,
				C4D97F1D2833E18400D889A0 /* HappyNumber.cpp in Sources */,
				C4A9457727D6E5E300E452DC /* Pascal'sTriangleII.cpp in Sources */,
				C4AC723128314DAC006412A7 /* BitwiseAndOfNumbersRange.cpp in Sources */,
				CB15B67E27C7B2FC00B4AFA1 /* LinkedListCycle.cpp in Sources */,
				C4A0B01728223454003EECAF /* DecodeWays.cpp in Sources */,
				C4A62F282849D22A00F404D6 /* MonotonicArray.cpp in Sources */,
				C4ABA57927FC979A00E64BA2 /* SquaresOfASortedArray.cpp in Sources */,
				C4A885A927C9269900EC168C /* ReverseLinkedList.cpp in Sources */,
				C4A62F30284B01BA00F404D6 /* BalancedBinaryTree.cpp in Sources */,
				C4A70756283FC015007F1A43 /* ArrangingCoins.cpp in Sources */,
				C481ED0128047D380022DEEC /* FindAllAnagramsInAString.cpp in Sources */,
				C4B684472807116500B41B2F /* RottingOranges.cpp in Sources */,
				CB761DB82812A48A0075CA1B /* NumberOfProvinces.cpp in Sources */,
				C484BA8D28183FE300CF92BD /* PermutationsII.cpp in Sources */,
				C484BAA3281ADD8E00CF92BD /* GenerateParentheses.cpp in Sources */,
				C4F60ADA28393581006B990F /* PeakIndexInAMountainArray.cpp in Sources */,
				C4EB183D296964580069717E /* B096.cpp in Sources */,
				C4A7075C283FC398007F1A43 /* KthMissingPositiveNumber.cpp in Sources */,
				C4A62F3A284C78CA00F404D6 /* EvaluateReversePolishNotation.cpp in Sources */,
				C489C5D527CD173D002A6D34 /* BinaryTreeInorderTraversal.cpp in Sources */,
				C4A511F427CC51C30004D026 /* TreeNode.cpp in Sources */,
				CB15A52B27C730A900B4AFA1 /* RansomNote.cpp in Sources */,
				C4ABA58C27FF46E500E64BA2 /* MiddleOfTheLinkedList.cpp in Sources */,
				C489C5ED27D11719002A6D34 /* InsertIntoABinarySearchTree.cpp in Sources */,
				C484BA8F281844F400CF92BD /* CombinationSum.cpp in Sources */,
				C481ECFD2802B7540022DEEC /* PermutationInString.cpp in Sources */,
				C484BA84281631AE00CF92BD /* Subsets.cpp in Sources */,
				C49BE77C280C46AB008ACB59 /* ReverseBits.cpp in Sources */,
				C4E3857927F0150A0024DDFF /* SerializeAndDeserializeBinaryTree.cpp in Sources */,
				C4E3858627F2AAE10024DDFF /* KeysAndRooms.cpp in Sources */,
				C4C9D35B27E62FBD007067BB /* ReverseNodesInK-Group.cpp in Sources */,
				C402A06727EABFFB0083C036 /* ConstructBinaryTreeFromPreorderAndInorderTraversal.cpp in Sources */,
				C4C9D36727E8DC71007067BB /* MinimumRemoveToMakeValidParentheses.cpp in Sources */,
				C4F60AE2283BDDC5006B990F /* FindTheDistanceValueBetweenTwoArrays.cpp in Sources */,
				C4A62F2028475BF900F404D6 /* SumOfSquareNumbers.cpp in Sources */,
				C49664F3282383BB00E6FB57 /* LongestIncreasingSubsequence.cpp in Sources */,
				C4B2524B27F995F00040706B /* TopKFrequentElements.cpp in Sources */,
				C4A337DC27BF8F6D00B1DBAD /* BestTimeToBuyAndSellStock.cpp in Sources */,
				C49BE7A32812FB88008ACB59 /* PopulatingNextRightPointersInEachNodeII.cpp in Sources */,
				C42241E827BC6CA900E5B034 /* MaximumSubarray.cpp in Sources */,
				C4E3857527EF2C060024DDFF /* LowestCommonAncestorOfABinaryTree.cpp in Sources */,
				C49BE784280C55C5008ACB59 /* FindFirstandLastPositionOfElementInSortedArray.cpp in Sources */,
				C49664FF28276A5100E6FB57 /* DeleteOperationForTwoStrings.cpp in Sources */,
				C484BA782813C46E00CF92BD /* SubtreeOfAnotherTree.cpp in Sources */,
				C484BAB92820E28600CF92BD /* ArithmeticSlices.cpp in Sources */,
				C4F60AD028352F10006B990F /* MaxPointsOnALine.cpp in Sources */,
				C484BA802815A2AE00CF92BD /* AllPathsFromSourceToTarget.cpp in Sources */,
				C49391A527FC7C6D00E2CF01 /* FirstBadVersion.cpp in Sources */,
				CB15B67F27C7B33300B4AFA1 /* ListNode.cpp in Sources */,
				C4AC28F628015A1D0036E6DB /* LargestRectangleInHistogram.cpp in Sources */,
				C4A9455227D376CE00E452DC /* LowestCommonAncestorOfABinarySearchTree.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		C4FC5ED029A384FA001CDED1 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				C4CA0D6129B5DF2200ECEF6B /* ReshapeTheMatrix .swift in Sources */,
				C4FC5F0629ABAF09001CDED1 /* HappyNumber .swift in Sources */,
				C4CA0DA729C478C900ECEF6B /* LongestConsecutiveSequence .swift in Sources */,
				C4CA0D6729B6460D00ECEF6B /* GoalParserInterpretation .swift in Sources */,
				C461DD3A29E18A9C00FB7CC0 /* ImplementStrStr.swift in Sources */,
				C4FC5EF029A3858E001CDED1 /* CountOddNumbersInAnIntervalRange.swift in Sources */,
				C4CA0D5C29B4EAE700ECEF6B /* RichestCustomerWealth .swift in Sources */,
				C4549C4E2A053711006BB982 /* AddBinary.swift in Sources */,
				C4549C5C2A0933E4006BB982 /* SpiralMatrix .swift in Sources */,
				C4549C552A06BB9B006BB982 /* LengthOfLastWord.swift in Sources */,
				C4CA0D6D29B7110500ECEF6B /* ToLowerCase .swift in Sources */,
				C4CA0DA429C330B700ECEF6B /* ValidPalindrome .swift in Sources */,
				C4CA0D8529BC4F0500ECEF6B /* SumOfLeftLeaves .swift in Sources */,
				C454CE8C2A1F9B50006BB982 /* N-aryTreeLevelOrderTraversal .swift in Sources */,
				C4FC5EFB29A4B509001CDED1 /* LargestPerimeterTriangle .swift in Sources */,
				C4CA0D9929BF6A8E00ECEF6B /* LongestCommonPrefix .swift in Sources */,
				C4CA0D7829B8DE6700ECEF6B /* ListNode.swift in Sources */,
				C4CA0D7D29BC3FDA00ECEF6B /* MaximumDepthOfBinaryTree.swift in Sources */,
				C4CA0D5029B2333100ECEF6B /* CheckIfItIsAStraightLine .swift in Sources */,
				C4549C532A06998E006BB982 /* DailyTemperatures .swift in Sources */,
				C4CA0D9F29C0CD7D00ECEF6B /* SetMatrixZeroes .swift in Sources */,
				C4CA0D9329BE2DD000ECEF6B /* DesignParkingSystem .swift in Sources */,
				C4FC5EF829A4A380001CDED1 /* SubtractTheProductAndSumOfDigitsOfAnInteger .swift in Sources */,
				C461DD4229E6F5CA00FB7CC0 /* RepeatedSubstringPattern.swift in Sources */,
				C4CA0D6429B63D5F00ECEF6B /* MergeStringsAlternately .swift in Sources */,
				C4CA0D7629B8BD3800ECEF6B /* ConvertBinaryNumberInALinkedListToInteger .swift in Sources */,
				C4FC5EFE29A66583001CDED1 /* FindNearestPointThatHasTheSameXOrYCoordinate.swift in Sources */,
				C454CE892A1F945D006BB982 /* ArithmeticSubarrays .swift in Sources */,
				C461DD4629E99E7100FB7CC0 /* PlusOne.swift in Sources */,
				C4CA0D7329B89C0900ECEF6B /* VerifyingAnAlienDictionary .swift in Sources */,
				C4CA0D7029B715E600ECEF6B /* DecryptStringFromAlphabetToIntegerMapping .swift in Sources */,
				C4CA0D8F29BDDAF100ECEF6B /* ContainsDuplicate .swift in Sources */,
				C4549C592A092836006BB982 /* DetermineWhetherMatrixCanBeObtainedByRotation.swift in Sources */,
				C4CA0D9C29C09B1C00ECEF6B /* Pow(x, n) .swift in Sources */,
				C4CA0D7B29B8E47100ECEF6B /* MiddleOfTheLinkedList .swift in Sources */,
				C4FC5F0E29AE5B9D001CDED1 /* Node.swift in Sources */,
				C4FC5F0129A900D5001CDED1 /* SignOfTheProductOfAnArray .swift in Sources */,
				C4CA0D8B29BCD9BD00ECEF6B /* ImplementQueueUsingStacks .swift in Sources */,
				C4CA0D6A29B7094B00ECEF6B /* FindTheDifference .swift in Sources */,
				C4FC5ED729A384FA001CDED1 /* main.swift in Sources */,
				C4549C572A07F062006BB982 /* RotateImage.swift in Sources */,
				C461DD4829EAF2BC00FB7CC0 /* LinkedListInBinaryTree.swift in Sources */,
				C4CA0D5F29B4F20C00ECEF6B /* MatrixDiagonalSum .swift in Sources */,
				C461DD4429E858D100FB7CC0 /* EvaluateReversePolishNotation.swift in Sources */,
				C4FC5EF329A3C3B6001CDED1 /* AverageSalaryExcludingTheMinimumAndMaximumSalary .swift in Sources */,
				C4CA0D5929B3A83100ECEF6B /* NextGreaterElementI .swift in Sources */,
				C4CA0D9629BE32C000ECEF6B /* RangeSumQuery.swift in Sources */,
				C4C19DED2A2C38B900DD292D /* Company1Code.swift in Sources */,
				C4CA0D8929BC7B2A00ECEF6B /* SortIntegersByTheNumberOf1Bits .swift in Sources */,
				C4CA0D7F29BC401900ECEF6B /* TreeNode.swift in Sources */,
				C4549C602A0A1550006BB982 /* KClosestPointsToOrigin.swift in Sources */,
				C4FC5F0929AD0975001CDED1 /* CheckIfOneStringSwapCanMakeStringsEqual .swift in Sources */,
				C461DD9229F172C900FB7CC0 /* MultiplyStrings.swift in Sources */,
				C4CA0D5629B2E26D00ECEF6B /* MoveZeroes .swift in Sources */,
				C4FC5F0429AA5C77001CDED1 /* CanMakeArithmeticProgressionFromSequence .swift in Sources */,
				C4549C502A0549DB006BB982 /* AddToArrayFormOfInteger.swift in Sources */,
				C4CA0D8D29BCDBAF00ECEF6B /* ValidAnagram .swift in Sources */,
				C4FC5F0C29AE5B66001CDED1 /* N-aryTreePreorderTraversal .swift in Sources */,
				C4CA0DA929C4C64500ECEF6B /* MonotonicArray .swift in Sources */,
				C4CA0D5429B24F4800ECEF6B /* SumOfAllOddLengthSubarrays .swift in Sources */,
				C461DD3F29E3E45200FB7CC0 /* MinimumDepthOfBinaryTree .swift in Sources */,
				C461DD3C29E1AC7A00FB7CC0 /* BalancedBinaryTree.swift in Sources */,
				C4FC5EF529A497EC001CDED1 /* NumberOf1Bits.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin XCBuildConfiguration section */
		C4130DA01D40AA9600AB673F /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				CODE_SIGN_IDENTITY = "-";
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.11;
				MTL_ENABLE_DEBUG_INFO = YES;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = macosx;
			};
			name = Debug;
		};
		C4130DA11D40AA9600AB673F /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				CODE_SIGN_IDENTITY = "-";
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.11;
				MTL_ENABLE_DEBUG_INFO = NO;
				SDKROOT = macosx;
			};
			name = Release;
		};
		C42241DF27BC5EF300E5B034 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CODE_SIGN_STYLE = Automatic;
				DEVELOPMENT_TEAM = 2658KK4JZ7;
				ENABLE_HARDENED_RUNTIME = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "$(SRCROOT)/LeetCode-main/PrefixHeader.pch";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/../Frameworks @loader_path/../Frameworks";
				MACOSX_DEPLOYMENT_TARGET = 11.2;
				MTL_ENABLE_DEBUG_INFO = INCLUDE_SOURCE;
				MTL_FAST_MATH = YES;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_OBJC_BRIDGING_HEADER = "Math/1523-Count_Odd_Numbers_in_an_Interval_Range /LeetCode-main-Bridging-Header.h";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
			};
			name = Debug;
		};
		C42241E027BC5EF300E5B034 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CODE_SIGN_STYLE = Automatic;
				DEVELOPMENT_TEAM = 2658KK4JZ7;
				ENABLE_HARDENED_RUNTIME = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "$(SRCROOT)/LeetCode-main/PrefixHeader.pch";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/../Frameworks @loader_path/../Frameworks";
				MACOSX_DEPLOYMENT_TARGET = 11.2;
				MTL_FAST_MATH = YES;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_OBJC_BRIDGING_HEADER = "Math/1523-Count_Odd_Numbers_in_an_Interval_Range /LeetCode-main-Bridging-Header.h";
				SWIFT_VERSION = 5.0;
			};
			name = Release;
		};
		C4FC5ED929A384FA001CDED1 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++20";
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CODE_SIGN_STYLE = Automatic;
				DEVELOPMENT_TEAM = 2658KK4JZ7;
				ENABLE_HARDENED_RUNTIME = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				MACOSX_DEPLOYMENT_TARGET = 13.1;
				MTL_ENABLE_DEBUG_INFO = INCLUDE_SOURCE;
				MTL_FAST_MATH = YES;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = DEBUG;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
			};
			name = Debug;
		};
		C4FC5EDA29A384FA001CDED1 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++20";
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CODE_SIGN_STYLE = Automatic;
				DEVELOPMENT_TEAM = 2658KK4JZ7;
				ENABLE_HARDENED_RUNTIME = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				MACOSX_DEPLOYMENT_TARGET = 13.1;
				MTL_FAST_MATH = YES;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_OPTIMIZATION_LEVEL = "-Owholemodule";
				SWIFT_VERSION = 5.0;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		C4130D961D40AA9600AB673F /* Build configuration list for PBXProject "LeetCode" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				C4130DA01D40AA9600AB673F /* Debug */,
				C4130DA11D40AA9600AB673F /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		C42241DE27BC5EF300E5B034 /* Build configuration list for PBXNativeTarget "LeetCode-main" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				C42241DF27BC5EF300E5B034 /* Debug */,
				C42241E027BC5EF300E5B034 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		C4FC5ED829A384FA001CDED1 /* Build configuration list for PBXNativeTarget "LeetCode-Swift" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				C4FC5ED929A384FA001CDED1 /* Debug */,
				C4FC5EDA29A384FA001CDED1 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = C4130D931D40AA9600AB673F /* Project object */;
}
